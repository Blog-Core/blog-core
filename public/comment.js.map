{
  "version": 3,
  "sources": [
    "/home/raivo/blog-core/comment/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/home/raivo/blog-core/comment/comment.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "// Trim shim for IE8.\n\nif (typeof String.prototype.trim !== 'function') {\n\n    String.prototype.trim = function() {\n\n        return this.replace(/^\\s+|\\s+$/g, '');\n    };\n}\n\n// Helper for API queries.\n\nvar api = {\n\n    // Retrieves captcha question.\n\n    question: function(cb) {\n\n        var xhr = new XMLHttpRequest();\n\n        xhr.open('GET', '/api/question', true);\n\n        xhr.onreadystatechange = api.ready(xhr, cb);\n\n        xhr.send();\n    },\n\n    // Sends new comment.\n\n    post: function(id, values, cb) {\n\n        var xhr = new XMLHttpRequest();\n\n        var url = '/api/post/' + encodeURIComponent(id) + '/comment';\n\n        xhr.open('POST', url, true);\n\n        xhr.setRequestHeader('Content-Type', 'application/json');\n\n        xhr.onreadystatechange = api.ready(xhr, cb);\n\n        xhr.send(JSON.stringify(data));\n    },\n\n    // Returns function for state change.\n\n    ready: function(xhr, cb) {\n\n        return function() {\n\n            if (xhr.readyState === 4) {\n\n                if (xhr.status === 200) {\n\n                    cb(null, JSON.parse(xhr.responseText));\n\n                } else {\n\n                    cb(new Error('API error.'));\n                }\n            }\n        }\n    }\n};\n\n// Helper to extract values from input elements.\n\nvar input = {\n\n    string: function(element) {\n\n        return element ? element.value.trim() : undefined;\n    },\n\n    check: function(element) {\n\n        return element ? element.checked : false;\n    },\n\n    int: function(element) {\n\n        return element ? parseInt(element.value, 10) : undefined;\n    }\n};\n\n// Helpers to validate data.\n\nvar validator = {\n\n    // String validators.\n\n    string: {\n\n        is_set: function(value, list) {\n\n            if (typeof value === 'undefined' ||\n                value.length === 0) {\n\n                list.push('__ must be set.');\n            }\n        },\n\n        email: function(value, list) {\n\n            if (typeof value === 'string' &&\n                value !== '' &&\n                !value.match(/[^@]+@[^@]+/)) {\n\n                list.push('__ must match email pattern.');\n            }\n        },\n\n        site: function(value, list) {\n\n            if (typeof value === 'string' &&\n                value !== '' &&\n                !value.match(/https?:\\/\\//)) {\n\n                list.push('__ must match URL pattern.');\n            }\n        }\n    },\n\n    // Checks array of validators.\n\n    check: function(row, key, value) {\n\n        var list = [];\n\n        var validators = row.validators || [];\n\n        for (var i = 0; i < validators.length; i++) {\n\n            validators[i].call(null, value, list);\n        }\n\n        var label = key.substring(0, 1).toUpperCase() +\n            key.substring(1);\n\n        for (var j = 0; j < list.length; j++) {\n\n            list[j] = list[j].replace('__', label);\n        }\n\n        return list;\n    }\n};\n\n// Helper to work with DOM classes.\n\nvar clazz = {\n\n    list: function(element) {\n\n        return element.className.split(/\\s+/);\n    },\n\n    // Removes element class.\n\n    remove: function(element, cls) {\n\n        var list = clazz.list(element);\n\n        var removed = [];\n\n        for (var i = 0; i < list.length; i++) {\n\n            if (list[i] !== cls && list[i] !== '') {\n\n                removed.push(list[i]);\n            }\n        }\n\n        element.className = removed.join(' ');\n    },\n\n    // Adds element class.\n\n    add: function(element, cls) {\n\n        var list = clazz.list(element);\n\n        var found = false;\n\n        for (var i = 0; i < list.length; i++) {\n\n            if (list[i] === cls) {\n\n                found = true;\n            }\n        }\n\n        if (!found) {\n\n            list.push(cls);\n        }\n\n        element.className = list.join(' ');\n    }\n};\n\n// Helper to manage form errors.\n\nvar errors = {\n\n    // Adds new error.\n\n    display: function(row, message) {\n\n        clazz.add(row.element.parentNode, 'error');\n\n        row.error = document.createElement('div');\n\n        row.error.innerHTML = message;\n\n        row.element.parentNode.appendChild(row.error);\n    },\n\n    // Removes all errors.\n\n    remove: function(row) {\n\n        var type = row.element.getAttribute('type');\n\n        // Ignore hidden inputs.\n\n        if (type !== 'hidden') {\n\n            clazz.remove(row.element.parentNode, 'error');\n        }\n\n        if (row.error) {\n\n            row.error.parentNode.removeChild(row.error);\n\n            delete row.error;\n        }\n    }\n};\n\n// Helper that processes inputs object.\n\nvar reader = {\n\n    // Reads data from the form descriptor.\n\n    read: function(desc) {\n\n        var valid = true;\n\n        var values = {};\n\n        reader.each(desc, function(row, key) {\n\n            errors.remove(row);\n\n            var value = input[row.type](row.element);\n\n            var list = validator.check(row, key, value);\n\n            if (list.length > 0) {\n\n                valid = false;\n\n                errors.display(row, list.join(' '));\n            }\n\n            if (typeof value !== 'undefined') {\n\n                values[key] = value;\n            }\n        });\n\n        return { values: values, valid: valid };\n    },\n\n    // Runs callback for each input.\n\n    each: function(desc, cb) {\n\n        for (var key in desc) {\n\n            var row = desc[key];\n\n            // Consider only defined elements.\n\n            if (row.element) {\n\n                cb(row, key);\n            }\n        }\n    }\n};\n\nmodule.exports = function(options) {\n\n    if (typeof options.form === 'string') {\n\n        options.form = document.querySelector(options.form);\n    }\n\n    if (typeof options.question === 'string') {\n\n        options.question = document.querySelector(options.question);\n    }\n\n    if (!options.form) {\n\n        throw new Error('Comment form element not specified.');\n    }\n\n    if (!options.question) {\n\n        throw new Error('Verification question element not specified.');\n    }\n\n    if (!options.message) {\n\n        throw new Error('Feedback message/error element not specified.');\n    }\n\n    var form = options.form;\n\n    var elements = form.elements;\n\n    var data = {\n\n        post_id: {\n\n            type: 'string',\n\n            element: elements.post_id\n        },\n\n        reply_to: {\n\n            type: 'string',\n\n            element: elements.reply_to\n        },\n\n        author: {\n\n            type: 'string',\n\n            validators: [ validator.string.is_set ],\n\n            element: elements.author\n        },\n\n        email: {\n\n            type: 'string',\n\n            validators: [ validator.string.email ],\n\n            element: elements.email\n        },\n\n        site: {\n\n            type: 'string',\n\n            validators: [ validator.string.site ],\n\n            element: elements.site\n        },\n\n        content: {\n\n            type: 'string',\n\n            validators: [ validator.string.is_set ],\n\n            element: elements.content\n        },\n\n        notify: {\n\n            type: 'check',\n\n            element: elements.notify\n        },\n\n        question: {\n\n            type: 'int',\n\n            element: elements.question\n        },\n\n        answer: {\n\n            type: 'string',\n\n            validators: [ validator.string.is_set ],\n\n            element: elements.answer\n        }\n    };\n\n    api.question(function(err, response) {\n\n        if (err) {\n\n\n        } else {\n\n            // TODO check that question element is set.\n            // TODO check response status\n\n            options.question.innerHTML = response.data.question;\n        }\n    });\n\n    form.onsubmit = function() {\n\n        var result = reader.read(data);\n\n        console.log(JSON.stringify(result, null, 2));\n\n        return false;\n    };\n};\n"
  ]
}