{
  "version": 3,
  "sources": [
    "/home/raivo/blog-core/admin/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/home/raivo/blog-core/admin/admin.js",
    "/home/raivo/blog-core/admin/lib/api.js",
    "/home/raivo/blog-core/admin/lib/assign.js",
    "/home/raivo/blog-core/admin/lib/editor.js",
    "/home/raivo/blog-core/admin/lib/form_error.js",
    "/home/raivo/blog-core/admin/lib/languages.js",
    "/home/raivo/blog-core/admin/lib/message.js",
    "/home/raivo/blog-core/admin/lib/pages/comments.js",
    "/home/raivo/blog-core/admin/lib/pages/email.js",
    "/home/raivo/blog-core/admin/lib/pages/login.js",
    "/home/raivo/blog-core/admin/lib/pages/post.js",
    "/home/raivo/blog-core/admin/lib/pages/posts.js",
    "/home/raivo/blog-core/admin/lib/pages/trash.js",
    "/home/raivo/blog-core/admin/lib/pages/user.js",
    "/home/raivo/blog-core/admin/lib/pages/users.js",
    "/home/raivo/blog-core/admin/lib/preview.js",
    "/home/raivo/blog-core/admin/lib/resolve_object.js",
    "/home/raivo/blog-core/admin/lib/spinner.js",
    "/home/raivo/blog-core/admin/lib/view.js",
    "/home/raivo/blog-core/admin/lib/vm/comments_item.js",
    "/home/raivo/blog-core/admin/lib/vm/expandable.js",
    "/home/raivo/blog-core/admin/lib/vm/files_item.js",
    "/home/raivo/blog-core/admin/lib/vm/post.js",
    "/home/raivo/blog-core/admin/lib/vm/posts_item.js",
    "/home/raivo/blog-core/admin/lib/vm/trash_item.js",
    "/home/raivo/blog-core/admin/lib/vm/user.js",
    "/home/raivo/blog-core/admin/lib/vm/users_item.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var api = require('./lib/api');\nvar message = require('./lib/message');\nvar login = require('./lib/pages/login');\nvar posts = require('./lib/pages/posts');\nvar post = require('./lib/pages/post');\nvar users = require('./lib/pages/users');\nvar user = require('./lib/pages/user');\nvar email = require('./lib/pages/email');\nvar comments = require('./lib/pages/comments');\nvar trash = require('./lib/pages/trash');\n\n// Errors binding.\n\nrequire('./lib/form_error');\n\n// Global to format dates.\n\nwindow.formatDate = function(ts) {\n\n    return new Date(1000 * ts).toISOString().substring(0, 10);\n};\n\n// The page menu.\n\nvar menu = {\n\n    active: ko.observable(),\n\n    types: ko.observable(),\n\n    load: function() {\n\n        if (menu.types()) {\n\n            // Menu updated.\n\n            return Promise.resolve(menu.types());\n        }\n\n        return api.types().then(function(types) {\n\n            menu.types(types);\n\n            return types;\n        });\n    }\n};\n\n// Binds menu.\n\nko.applyBindings(menu,\n    document.getElementById('menu'));\n\n// Returns true when user is authenticated.\n// Redirects user if he/she is not\n// authenticated.\n\nfunction authenticated() {\n\n    if (api.hasKey()) {\n\n        // If user is authenticated then\n        // check if custom menu entries need\n        // reloading.\n\n        menu.load().catch(message.error);\n\n        return true;\n\n    } else {\n\n        route.go('login');\n    }\n\n    return false;\n}\n\nvar recovered;\n\n// Offers recovery option and returns\n// true when user accepts it.\n\nfunction recovery() {\n\n    // Offer recover option to the user.\n\n    var autosave = localStorage.getItem('autosave');\n\n    if (autosave) {\n\n        var data = JSON.parse(autosave);\n\n        // Remove entry from localStorage.\n\n        localStorage.removeItem('autosave');\n\n        // Ask confirmation.\n\n        if (confirm('You have unsaved entry \"' + data.title + '\",' +\n            ' would you like to recover it?')) {\n\n            // Assign global data that is used for\n            // actual recovery.\n\n            recovered = data;\n\n            // Redirect to transient route.\n\n            route.go('recover');\n\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// Transient route for recovering\n// an entry.\n\nroute(/^recover$/, function() {\n\n    if (authenticated() && !recovery()) {\n\n        if (recovered) {\n\n            if (recovered.$id) {\n\n                // Recover existing post.\n\n                route.go('entry/' + recovered.type +\n                    '/' + recovered.$id);\n\n            } else {\n\n                // Recover new post.\n\n                route.go('new/' + recovered.type);\n            }\n\n        } else {\n\n            route.go('landing');\n        }\n    }\n});\n\nroute(/^entries\\/([^\\/]+)/, function(type) {\n\n    if (authenticated() && !recovery()) {\n\n        menu.active(type);\n\n        posts.create(type).catch(message.error);\n    }\n});\n\nroute(/^entry\\/([^\\/]+)\\/([^\\/]+)/, function(type, id) {\n\n    if (authenticated() && !recovery()) {\n\n        menu.active(type);\n\n        // Include recovery data (can be undefined).\n\n        post.create(type, id, recovered).catch(message.error);\n\n        recovered = undefined;\n    }\n});\n\nroute(/^new\\/([^\\/]+)/, function(type) {\n\n    if (authenticated() && !recovery()) {\n\n        menu.active(type);\n\n        // Include recovery data (can be undefined).\n\n        post.create(type, null, recovered).catch(message.error);\n\n        recovered = undefined;\n    }\n});\n\nroute(/^comments\\/([^\\/]+)\\/([^\\/]+)/, function(type, id) {\n\n    if (authenticated() && !recovery()) {\n\n        menu.active(type);\n\n        comments.create(type, id).catch(message.error);\n    }\n});\n\nroute(/^trash/, function() {\n\n    if (authenticated() && !recovery()) {\n\n        menu.active('trash');\n\n        trash.create().catch(message.error);\n    }\n});\n\nroute(/^users/, function() {\n\n    if (authenticated() && !recovery()) {\n\n        menu.active('users');\n\n        users.create().catch(message.error);\n    }\n});\n\nroute(/^user\\/new/, function() {\n\n    if (authenticated() && !recovery()) {\n\n        menu.active('users');\n\n        user.create().catch(message.error);\n    }\n});\n\nroute(/^user\\/([^\\/]+)/, function(id) {\n\n    if (authenticated() && !recovery()) {\n\n        menu.active('users');\n\n        user.create(id).catch(message.error);\n    }\n});\n\nroute(/^login/, function() {\n\n    menu.active(null);\n\n    login.create().catch(message.error);\n});\n\nroute(/^email/, function() {\n\n    if (authenticated() && !recovery()) {\n\n        menu.active('email');\n\n        email.create().catch(message.error);\n    }\n});\n\nroute(/^logout/, function() {\n\n    sessionStorage.removeItem('api-key');\n\n    localStorage.removeItem('api-key');\n\n    window.location = '/admin';\n});\n\n// Temporary route that decides\n// where to go.\n\nroute(/^landing/, function() {\n\n    menu.active(null);\n\n    menu.load().then(function(types) {\n\n        if (types.length > 0) {\n\n            // Select first type.\n\n            route.go('entries/' + types[0].name);\n        }\n\n    }).catch(message.error);\n});\n\nroute(/.*/, function() {\n\n    route.go(api.hasKey() ? 'landing' : 'login');\n});\n\ndocument.body.addEventListener('click', function(e) {\n\n    if (e.target.href && e.target.href.match(/#logout$/)) {\n\n        if (confirm('Do you want to log out?')) {\n\n            return true;\n\n        } else {\n\n            e.stopPropagation();\n\n            e.preventDefault();\n\n            return false;\n        }\n    }\n\n}, false);\n",
    "var spinner = require('./spinner');\n\nvar showCount = 0;\n\nfunction spinnerShow() {\n\n    if (showCount === 0) {\n\n        spinner.show();\n    }\n\n    showCount += 1;\n}\n\nfunction spinnerHide() {\n\n    showCount -= 1;\n\n    if (showCount === 0) {\n\n        spinner.hide();\n    }\n}\n\nfunction fetchGet(url) {\n\n    spinnerShow();\n\n    return fetch(url, {\n\n        headers: {\n\n            'Accept': 'application/json',\n            'X-Key': apiKey()\n        }\n\n    }).catch(function(err) {\n\n        spinnerHide();\n\n        throw err;\n\n    }).then(handleResponse);\n}\n\nfunction fetchDelete(url) {\n\n    spinnerShow();\n\n    return fetch(url, {\n\n        method: 'DELETE',\n\n        headers: {\n\n            'Accept': 'application/json',\n            'X-Key': apiKey()\n        }\n\n    }).catch(function(err) {\n\n        spinnerHide();\n\n        throw err;\n\n    }).then(handleResponse);\n}\n\nfunction fetchPost(url, data, noauth) {\n\n    spinnerShow();\n\n    var headers = {\n\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    };\n\n    if (!noauth) {\n\n        headers['X-Key'] = apiKey();\n    }\n\n    return fetch(url, {\n\n        method: 'POST',\n\n        headers: headers,\n\n        body: JSON.stringify(data)\n\n    }).catch(function(err) {\n\n        spinnerHide();\n\n        throw err;\n\n    }).then(handleResponse);\n}\n\nfunction fetchUpdate(url, data) {\n\n    spinnerShow();\n\n    return fetch(url, {\n\n        method: 'PUT',\n\n        headers: {\n\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-Key': apiKey()\n        },\n\n        body: JSON.stringify(data)\n\n    }).catch(function(err) {\n\n        spinnerHide();\n\n        throw err;\n\n    }).then(handleResponse);\n}\n\nfunction fetchUploadFile(url, file) {\n\n    spinnerShow();\n\n    return fetch(url, {\n\n        method: 'POST',\n\n        headers: {\n\n            'Accept': 'application/json',\n            'Content-Type': 'application/octet-stream',\n            'X-Key': apiKey(),\n            'X-File-Name': file.name\n        },\n\n        body: file\n\n    }).catch(function(err) {\n\n        spinnerHide();\n\n        throw err;\n\n    }).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n\n    spinnerHide();\n\n    return response.json().then(function(json) {\n\n        if (json.status === 'success') {\n\n            return json.data;\n\n        } else {\n\n            var err = new Error('API response is not success: ' + json.message);\n\n            err.jsendMessage = json.message;\n\n            throw err;\n        }\n    });\n}\n\n// Uploads entry file.\n\nexports.upload = function(id, file) {\n\n    return fetchUploadFile('/api/upload/' + encodeURIComponent(id), file);\n};\n\n// Login with credentials.\n\nexports.login = function(username, password) {\n\n    return fetchPost('/api/auth', {\n        username: username, password: password }, true);\n};\n\n// List of entries.\n\nexports.posts = function(type) {\n\n    return fetchGet('/api/entries/' + encodeURIComponent(type));\n};\n\n// The given entry.\n\nexports.post = function(id) {\n\n    return fetchGet('/api/entry/' + encodeURIComponent(id));\n};\n\n// The entry info.\n\nexports.entryInfo = function(id) {\n\n    return fetchGet('/api/entry/' + encodeURIComponent(id) + '/info');\n};\n\n// Retrieves the given entry comments.\n\nexports.comments = function(id) {\n\n    return fetchGet('/api/post/' + encodeURIComponent(id) + '/comments');\n};\n\n// Removes the given comment.\n\nexports.removeComment = function(entryId, id) {\n\n    return fetchDelete('/api/comment/' + encodeURIComponent(entryId) +\n            '/' + encodeURIComponent(id));\n};\n\n// Updates the given post.\n\nexports.updatePost = function(id, data) {\n\n    return fetchUpdate('/api/entry/' + encodeURIComponent(id), data);\n};\n\n// Saves the given post.\n\nexports.savePost = function(data) {\n\n    return fetchPost('/api/entry', data);\n};\n\n// Removes the given post.\n\nexports.removePost = function(id) {\n\n    return fetchDelete('/api/entry/' + encodeURIComponent(id));\n};\n\n// Finds entry files.\n\nexports.files = function(entryId) {\n\n    return fetchGet('/api/files/' + encodeURIComponent(entryId));\n};\n\n// Removes the given entry file.\n\nexports.removeFile = function(entryId, file) {\n\n    return fetchDelete('/api/file/' + encodeURIComponent(entryId) +\n            '/' + encodeURIComponent(file));\n};\n\n// Retrieves all users.\n\nexports.users = function() {\n\n    return fetchGet('/api/users');\n};\n\n// Retrieves the given user.\n\nexports.user = function(id) {\n\n    return fetchGet('/api/user/' + encodeURIComponent(id));\n};\n\n// Retrieves the current user info.\n\nexports.userInfo = function() {\n\n    return fetchGet('/api/user/info');\n};\n\n// Updates the given user.\n\nexports.updateUser = function(id, data) {\n\n    return fetchUpdate('/api/user/' + encodeURIComponent(id), data);\n};\n\n// Saves the new user.\n\nexports.saveUser = function(data) {\n\n    return fetchPost('/api/user', data);\n};\n\n// Removes the given user.\n\nexports.removeUser = function(id) {\n\n    return fetchDelete('/api/user/' + encodeURIComponent(id));\n};\n\n// Finds entry types.\n\nexports.types = function() {\n\n    return fetchGet('/api/types');\n};\n\n// Finds entry type info.\n\nexports.typeInfo = function(type) {\n\n    return fetchGet('/api/type/' + encodeURIComponent(type));\n};\n\n// Finds user roles.\n\nexports.roles = function() {\n\n    return fetchGet('/api/roles');\n};\n\n// Finds trash items.\n\nexports.trash = function() {\n\n    return fetchGet('/api/trash');\n};\n\n// Removes the given entry from trash.\n\nexports.removeFromTrash = function(id) {\n\n    return fetchDelete('/api/trash/' + encodeURIComponent(id));\n};\n\n// Purges the whole trash.\n\nexports.purge = function() {\n\n    return fetchDelete('/api/trash');\n};\n\n// Restores item in trash.\n\nexports.restore = function(id) {\n\n    return fetchUpdate('/api/restore/' + encodeURIComponent(id));\n};\n\n// Finds configuration entries.\n\nexports.config = function() {\n\n    return fetchGet('/api/configs');\n};\n\n// Updates configuration entries.\n// Takes array of objects with name and\n// value properties.\n\nexports.updateConfig = function(array) {\n\n    return fetchUpdate('/api/configs', array);\n};\n\n// Tests the given mail settings.\n\nexports.testMail = function(settings) {\n\n    return fetchPost('/api/mail/test', settings);\n};\n\n// List of all tags for the type.\n\nexports.tags = function(type) {\n\n    return fetchGet('/api/tags/' + encodeURIComponent(type) + '/all');\n};\n\n// Retrieves image size for the file.\n\nexports.imageSize = function(entryId, file) {\n\n    return fetchGet('/api/image/size/' + encodeURIComponent(entryId) +\n        '/' + encodeURIComponent(file));\n};\n\n// Checks whether the API key has been set.\n\nexports.hasKey = function() {\n\n    return !!(sessionStorage.getItem('api-key') ||\n        localStorage.getItem('api-key'));\n};\n\nvar apiKey = exports.apiKey = function() {\n\n    var key = sessionStorage.getItem('api-key') ||\n        localStorage.getItem('api-key');\n\n    if (!key) {\n\n        throw new Error('API key is not set');\n    }\n\n    return key;\n};\n",
    "// Copies properties from one object to another.\n\nmodule.exports = function(to, from) {\n\n    Object.keys(from).forEach(function(key) {\n\n        to[key] = from[key];\n    });\n};\n",
    "var editor;\n\n// Enables editor for the current page.\n\nexports.enable = function() {\n\n    // Setup Ace\n\n    editor = ace.edit('editor');\n\n    editor.$blockScrolling = Infinity;\n\n    editor.container.style.lineHeight = 1.5;\n\n    editor.setOptions({\n\n        maxLines: Infinity,\n\n        showLineNumbers: false,\n\n        wrap: true,\n\n        showPrintMargin: false,\n\n        showFoldWidgets: false,\n\n        showGutter: false,\n\n        displayIndentGuides: false,\n\n        fontSize: 14,\n\n        fontFamily: 'monospace',\n\n        useSoftTabs: true,\n\n        tabSize: 2\n    });\n\n    // Theme\n\n    editor.setTheme('ace/theme/github');\n\n    // Mode\n\n    editor.getSession().setMode('ace/mode/markdown');\n};\n\n// Sets the softWrap property for the editor.\n\nexports.setSoftWrap = function(softWrap) {\n\n    if (editor) {\n\n        editor.getSession().setWrapLimitRange(softWrap, softWrap);\n    }\n};\n\n// Sets the editor content\n// and initial cursor position.\n\nexports.begin = function(content) {\n\n    editor.setValue(content);\n\n    // Remove editor's undo log.\n\n    editor.getSession().setUndoManager(new ace.UndoManager());\n\n    // Go to first line\n\n    editor.focus();\n\n    editor.gotoLine(1);\n};\n\n// Sets callback to be called\n// when editor contents is modified.\n\nexports.change = function(callback) {\n\n    editor.on('change', callback);\n};\n\n// Focuses on the editor.\n\nexports.focus = function() {\n\n    editor.focus();\n};\n\n// Returns the current editor\n// content.\n\nexports.content = function() {\n\n    return editor.getValue();\n};\n\n// Inserts into current ACE editor\n// at the cursor.\n\nexports.insert = function(text) {\n\n    if (editor) {\n\n        editor.insert(text);\n    }\n};\n\n// Sets editor content.\n\nexports.setValue = function(text) {\n\n    if (editor) {\n\n        editor.setValue(text);\n    }\n};\n\n// Cleans up the current editor.\n// FIXME remove change callback.\n\nexports.dispose = function() {\n\n    if (editor) {\n\n        editor.destroy();\n\n        editor = null;\n    }\n};\n",
    "function setErrors(element, valueAccessor) {\n\n    var value = ko.unwrap(valueAccessor());\n\n    if (value.length > 0) {\n\n        var span = element.querySelector('.ko-input-error');\n\n        if (!span) {\n\n            // No existing error display.\n\n            if (!element.className.match(/has\\-error/)) {\n\n                element.className = element.className + ' has-error';\n            }\n\n            span = document.createElement('span');\n\n            span.className = 'help-block ko-input-error';\n\n            // Finds the holder element.\n\n            var holder = element.querySelector('.checkbox');\n\n            if (!holder) {\n\n                holder = element.querySelector('.form-control');\n            }\n\n            holder.parentNode.appendChild(span);\n        }\n\n        // Update errors display.\n\n        span.innerHTML = value.join(' ');\n\n    } else {\n\n        // Removes error class and messages.\n\n        element.className = element.className.replace(/has\\-error/, '');\n        element.className = element.className.replace(/\\s+/, ' ');\n\n        var error = element.querySelector('.ko-input-error');\n\n        if (error) {\n\n            error.parentNode.removeChild(error);\n        }\n    }\n}\n\n// Defines the errors binding.\n\nko.bindingHandlers.errors = {\n\n    init: function(element, valueAccessor) {\n\n        setErrors(element, valueAccessor);\n    },\n\n    update: function(element, valueAccessor, allBindings) {\n\n        setErrors(element, valueAccessor);\n    }\n};\n",
    "// http://stackoverflow.com/questions/3217492/list-of-language-codes-in-yaml-or-json\n// @author Phil Teare\n// using wikipedia data\n\nmodule.exports = [\n    {\n        'code': 'ab',\n        'name': 'Abkhaz'\n    },\n    {\n        'code': 'aa',\n        'name': 'Afar'\n    },\n    {\n        'code': 'af',\n        'name': 'Afrikaans'\n    },\n    {\n        'code': 'ak',\n        'name': 'Akan'\n    },\n    {\n        'code': 'sq',\n        'name': 'Albanian'\n    },\n    {\n        'code': 'am',\n        'name': 'Amharic'\n    },\n    {\n        'code': 'ar',\n        'name': 'Arabic'\n    },\n    {\n        'code': 'an',\n        'name': 'Aragonese'\n    },\n    {\n        'code': 'hy',\n        'name': 'Armenian'\n    },\n    {\n        'code': 'as',\n        'name': 'Assamese'\n    },\n    {\n        'code': 'av',\n        'name': 'Avaric'\n    },\n    {\n        'code': 'ae',\n        'name': 'Avestan'\n    },\n    {\n        'code': 'ay',\n        'name': 'Aymara'\n    },\n    {\n        'code': 'az',\n        'name': 'Azerbaijani'\n    },\n    {\n        'code': 'bm',\n        'name': 'Bambara'\n    },\n    {\n        'code': 'ba',\n        'name': 'Bashkir'\n    },\n    {\n        'code': 'eu',\n        'name': 'Basque'\n    },\n    {\n        'code': 'be',\n        'name': 'Belarusian'\n    },\n    {\n        'code': 'bn',\n        'name': 'Bengali'\n    },\n    {\n        'code': 'bh',\n        'name': 'Bihari'\n    },\n    {\n        'code': 'bi',\n        'name': 'Bislama'\n    },\n    {\n        'code': 'bs',\n        'name': 'Bosnian'\n    },\n    {\n        'code': 'br',\n        'name': 'Breton'\n    },\n    {\n        'code': 'bg',\n        'name': 'Bulgarian'\n    },\n    {\n        'code': 'my',\n        'name': 'Burmese'\n    },\n    {\n        'code': 'ca',\n        'name': 'Catalan; Valencian'\n    },\n    {\n        'code': 'ch',\n        'name': 'Chamorro'\n    },\n    {\n        'code': 'ce',\n        'name': 'Chechen'\n    },\n    {\n        'code': 'ny',\n        'name': 'Chichewa; Chewa; Nyanja'\n    },\n    {\n        'code': 'zh',\n        'name': 'Chinese'\n    },\n    {\n        'code': 'cv',\n        'name': 'Chuvash'\n    },\n    {\n        'code': 'kw',\n        'name': 'Cornish'\n    },\n    {\n        'code': 'co',\n        'name': 'Corsican'\n    },\n    {\n        'code': 'cr',\n        'name': 'Cree'\n    },\n    {\n        'code': 'hr',\n        'name': 'Croatian'\n    },\n    {\n        'code': 'cs',\n        'name': 'Czech'\n    },\n    {\n        'code': 'da',\n        'name': 'Danish'\n    },\n    {\n        'code': 'dv',\n        'name': 'Divehi; Dhivehi; Maldivian;'\n    },\n    {\n        'code': 'nl',\n        'name': 'Dutch'\n    },\n    {\n        'code': 'en',\n        'name': 'English'\n    },\n    {\n        'code': 'eo',\n        'name': 'Esperanto'\n    },\n    {\n        'code': 'et',\n        'name': 'Estonian'\n    },\n    {\n        'code': 'ee',\n        'name': 'Ewe'\n    },\n    {\n        'code': 'fo',\n        'name': 'Faroese'\n    },\n    {\n        'code': 'fj',\n        'name': 'Fijian'\n    },\n    {\n        'code': 'fi',\n        'name': 'Finnish'\n    },\n    {\n        'code': 'fr',\n        'name': 'French'\n    },\n    {\n        'code': 'ff',\n        'name': 'Fula; Fulah; Pulaar; Pular'\n    },\n    {\n        'code': 'gl',\n        'name': 'Galician'\n    },\n    {\n        'code': 'ka',\n        'name': 'Georgian'\n    },\n    {\n        'code': 'de',\n        'name': 'German'\n    },\n    {\n        'code': 'el',\n        'name': 'Greek, Modern'\n    },\n    {\n        'code': 'gn',\n        'name': 'Guaraní'\n    },\n    {\n        'code': 'gu',\n        'name': 'Gujarati'\n    },\n    {\n        'code': 'ht',\n        'name': 'Haitian; Haitian Creole'\n    },\n    {\n        'code': 'ha',\n        'name': 'Hausa'\n    },\n    {\n        'code': 'he',\n        'name': 'Hebrew (modern)'\n    },\n    {\n        'code': 'hz',\n        'name': 'Herero'\n    },\n    {\n        'code': 'hi',\n        'name': 'Hindi'\n    },\n    {\n        'code': 'ho',\n        'name': 'Hiri Motu'\n    },\n    {\n        'code': 'hu',\n        'name': 'Hungarian'\n    },\n    {\n        'code': 'is',\n        'name': 'Icelandic'\n    },\n    {\n        'code': 'io',\n        'name': 'Ido'\n    },\n    {\n        'code': 'ig',\n        'name': 'Igbo'\n    },\n    {\n        'code': 'id',\n        'name': 'Indonesian'\n    },\n    {\n        'code': 'ia',\n        'name': 'Interlingua'\n    },\n    {\n        'code': 'ie',\n        'name': 'Interlingue'\n    },\n    {\n        'code': 'iu',\n        'name': 'Inuktitut'\n    },\n    {\n        'code': 'ik',\n        'name': 'Inupiaq'\n    },\n    {\n        'code': 'ga',\n        'name': 'Irish'\n    },\n    {\n        'code': 'it',\n        'name': 'Italian'\n    },\n    {\n        'code': 'ja',\n        'name': 'Japanese'\n    },\n    {\n        'code': 'jv',\n        'name': 'Javanese'\n    },\n    {\n        'code': 'kl',\n        'name': 'Kalaallisut, Greenlandic'\n    },\n    {\n        'code': 'kn',\n        'name': 'Kannada'\n    },\n    {\n        'code': 'kr',\n        'name': 'Kanuri'\n    },\n    {\n        'code': 'ks',\n        'name': 'Kashmiri'\n    },\n    {\n        'code': 'kk',\n        'name': 'Kazakh'\n    },\n    {\n        'code': 'km',\n        'name': 'Khmer'\n    },\n    {\n        'code': 'ki',\n        'name': 'Kikuyu, Gikuyu'\n    },\n    {\n        'code': 'rw',\n        'name': 'Kinyarwanda'\n    },\n    {\n        'code': 'ky',\n        'name': 'Kirghiz, Kyrgyz'\n    },\n    {\n        'code': 'rn',\n        'name': 'Kirundi'\n    },\n    {\n        'code': 'kv',\n        'name': 'Komi'\n    },\n    {\n        'code': 'kg',\n        'name': 'Kongo'\n    },\n    {\n        'code': 'ko',\n        'name': 'Korean'\n    },\n    {\n        'code': 'ku',\n        'name': 'Kurdish'\n    },\n    {\n        'code': 'kj',\n        'name': 'Kwanyama, Kuanyama'\n    },\n    {\n        'code': 'lo',\n        'name': 'Lao'\n    },\n    {\n        'code': 'la',\n        'name': 'Latin'\n    },\n    {\n        'code': 'lv',\n        'name': 'Latvian'\n    },\n    {\n        'code': 'li',\n        'name': 'Limburgish, Limburgan, Limburger'\n    },\n    {\n        'code': 'ln',\n        'name': 'Lingala'\n    },\n    {\n        'code': 'lt',\n        'name': 'Lithuanian'\n    },\n    {\n        'code': 'lu',\n        'name': 'Luba-Katanga'\n    },\n    {\n        'code': 'lg',\n        'name': 'Luganda'\n    },\n    {\n        'code': 'lb',\n        'name': 'Luxembourgish, Letzeburgesch'\n    },\n    {\n        'code': 'mk',\n        'name': 'Macedonian'\n    },\n    {\n        'code': 'mg',\n        'name': 'Malagasy'\n    },\n    {\n        'code': 'ms',\n        'name': 'Malay'\n    },\n    {\n        'code': 'ml',\n        'name': 'Malayalam'\n    },\n    {\n        'code': 'mt',\n        'name': 'Maltese'\n    },\n    {\n        'code': 'gv',\n        'name': 'Manx'\n    },\n    {\n        'code': 'mr',\n        'name': 'Marathi (Marāṭhī)'\n    },\n    {\n        'code': 'mh',\n        'name': 'Marshallese'\n    },\n    {\n        'code': 'mn',\n        'name': 'Mongolian'\n    },\n    {\n        'code': 'mi',\n        'name': 'Māori'\n    },\n    {\n        'code': 'na',\n        'name': 'Nauru'\n    },\n    {\n        'code': 'nv',\n        'name': 'Navajo, Navaho'\n    },\n    {\n        'code': 'ng',\n        'name': 'Ndonga'\n    },\n    {\n        'code': 'ne',\n        'name': 'Nepali'\n    },\n    {\n        'code': 'nd',\n        'name': 'North Ndebele'\n    },\n    {\n        'code': 'se',\n        'name': 'Northern Sami'\n    },\n    {\n        'code': 'no',\n        'name': 'Norwegian'\n    },\n    {\n        'code': 'nb',\n        'name': 'Norwegian Bokmål'\n    },\n    {\n        'code': 'nn',\n        'name': 'Norwegian Nynorsk'\n    },\n    {\n        'code': 'ii',\n        'name': 'Nuosu'\n    },\n    {\n        'code': 'oc',\n        'name': 'Occitan'\n    },\n    {\n        'code': 'oj',\n        'name': 'Ojibwe, Ojibwa'\n    },\n    {\n        'code': 'cu',\n        'name': 'Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic'\n    },\n    {\n        'code': 'or',\n        'name': 'Oriya'\n    },\n    {\n        'code': 'om',\n        'name': 'Oromo'\n    },\n    {\n        'code': 'os',\n        'name': 'Ossetian, Ossetic'\n    },\n    {\n        'code': 'pa',\n        'name': 'Panjabi, Punjabi'\n    },\n    {\n        'code': 'ps',\n        'name': 'Pashto, Pushto'\n    },\n    {\n        'code': 'fa',\n        'name': 'Persian'\n    },\n    {\n        'code': 'pl',\n        'name': 'Polish'\n    },\n    {\n        'code': 'pt',\n        'name': 'Portuguese'\n    },\n    {\n        'code': 'pi',\n        'name': 'Pāli'\n    },\n    {\n        'code': 'qu',\n        'name': 'Quechua'\n    },\n    {\n        'code': 'ro',\n        'name': 'Romanian, Moldavian, Moldovan'\n    },\n    {\n        'code': 'rm',\n        'name': 'Romansh'\n    },\n    {\n        'code': 'ru',\n        'name': 'Russian'\n    },\n    {\n        'code': 'sm',\n        'name': 'Samoan'\n    },\n    {\n        'code': 'sg',\n        'name': 'Sango'\n    },\n    {\n        'code': 'sa',\n        'name': 'Sanskrit (Saṁskṛta)'\n    },\n    {\n        'code': 'sc',\n        'name': 'Sardinian'\n    },\n    {\n        'code': 'gd',\n        'name': 'Scottish Gaelic; Gaelic'\n    },\n    {\n        'code': 'sr',\n        'name': 'Serbian'\n    },\n    {\n        'code': 'sn',\n        'name': 'Shona'\n    },\n    {\n        'code': 'sd',\n        'name': 'Sindhi'\n    },\n    {\n        'code': 'si',\n        'name': 'Sinhala, Sinhalese'\n    },\n    {\n        'code': 'sk',\n        'name': 'Slovak'\n    },\n    {\n        'code': 'sl',\n        'name': 'Slovene'\n    },\n    {\n        'code': 'so',\n        'name': 'Somali'\n    },\n    {\n        'code': 'nr',\n        'name': 'South Ndebele'\n    },\n    {\n        'code': 'st',\n        'name': 'Southern Sotho'\n    },\n    {\n        'code': 'es',\n        'name': 'Spanish; Castilian'\n    },\n    {\n        'code': 'su',\n        'name': 'Sundanese'\n    },\n    {\n        'code': 'sw',\n        'name': 'Swahili'\n    },\n    {\n        'code': 'ss',\n        'name': 'Swati'\n    },\n    {\n        'code': 'sv',\n        'name': 'Swedish'\n    },\n    {\n        'code': 'tl',\n        'name': 'Tagalog'\n    },\n    {\n        'code': 'ty',\n        'name': 'Tahitian'\n    },\n    {\n        'code': 'tg',\n        'name': 'Tajik'\n    },\n    {\n        'code': 'ta',\n        'name': 'Tamil'\n    },\n    {\n        'code': 'tt',\n        'name': 'Tatar'\n    },\n    {\n        'code': 'te',\n        'name': 'Telugu'\n    },\n    {\n        'code': 'th',\n        'name': 'Thai'\n    },\n    {\n        'code': 'bo',\n        'name': 'Tibetan Standard, Tibetan, Central'\n    },\n    {\n        'code': 'ti',\n        'name': 'Tigrinya'\n    },\n    {\n        'code': 'to',\n        'name': 'Tonga (Tonga Islands)'\n    },\n    {\n        'code': 'ts',\n        'name': 'Tsonga'\n    },\n    {\n        'code': 'tn',\n        'name': 'Tswana'\n    },\n    {\n        'code': 'tr',\n        'name': 'Turkish'\n    },\n    {\n        'code': 'tk',\n        'name': 'Turkmen'\n    },\n    {\n        'code': 'tw',\n        'name': 'Twi'\n    },\n    {\n        'code': 'ug',\n        'name': 'Uighur, Uyghur'\n    },\n    {\n        'code': 'uk',\n        'name': 'Ukrainian'\n    },\n    {\n        'code': 'ur',\n        'name': 'Urdu'\n    },\n    {\n        'code': 'uz',\n        'name': 'Uzbek'\n    },\n    {\n        'code': 've',\n        'name': 'Venda'\n    },\n    {\n        'code': 'vi',\n        'name': 'Vietnamese'\n    },\n    {\n        'code': 'vo',\n        'name': 'Volapük'\n    },\n    {\n        'code': 'wa',\n        'name': 'Walloon'\n    },\n    {\n        'code': 'cy',\n        'name': 'Welsh'\n    },\n    {\n        'code': 'fy',\n        'name': 'Western Frisian'\n    },\n    {\n        'code': 'wo',\n        'name': 'Wolof'\n    },\n    {\n        'code': 'xh',\n        'name': 'Xhosa'\n    },\n    {\n        'code': 'yi',\n        'name': 'Yiddish'\n    },\n    {\n        'code': 'yo',\n        'name': 'Yoruba'\n    },\n    {\n        'code': 'za',\n        'name': 'Zhuang, Chuang'\n    }\n];\n",
    "// Shows informational message.\n\nexports.info = function(text) {\n\n    var messages = document.getElementById('messages');\n    var message = document.createElement('div');\n\n    message.className = 'alert alert-success message';\n    message.innerHTML = text;\n\n    messages.appendChild(message);\n\n    setTimeout(function() {\n\n        messages.removeChild(message);\n\n    }, 2000);\n};\n\n// Shows error message.\n\nexports.error = function(err) {\n\n    var button = document.createElement('button');\n\n    button.className = 'close';\n    button.innerHTML = '&times;';\n\n    var text = document.createElement('span');\n    text.innerHTML = err.toString();\n\n    var messages = document.getElementById('messages');\n    var message = document.createElement('div');\n\n    message.className = 'alert alert-danger message';\n    message.appendChild(button);\n    message.appendChild(text);\n\n    button.addEventListener('click', function() {\n\n        messages.removeChild(message);\n\n    }, false);\n\n    messages.appendChild(message);\n\n    if (err instanceof Error) {\n\n        console.error(err.stack);\n    }\n};\n",
    "\nvar api = require('../api');\nvar view = require('../view');\nvar resolveObject = require('../resolve_object');\nvar comments_item = require('../vm/comments_item');\n\nvar template = \"<h2 data-bind=\\\"text: title\\\"></h2>\\n<h3>Comments</h3>\\n<ul data-bind=\\\"foreach: comments\\\" class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item post-item\\\">\\n        <h4 data-bind=\\\"text: author, click: expand\\\" class=\\\"list-group-item-heading\\\"></h4>\\n        <div class=\\\"list-group-item-text\\\">\\n            Date: <span data-bind=\\\"text: formatDate(date)\\\"></span>\\n            <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls\\\">\\n                <div class=\\\"panel panel-default\\\">\\n                    <div data-bind=\\\"text: content\\\" class=\\\"panel-body\\\"></div>\\n                </div>\\n                <!-- ko if: removable -->\\n                    <a data-bind=\\\"click: remove\\\" class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-remove\\\"></span> Remove\\n                    </a>\\n                <!-- /ko -->\\n            </div>\\n        </div>\\n    </li>\\n</ul>\\n<!-- ko if: comments().length === 0 -->\\n    <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n        This entry has no comments.\\n    </div>\\n<!-- /ko -->\\n\";\n\n// Page for the comments list.\n\nexports.create = function(type, id) {\n\n    var model = {\n\n        title: ko.observable(),\n\n        comments: ko.observable([])\n    };\n\n    var requests = {\n\n        entryInfo: api.entryInfo(id),\n\n        userInfo: api.userInfo(id),\n\n        typeInfo: api.typeInfo(type),\n\n        comments: api.comments(id)\n    };\n\n    return resolveObject(requests).then(function(data) {\n\n        model.title(data.entryInfo.title);\n\n        model.comments(data.comments.map(function(comments) {\n\n            return comments_item.create(comments, data.userInfo, data.entryInfo, data.typeInfo);\n\n        }));\n\n        view.show(template, model);\n    });\n};\n",
    "\nvar api = require('../api');\nvar view = require('../view');\nvar email = require('../vm/email');\nvar message = require('../message');\nvar resolveObject = require('../resolve_object');\n\nvar template = \"<h2>Email settings</h2>\\n<!-- ko if: !permission() -->\\n    <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n        You do not have permissions to edit email settings.\\n    </div>\\n<!-- /ko -->\\n<!-- ko if: permission() -->\\n    <!-- ko with: smtp -->\\n        <div class=\\\"row bc-margin-top\\\">\\n            <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                <strong>Enabled</strong></div>\\n            <div data-bind=\\\"text: (enabled ? 'yes' : 'no')\\\"\\n                class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                <strong>SMTP host</strong></div>\\n            <div data-bind=\\\"text: host\\\"\\n                class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                <strong>SMTP auth</strong></div>\\n            <div data-bind=\\\"text: auth\\\"\\n                class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n        </div>\\n        <!-- ko if: auth === 'login' -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                    <strong>SMTP user</strong></div>\\n                <div data-bind=\\\"text: (user === '' ? 'not set' : user)\\\"\\n                    class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                    <strong>SMTP password</strong></div>\\n                <div data-bind=\\\"text: (password === '' ? 'not set' : 'not shown')\\\"\\n                    class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n            </div>\\n        <!-- /ko -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                <strong>SMTP security</strong></div>\\n            <div data-bind=\\\"text: security\\\"\\n                class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                <strong>SMTP from</strong></div>\\n            <div data-bind=\\\"text: from\\\"\\n                class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n        </div>\\n    <!-- /ko -->\\n    <div class=\\\"row bc-margin-top\\\">\\n        <div class=\\\"col-md-4 col-sm-5 col-xs-8 col-md-offset-2 col-sm-offset-3 col-xs-offset-4\\\">\\n            <a href=\\\"#\\\" data-bind=\\\"click: edit\\\" class=\\\"btn btn-default\\\">\\n                <span class=\\\"glyphicon glyphicon-pencil\\\"></span> Edit</a>\\n        </div>\\n    </div>\\n    <!-- ko if: editing() -->\\n        <hr>\\n        <form data-bind=\\\"submit: save\\\" autocomplete=\\\"off\\\" id=\\\"smtp-config\\\">\\n            <div class=\\\"checkbox\\\">\\n                <label><input data-bind=\\\"checked: form.enabled\\\" type=\\\"checkbox\\\">\\n                    Mail system enabled</label>\\n            </div>\\n            <div data-bind=\\\"errors: errors.host\\\" class=\\\"form-group\\\">\\n                <label for=\\\"smtp-host\\\">SMTP host</label>\\n                <input data-bind=\\\"textInput: form.host\\\"\\n                    type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"smtp-host\\\"\\n                    placeholder=\\\"SMTP server hostname\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"smtp-auth\\\">SMTP authentication method</label>\\n                <select data-bind=\\\"value: form.auth\\\" id=\\\"smtp-auth\\\"\\n                    class=\\\"form-control\\\">\\n                    <option value=\\\"plain\\\">Plain</option>\\n                    <option value=\\\"login\\\">Login</option>\\n                </select>\\n            </div>\\n            <div data-bind=\\\"errors: errors.user\\\" class=\\\"form-group\\\">\\n                <label for=\\\"smtp-user\\\">SMTP user</label>\\n                <input data-bind=\\\"textInput: form.user,\\n                        disable: form.auth() === 'plain'\\\"\\n                    type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"smtp-user\\\"\\n                    placeholder=\\\"SMTP server user\\\">\\n            </div>\\n            <div data-bind=\\\"errors: errors.password\\\" class=\\\"form-group\\\">\\n                <label for=\\\"smtp-password\\\">SMTP password</label>\\n                <input data-bind=\\\"textInput: form.password,\\n                        disable: form.auth() === 'plain',\\n                        attr: { type: password_text() ? 'text' : 'password' }\\\"\\n                    type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"smtp-password\\\"\\n                    placeholder=\\\"SMTP server password\\\">\\n            </div>\\n            <div class=\\\"checkbox\\\">\\n                <label><input data-bind=\\\"checked: password_text\\\" type=\\\"checkbox\\\">\\n                    Show text</label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"smtp-security\\\">SMTP security</label>\\n                <select data-bind=\\\"value: form.security\\\" id=\\\"smtp-security\\\"\\n                    class=\\\"form-control\\\">\\n                    <option value=\\\"none\\\">None</option>\\n                    <option value=\\\"ssl\\\">SSL</option>\\n                    <option value=\\\"tls\\\">TLS</option>\\n                    <option value=\\\"starttls\\\">STARTTLS</option>\\n                </select>\\n            </div>\\n            <div data-bind=\\\"errors: errors.from\\\" class=\\\"form-group\\\">\\n                <label for=\\\"smtp-from\\\">Notification sender email (From)</label>\\n                <input data-bind=\\\"textInput: form.from\\\"\\n                    type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"smtp-form\\\"\\n                    placeholder=\\\"Mail sender address\\\">\\n            </div>\\n            <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                New SMTP settings should be tested before saving. The\\n                test email will be sent to the current user's mail address.\\n            </div>\\n            <!-- ko if: !!error() -->\\n                <div data-bind=\\\"text: error\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\"></div>\\n            <!-- /ko -->\\n            <!-- ko if: !!info() -->\\n                <div data-bind=\\\"text: info\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\"></div>\\n            <!-- /ko -->\\n            <div data-bind=\\\"errors: errors.subject\\\" class=\\\"form-group\\\">\\n                <label for=\\\"smtp-subject\\\">Test mail subject</label>\\n                <input data-bind=\\\"textInput: form.subject\\\"\\n                    type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"smtp-subject\\\"\\n                    placeholder=\\\"Test mail subject\\\">\\n            </div>\\n            <div data-bind=\\\"errors: errors.body\\\" class=\\\"form-group\\\">\\n                <label for=\\\"smtp-body\\\">Test mail body</label>\\n                <textarea data-bind=\\\"textInput: form.body\\\"\\n                    placeholder=\\\"Test mail body\\\" rows=\\\"3\\\"\\n                    class=\\\"form-control\\\" id=\\\"smtp-body\\\"></textarea>\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n                <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save\\n            </button>\\n            <a data-bind=\\\"click: test\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n                <span class=\\\"glyphicon glyphicon-envelope\\\"></span> Test</a>\\n            <a data-bind=\\\"click: cancel\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n                <span class=\\\"glyphicon glyphicon-remove\\\"></span> Cancel</a>\\n        </form>\\n    <!-- /ko -->\\n<!-- /ko -->\\n\";\n\n// Page for editing email settings.\n\nexports.create = function(id) {\n\n    var model = {\n\n        email: ko.observable(),\n\n        permission: ko.observable(false),\n\n        editing: ko.observable(false),\n\n        smtp: ko.observable({}),\n\n        form: {\n\n            enabled: ko.observable(false),\n\n            host: ko.observable(''),\n\n            user: ko.observable(''),\n\n            password: ko.observable(''),\n\n            auth: ko.observable('login'),\n\n            security: ko.observable('none'),\n\n            from: ko.observable('admin@example.com'),\n\n            subject: ko.observable('Test mail'),\n\n            body: ko.observable('Test mail body')\n        },\n\n        errors: {\n\n            host: ko.observableArray([]),\n\n            user: ko.observableArray([]),\n\n            password: ko.observableArray([]),\n\n            from: ko.observableArray([]),\n\n            subject: ko.observableArray([]),\n\n            body: ko.observableArray([])\n        },\n\n        // Test error.\n\n        error: ko.observable(),\n\n        // Test info message.\n\n        info: ko.observable(),\n\n        // Flag to show password unmasked.\n\n        password_text: ko.observable(false)\n    };\n\n    // Saves settings and updates the\n    // read-only views of options.\n\n    model.save = function(form) {\n\n        clearErrors();\n\n        validateParams();\n\n        // Checks whether some input\n        // has error set.\n\n        if (!checkError(form)) {\n\n            return false;\n        }\n\n        var smtp = toSmtp(model.form);\n\n        api.updateConfig(toList(smtp)).then(function() {\n\n            model.smtp(smtp);\n\n            message.info('Mailing system parameters have been updated.');\n\n            route.refresh();\n\n        }).catch(message.error);\n    };\n\n    model.edit = function() {\n\n        model.editing(true);\n    };\n\n    // Tests the settings that are currently\n    // set in the editing form.\n\n    model.test = function() {\n\n        model.info(undefined);\n\n        model.error(undefined);\n\n        clearErrors();\n\n        validateParams();\n\n        validateTest();\n\n        var form = document.getElementById('smtp-config');\n\n        // Checks whether some input\n        // has error set.\n\n        if (!checkError(form)) {\n\n            return false;\n        }\n\n        var smtp = toSmtp(model.form);\n\n        api.testMail(smtp).then(function() {\n\n            model.info('Test mail sent successfully.');\n\n        }).catch(function(err) {\n\n            model.error('Mail testing failed: ' +\n                (err.jsendMessage ? err.jsendMessage : err.toString()));\n        });\n    };\n\n    // Cancels editing. Refreshes current page.\n\n    model.cancel = function() {\n\n        route.refresh();\n    };\n\n    // Clears current form errors.\n\n    function clearErrors() {\n\n        Object.keys(model.errors).forEach(function(key) {\n\n            model.errors[key]([]);\n        });\n    }\n\n    // Validates SMTP parameters.\n\n    function validateParams() {\n\n        var form = model.form;\n\n        if (form.host().match(/^\\s*$/)) {\n\n            model.errors.host.push('SMTP host name must be set.');\n        }\n\n        if (form.auth() === 'login') {\n\n            if (form.user().match(/^\\s*$/)) {\n\n                model.errors.user.push('SMTP user must be set for SMTP auth.');\n            }\n\n            if (form.password().match(/^\\s*$/)) {\n\n                model.errors.password.push('SMTP password must be set for SMTP auth.');\n            }\n        }\n\n        if (form.from().match(/^\\s*$/)) {\n\n            model.errors.from.push('Notification sender mail must be set.');\n\n        } else {\n\n            if (!form.from().match(/^[^@]+@[^@]+$/)) {\n\n                model.errors.from.push('Notification sender mail must be a valid mail address.');\n            }\n        }\n    }\n\n    // Validates test parameters.\n\n    function validateTest() {\n\n        var form = model.form;\n\n        if (form.subject().match(/^\\s*$/)) {\n\n            model.errors.subject.push('Test mail subject must be set.');\n        }\n\n        if (form.body().match(/^\\s*$/)) {\n\n            model.errors.body.push('Test mail body must be set.');\n        }\n    }\n\n    // Checks for errors on the form\n    // elements. Focuses on the first\n    // input with an error.\n\n    function checkError(form) {\n\n        var input = form.querySelector(\n            '.has-error input, .has-error textarea,' +\n            ' .has-error checkbox, .has-error select');\n\n        if (input) {\n\n            input.focus();\n\n            return false;\n        }\n\n        return true;\n    }\n\n    return api.userInfo().then(function(info) {\n\n        if (info.type !== 'admin') {\n\n            view.show(template, model);\n\n        } else {\n\n            return api.config().then(function(config) {\n\n                var smtp = extract(config);\n\n                model.smtp(smtp);\n\n                toForm(smtp, model.form);\n\n                model.permission(true);\n\n                view.show(template, model);\n            });\n        }\n    });\n};\n\n// Extracts SMTP settings from\n// generic config entries.\n\nfunction extract(config) {\n\n    var obj = {};\n\n    config.forEach(function(entry) {\n\n        obj[entry.name] = entry.value;\n    });\n\n    return {\n\n        enabled: obj.smtp_enabled,\n\n        host: obj.smtp_host,\n\n        user: obj.smtp_user,\n\n        password: obj.smtp_password,\n\n        auth: obj.smtp_auth,\n\n        security: obj.smtp_security,\n\n        from: obj.smtp_from\n    };\n}\n\n// Sets form values based on\n// smtp values.\n\nfunction toForm(smtp, form) {\n\n    Object.keys(smtp).forEach(function(key) {\n\n        form[key](smtp[key]);\n    });\n}\n\n// Creates new object with\n// values from the form binding\n// object.\n\nfunction toSmtp(form) {\n\n    var smtp = {};\n\n    Object.keys(form).forEach(function(key) {\n\n        smtp[key] = form[key]();\n    });\n\n    return smtp;\n}\n\n// Turns the SMTP configuration\n// object into a list of configuration\n// entries.\n\nfunction toList(smtp) {\n\n    return [\n\n        { name: 'smtp_enabled', value: smtp.enabled },\n        { name: 'smtp_host', value: smtp.host },\n        { name: 'smtp_user', value: smtp.user },\n        { name: 'smtp_password', value: smtp.password },\n        { name: 'smtp_auth', value: smtp.auth },\n        { name: 'smtp_security', value: smtp.security },\n        { name: 'smtp_from', value: smtp.from }\n    ];\n}\n",
    "\nvar api = require('../api');\nvar view = require('../view');\nvar message = require('../message');\n\nvar template = \"<h2>Login</h2>\\n\\n<form data-bind=\\\"submit: login\\\">\\n    <div data-bind=\\\"errors: errors.username\\\" class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"username\\\">Username</label>\\n        <input data-bind=\\\"textInput: username\\\"\\n            type=\\\"text\\\" name=\\\"username\\\" title=\\\"Username\\\"\\n            placeholder=\\\"Username\\\" class=\\\"form-control\\\" id=\\\"username\\\">\\n    </div>\\n    <div data-bind=\\\"errors: errors.password\\\" class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"password\\\">Password</label>\\n        <input data-bind=\\\"textInput: password\\\"\\n            type=\\\"password\\\" name=\\\"password\\\" title=\\\"Password\\\"\\n            placeholder=\\\"Password\\\" class=\\\"form-control\\\" id=\\\"password\\\">\\n    </div>\\n    <div class=\\\"checkbox\\\">\\n        <label><input data-bind=\\\"checked: remember\\\" type=\\\"checkbox\\\"\\n            name=\\\"remember\\\" id=\\\"remember\\\">\\n            Remember me</label>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n        <span class=\\\"glyphicon glyphicon-log-in\\\"></span> Login</button>\\n</form>\\n\";\n\n// The login page.\n\nexports.create = function() {\n\n    var model = {\n\n        username: ko.observable(''),\n\n        password: ko.observable(''),\n\n        remember: ko.observable(false),\n\n        errors: {\n\n            username: ko.observableArray([]),\n            password: ko.observableArray([])\n        }\n    };\n\n    model.login = function(form) {\n\n        // Clear errors.\n\n        Object.keys(model.errors).forEach(function(key) {\n\n            model.errors[key]([]);\n        });\n\n        var username = model.username();\n\n        var password = model.password();\n\n        if (username === '') {\n\n            model.errors.username.push('Username is not entered.');\n\n        } else if (!username.match(/^[^@]+@[^@]+$/)) {\n\n            model.errors.username.push('Username must be an email.');\n        }\n\n        if (password === '') {\n\n            model.errors.password.push('Password is not entered.');\n        }\n\n        var input = form.querySelector(\n            '.has-error input, .has-error textarea, .has-error checkbox');\n\n        if (input) {\n\n            input.focus();\n\n            return false;\n        }\n\n        api.login(username, password).then(function(res) {\n\n            if (model.remember()) {\n\n                localStorage.setItem('api-key', res.key);\n\n                sessionStorage.removeItem('api-key');\n\n            } else {\n\n                sessionStorage.setItem('api-key', res.key);\n\n                localStorage.removeItem('api-key');\n            }\n\n            route.go('landing');\n\n        }).catch(function(err) {\n\n            if (err.toString().match(/Invalid auth credentials/)) {\n\n                model.errors.username.push('Invalid auth credentials.');\n                model.errors.password.push('Invalid auth credentials.');\n\n            } else {\n\n                message.error(err);\n            }\n        });\n    };\n\n    view.show(template, model);\n\n    return Promise.resolve();\n};\n",
    "\nvar api = require('../api');\nvar post = require('../vm/post');\nvar view = require('../view');\nvar editor = require('../editor');\nvar preview = require('../preview');\nvar resolveObject = require('../resolve_object');\n\nvar template = \"<!-- ko with: post -->\\n    <h2 data-bind=\\\"text: title\\\"></h2>\\n    <div class=\\\"btn-group bc-margin-bottom\\\">\\n        <button data-bind=\\\"click: $root.leave\\\" type=\\\"button\\\"\\n            class=\\\"btn btn-default\\\" title=\\\"Leave the editor\\\">\\n            <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n        </button>\\n        <button data-bind=\\\"click: submit, css: { 'bc-red': $root.modified() },\\n            disable: !$root.modified()\\\" type=\\\"button\\\"\\n            class=\\\"btn btn-default\\\" title=\\\"Save and continue\\\">\\n            <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span>\\n        </button>\\n        <button data-bind=\\\"click: $root.toggleInfo, css: { active: $root.info() }\\\"\\n            type=\\\"button\\\" class=\\\"btn btn-default\\\" title=\\\"Show/hide info\\\">\\n            <span class=\\\"glyphicon glyphicon-info-sign\\\"></span>\\n        </button>\\n        <button data-bind=\\\"click: $root.toggleFiles, css: { active: $root.files() }\\\"\\n            type=\\\"button\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-paperclip\\\"></span>\\n        </button>\\n        <button data-bind=\\\"click: $root.toggleSettings, css: { active: $root.settings() }\\\"\\n            type=\\\"button\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-cog\\\"></span>\\n        </button>\\n        <!-- ko if: $root.hasPreview() -->\\n            <button data-bind=\\\"click: $root.preview\\\" class=\\\"btn btn-default\\\">\\n                <span class=\\\"glyphicon glyphicon-eye-open\\\"></span>\\n            </button>\\n        <!-- /ko -->\\n    </div>\\n    <!-- ko if: published() -->\\n        <div class=\\\"bc-margin-bottom\\\">\\n            <div>\\n                <span class=\\\"label label-danger\\\">Published</span>\\n            </div>\\n        </div>\\n    <!-- /ko -->\\n    <!-- ko if: !published() -->\\n        <div class=\\\"bc-margin-bottom\\\">\\n            <div>\\n                <span class=\\\"label label-info\\\">Not published</span>\\n            </div>\\n        </div>\\n    <!-- /ko -->\\n    <!-- ko if: $root.previewNotice() -->\\n        <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n            Previews are not available for new entries.\\n            Save the entry at least once before.\\n        </div>\\n    <!-- /ko -->\\n    <hr>\\n    <!-- ko if: $root.settings() -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\">\\n                <select data-bind=\\\"value: $root.softWrap\\\"\\n                    class=\\\"form-control bc-margin-top-sm\\\">\\n                    <option value=\\\"60\\\">Soft wrap 60</option>\\n                    <option value=\\\"70\\\">Soft wrap 70</option>\\n                    <option value=\\\"80\\\">Soft wrap 80</option>\\n                    <option value=\\\"90\\\">Soft wrap 90</option>\\n                    <option value=\\\"100\\\">Soft wrap 100</option>\\n                    <option value=\\\"110\\\">Soft wrap 110</option>\\n                    <option value=\\\"120\\\">Soft wrap 120</option>\\n                    <option value=\\\"130\\\">Soft wrap 130</option>\\n                    <option value=\\\"140\\\">Soft wrap 140</option>\\n                </select>\\n            </div>\\n        </div>\\n        <hr>\\n    <!-- /ko -->\\n    <form data-bind=\\\"submit: submit\\\" autocomplete=\\\"off\\\" id=\\\"post\\\">\\n        <!-- ko if: $root.info() -->\\n            <div class=\\\"bc-info\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4\\\">\\n                        <div data-bind=\\\"errors: errors.title\\\" class=\\\"form-group\\\">\\n                            <label for=\\\"post-title\\\">Title</label>\\n                            <input data-bind=\\\"textInput: title\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-title\\\"\\n                                placeholder=\\\"Title\\\">\\n                            <p class=\\\"help-block\\\">Slug is autogenerated from the title.</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <div data-bind=\\\"errors: errors.slug\\\" class=\\\"form-group\\\">\\n                            <label for=\\\"post-slug\\\">Slug</label>\\n                            <input data-bind=\\\"textInput: slug\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-slug\\\"\\n                                placeholder=\\\"Slug\\\">\\n                            <p class=\\\"help-block\\\">Modifying the slug after publishing will break links.</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-tags\\\">Tags</label>\\n                            <input data-bind=\\\"textInput: tags\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-tags\\\"\\n                                placeholder=\\\"Tags\\\" list=\\\"taglist\\\">\\n                            <datalist id=\\\"taglist\\\">\\n                                <option value=\\\"node.js\\\">\\n                                <option value=\\\"javascript\\\">\\n                            </datalist>\\n                            <p class=\\\"help-block\\\">Separate multiple tags with commas.</p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-type\\\">Type</label>\\n                            <select data-bind=\\\"value: type, options: types,\\n                                optionsText: 'label', optionsValue: 'name',\\n                                attr: { disabled: !can_change_type }\\\"\\n                                class=\\\"form-control input-sm\\\" id=\\\"post-type\\\"></select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-content-type\\\">Content type</label>\\n                            <select data-bind=\\\"value: content_type\\\"\\n                                class=\\\"form-control input-sm\\\" id=\\\"post-content-type\\\">\\n                                <option value=\\\"markdown\\\">Markdown</option>\\n                                <option value=\\\"raw\\\">Raw</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-author\\\">Author</label>\\n                            <select data-bind=\\\"value: author, options: authors,\\n                                optionsText: 'fullname', optionsValue: '$id',\\n                                attr: { disabled: !can_change_author }\\\"\\n                                class=\\\"form-control input-sm\\\" id=\\\"post-author\\\"></select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-language\\\">Language</label>\\n                            <select data-bind=\\\"value: language, options: languages,\\n                                optionsText: 'name', optionsValue: 'code'\\\"\\n                                class=\\\"form-control input-sm\\\" id=\\\"post-language\\\"></select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div data-bind=\\\"errors: errors.date\\\" class=\\\"form-group\\\">\\n                            <label for=\\\"post-date\\\">Publish date</label>\\n                            <input data-bind=\\\"textInput: date\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-date\\\"\\n                                placeholder=\\\"YYYY-MM-DD\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div data-bind=\\\"errors: errors.update\\\" class=\\\"form-group\\\">\\n                            <label for=\\\"post-update\\\">Update date</label>\\n                            <input data-bind=\\\"textInput: update\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-update\\\"\\n                                placeholder=\\\"YYYY-MM-DD\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-8\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-description\\\">Description</label>\\n                            <textarea\\n                                data-bind=\\\"textInput: description\\\"\\n                                class=\\\"form-control input-sm\\\" rows=\\\"2\\\" id=\\\"post-description\\\" placeholder=\\\"Description\\\"></textarea>\\n                            <p class=\\\"help-block\\\">Description is used by search engines to show the page snippet.\\n                                It must not contain HTML.</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"checkbox\\\">\\n                            <label><input data-bind=\\\"checked: published,\\n                                attr: { disabled: !can_publish }\\\"\\n                                type=\\\"checkbox\\\" id=\\\"post-published\\\"> Published</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"checkbox\\\">\\n                            <label><input data-bind=\\\"checked: commenting\\\"\\n                                type=\\\"checkbox\\\"> Commenting</label>\\n                        </div>\\n                    </div>\\n                </div>\\n                <hr>\\n            </div>\\n        <!-- /ko -->\\n        <!-- ko if: $root.files() -->\\n            <!-- ko if: can_manage_files -->\\n                <!-- ko if: !$id() -->\\n                    <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                        To upload files you need to save the entry first.\\n                    </div>\\n                <!-- /ko -->\\n                <!-- ko if: $id() -->\\n                    <!-- ko if: slug_changed() -->\\n                        <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                            You have changed the entry slug. File management is\\n                            re-enabled after saving the entry.\\n                        </div>\\n                    <!-- /ko -->\\n                    <!-- ko if: !slug_changed() -->\\n                        <!-- ko if: files().length === 0 -->\\n                            <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                                This entry has no files.\\n                            </div>\\n                        <!-- /ko -->\\n                        <div data-bind=\\\"foreach: files\\\" class=\\\"list-group\\\">\\n                            <li class=\\\"list-group-item post-item\\\">\\n                                <div data-bind=\\\"click: expand\\\" class=\\\"list-group-item-heading\\\">\\n                                    <span class=\\\"glyphicon glyphicon-file\\\"></span> <!-- ko text: name --><!-- /ko -->\\n                                </div>\\n                                <!-- ko if: expanded() -->\\n                                    URL: <!-- ko text: url --><!-- /ko -->\\n                                    <div class=\\\"post-controls\\\">\\n                                        <div class=\\\"btn-group\\\">\\n                                            <a data-bind=\\\"click: $parent.removeFile\\\"\\n                                                class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                                                <span class=\\\"glyphicon glyphicon-edit\\\"></span> Remove</a>\\n                                            <a data-bind=\\\"attr: { href: url }\\\" target=\\\"_blank\\\"\\n                                                class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                                                <span class=\\\"glyphicon glyphicon-eye-open\\\"></span> View (in new tab)</a>\\n                                            <a data-bind=\\\"click: $parent.insertLink\\\"\\n                                                class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                                                <span class=\\\"glyphicon glyphicon-pencil\\\"></span> Insert as link</a>\\n                                            <!-- ko if: image -->\\n                                                <a data-bind=\\\"click: $parent.insertImage\\\"\\n                                                    class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                                                    <span class=\\\"glyphicon glyphicon-pencil\\\"></span> Insert as image</a>\\n                                            <!-- /ko -->\\n                                        </div>\\n                                    </div>\\n                                <!-- /ko -->\\n                            </li>\\n                        </div>\\n                        <div class=\\\"row bc-controls\\\">\\n                            <div class=\\\"col-sm-6\\\">\\n                                <div id=\\\"entry-file-wrap\\\">\\n                                    <input type=\\\"file\\\" id=\\\"entry-file\\\" class=\\\"form-control\\\" placeholder=\\\"Your file\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-6\\\">\\n                                <a data-bind=\\\"click: uploadFile\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n                                    <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\n                                </a>\\n                            </div>\\n                        </div>\\n                    <!-- /ko -->\\n                <!-- /ko -->\\n            <!-- /ko -->\\n            <!-- ko if: !can_manage_files -->\\n                <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                    To upload files you need file management permissions.\\n                </div>\\n            <!-- /ko -->\\n            <hr>\\n        <!-- /ko -->\\n        <!-- ko if: slug_changed() && $id() -->\\n            <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                You must save the entry after modifying the slug. This will\\n                automatically fix images and links to files in the content.\\n            </div>\\n        <!-- /ko -->\\n        <div id=\\\"editor-wrap\\\">\\n            <div id=\\\"editor\\\"></div>\\n        </div>\\n    </form>\\n<!-- /ko -->\\n\";\n\n// The post edit page.\n\nexports.create = function(type, id, recovered) {\n\n    var model = {\n\n        post: ko.observable(),\n\n        info: ko.observable(false),\n\n        files: ko.observable(false),\n\n        modified: ko.observable(false),\n\n        hasPreview: ko.observable(false),\n\n        previewNotice: ko.observable(false),\n\n        softWrap: ko.observable('100'),\n\n        settings: ko.observable(false)\n    };\n\n    // Use stored softwrap value.\n\n    var softWrap = localStorage.getItem('softwrap');\n\n    if (softWrap) {\n\n        model.softWrap(softWrap);\n    }\n\n    // Shows/hides the info section.\n\n    model.toggleInfo = function() {\n\n        model.info(!model.info());\n    };\n\n    // Shows/hides the files section.\n\n    model.toggleFiles = function() {\n\n        model.files(!model.files());\n    };\n\n    // Shows/hides the settings section.\n\n    model.toggleSettings = function() {\n\n        model.settings(!model.settings());\n    };\n\n    // Shows preview when possible.\n\n    model.preview = function(callback) {\n\n        if (id) {\n\n            // Preview is shown only for saved posts.\n\n            model.post().submitUpdate().then(function() {\n\n                var slug = model.post().slug();\n\n                var url = model.post().preview.replace(/<slug>/g, slug);\n\n                preview.show(url, function() {\n\n                    editor.focus();\n                });\n\n            }).catch(message.error);\n\n        } else {\n\n            model.previewNotice(true);\n        }\n    };\n\n    // Leaves from the editing page.\n\n    model.leave = function() {\n\n        route.go('entries/' + model.post().type());\n    };\n\n    return postData(type, id).then(function(data) {\n\n        // data.post will be undefined when id is not set.\n\n        model.post(post.create(data.userInfo, type,\n            data.types, data.users, data.files, data.post, recovered));\n\n        // Save handler.\n        // http://stackoverflow.com/questions/4446987/overriding-controls-save-functionality-in-browser\n\n        function saveHandler(e) {\n\n            if (e.keyCode === 83 && (navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey)) {\n\n                e.preventDefault();\n\n                model.post().submit();\n            }\n\n            if (e.keyCode === 73 && (navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey)) {\n\n                e.preventDefault();\n\n                model.preview();\n            }\n        }\n\n        document.addEventListener('keydown', saveHandler, false);\n\n        // Saves entry contents to\n        // localStorage. Prevents data loss\n        // after server/browser crash.\n\n        model.autosave = function() {\n\n            var obj = model.post().toJS();\n\n            obj.$id = model.post().$id();\n\n            localStorage.setItem('autosave', JSON.stringify(obj));\n        };\n\n        // Starts timer that automatically saves\n        // post to localStorage.\n\n        model.autosaveTimer = setInterval(function() {\n\n            // Save only when modified.\n\n            if (model.modified()) {\n\n                model.autosave();\n            }\n\n        }, 15000);\n\n        // Clears possible autosave.\n\n        model.clearAutosave = function() {\n\n            localStorage.removeItem('autosave');\n        };\n\n        // Add browser window/tab close handler.\n\n        function beforeUnload(e) {\n\n            if (model.modified()) {\n\n                var message = 'You have modifications. Leave without saving?';\n\n                e = e || window.event;\n\n                if (e) {\n\n                    e.returnValue = message;\n                }\n\n                return message;\n\n            } else {\n\n                return false;\n            }\n        };\n\n        window.addEventListener('beforeunload', beforeUnload, false);\n\n        // Remove save handler when\n        // view changes.\n\n        model.dispose = function() {\n\n            document.removeEventListener('keydown', saveHandler, false);\n\n            window.removeEventListener('beforeunload', beforeUnload, false);\n\n            preview.dispose();\n\n            editor.dispose();\n\n            // Stop autosave timer.\n\n            clearTimeout(model.autosaveTimer);\n        };\n\n        // Ask leave confirmation.\n\n        route.leave = function() {\n\n            if (model.modified()) {\n\n                if (confirm('You have modifications. Leave without saving?')) {\n\n                    model.clearAutosave();\n\n                    return true;\n\n                } else {\n\n                    return false;\n                }\n\n            } else {\n\n                return true;\n            }\n        };\n\n        view.show(template, model);\n\n        // Enable editor for the\n        // current page.\n\n        editor.enable();\n\n        // Set soft wrap on the editor.\n\n        editor.setSoftWrap(parseInt(model.softWrap(), 10));\n\n        // Automatically set soft wrap when changed\n        // in the UI controls.\n\n        model.softWrap.subscribe(function(value) {\n\n            localStorage.setItem('softwrap', value);\n\n            editor.setSoftWrap(parseInt(value, 10));\n        });\n\n        if (id) {\n\n            // Set initial editor content.\n\n            if (recovered) {\n\n                editor.begin(recovered.content);\n\n                model.modified(true);\n\n            } else {\n\n                editor.begin(data.post.content);\n            }\n\n            // Enable preview\n\n            if (model.post().preview) {\n\n                model.hasPreview(true);\n            }\n\n        } else {\n\n            if (recovered) {\n\n                editor.begin(recovered.content);\n\n                model.modified(true);\n            }\n\n            model.info(true);\n\n            // Set focus to title.\n\n            var title = document.querySelector('#post-title');\n\n            title.focus();\n\n            if (typeof title.setSelectionRange === 'function') {\n\n                title.setSelectionRange(0, title.value.length);\n            }\n        }\n\n        // Set up modification detection.\n\n        editor.change(function() {\n\n            model.modified(true);\n        });\n\n        model.post().change(function() {\n\n            model.modified(true);\n        });\n\n        // Associate into the post.\n\n        model.post().editor = editor;\n\n        // Associate current model as well.\n\n        model.post().parent = model;\n\n        // Automatically update tags input.\n\n        model.post().tags.subscribe(function(value) {\n\n            var datalist = document.getElementById('taglist');\n\n            while (datalist.firstChild) {\n\n                datalist.removeChild(datalist.firstChild);\n            }\n\n            var options = [], length;\n\n            // Find matches.\n\n            var lwMatch = value.match(/^(.+\\,\\s*)(\\w+)$/);\n\n            if (lwMatch) {\n\n                var prefix = lwMatch[1];\n\n                var last = lwMatch[2];\n\n                length = last.length;\n\n                data.tags.forEach(function(entry) {\n\n                    if (entry.tag.substring(0, length) === last) {\n\n                        options.push(prefix + entry.tag);\n                    }\n                });\n\n            } else {\n\n                var fMatch = value.match(/^\\w+$/);\n\n                if (fMatch) {\n\n                    length = value.length;\n\n                    data.tags.forEach(function(entry) {\n\n                        if (entry.tag.substring(0, length) === value) {\n\n                            options.push(entry.tag);\n                        }\n                    });\n                }\n            }\n\n            // Repopulate the datalist.\n\n            options.forEach(function(option) {\n\n                var elem = document.createElement('option');\n\n                elem.value = option;\n\n                datalist.appendChild(elem);\n            });\n        });\n    });\n};\n\n// Retrieves data relevant to\n// the post. When id is not set\n// then retrieves data needed for the\n// new post.\n\nfunction postData(type, id) {\n\n    return api.userInfo().then(function(userInfo) {\n\n        var requests = {\n\n            types: api.types(),\n\n            users: authors(userInfo),\n\n            userInfo: Promise.resolve(userInfo),\n\n            tags: api.tags(type)\n        };\n\n        if (id) {\n\n            requests.post = api.post(id);\n\n            // The entry files.\n\n            requests.files = api.files(id);\n\n        } else {\n\n            requests.files = Promise.resolve([]);\n        }\n\n        return resolveObject(requests);\n    });\n}\n\n// Retrieves selectable authors.\n// userInfo - the current user info data.\n\nfunction authors(userInfo) {\n\n    if (userInfo.type === 'admin') {\n\n        return api.users();\n\n    } else {\n\n        // Non-admin can only select\n        // itself as the author.\n\n        return Promise.resolve([{\n\n            $id: userInfo.$id,\n\n            fullname: userInfo.fullname\n\n        }]);\n    }\n}\n",
    "\nvar api = require('../api');\nvar view = require('../view');\nvar postsItem = require('../vm/posts_item');\nvar resolveObject = require('../resolve_object');\n\nvar template = \"<h2 data-bind=\\\"text: title\\\"></h2>\\n\\n<div class=\\\"bc-margin-bottom\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"filter-tag\\\">Tag filter</label>\\n                <select data-bind=\\\"value: tag, options: tags,\\n                    optionsText: 'label', optionsValue: 'tag',\\n                    optionsCaption: 'All tags'\\\"\\n                    class=\\\"form-control input-sm\\\"></select>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"filter-status\\\">Status filter</label>\\n                <select data-bind=\\\"value: status\\\"\\n                    class=\\\"form-control input-sm\\\">\\n                    <option value=\\\"all\\\">All</option>\\n                    <option value=\\\"published\\\">Published</option>\\n                    <option value=\\\"unpublished\\\">Not published</option>\\n                </select>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<ul data-bind=\\\"foreach: posts\\\" class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item post-item\\\">\\n        <h4 data-bind=\\\"click: expand, text: title\\\" class=\\\"list-group-item-heading\\\"></h4>\\n        <div class=\\\"list-group-item-text\\\">\\n            Update date: <span data-bind=\\\"text: formatDate(date_updated)\\\"></span>\\n            <!-- ko if: $parent.comments() -->\\n                comments: <span data-bind=\\\"text: comments\\\"></span><br>\\n            <!-- /ko -->\\n            <!-- ko if: tags.length > 0 -->\\n                <span data-bind=\\\"text: tags.join(', ')\\\" class=\\\"bc-entries-tag\\\"></span>\\n            <!-- /ko -->\\n            <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls bc-margin-bottom-sm\\\">\\n                <!-- ko if: editable -->\\n                    <a data-bind=\\\"attr: { href: editLink }\\\" class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit\\n                    </a>\\n                <!-- /ko -->\\n                <!-- ko if: $parent.comments() -->\\n                    <a data-bind=\\\"attr: { href: commentsLink }, css: { disabled: comments === 0 }\\\"\\n                        class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-comment\\\"></span> Comments\\n                    </a>\\n                <!-- /ko -->\\n                <!-- ko if: removable -->\\n                    <a data-bind=\\\"click: remove\\\"\\n                        class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-edit\\\"></span> Remove\\n                    </a>\\n                <!-- /ko -->\\n            </div>\\n            <!-- ko if: !published -->\\n                <div>\\n                    <span class=\\\"label label-info\\\">Not published</span>\\n                </div>\\n            <!-- /ko -->\\n        </div>\\n    </li>\\n</ul>\\n\\n<!-- ko if: posts().length === 0 -->\\n    <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n        No entries to show.\\n    </div>\\n<!-- /ko -->\\n\\n<div class=\\\"bc-controls\\\">\\n    <a data-bind=\\\"click: showMore, css: { disabled: !hasMore() }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n        <span class=\\\"glyphicon glyphicon-list-alt\\\"></span> Show more\\n    </a>\\n    <a data-bind=\\\"click: showAll, css: { disabled: !hasMore() }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n        <span class=\\\"glyphicon glyphicon-list-alt\\\"></span> Show all\\n    </a>\\n    <a data-bind=\\\"attr: { href: '#new/' + type }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n        <span class=\\\"glyphicon glyphicon-plus\\\"></span> Add\\n    </a>\\n</div>\\n\";\n\n// Page for displaying a post list.\n\nexports.create = function(type) {\n\n    var model = {\n\n        type: type,\n\n        all: ko.observable([]),\n\n        count: ko.observable(10),\n\n        step: ko.observable(10),\n\n        comments: ko.observable(false),\n\n        create: ko.observable(false),\n\n        title: ko.observable(),\n\n        loaded: ko.observable(false),\n\n        tags: ko.observable([]),\n\n        tag: ko.observable(),\n\n        status: ko.observable('all')\n    };\n\n    // List of filtered posts.\n\n    model.filtered = ko.pureComputed(function() {\n\n        var tag = model.tag();\n\n        var status = model.status();\n\n        var filtered = [];\n\n        model.all().forEach(function(entry) {\n\n            var tagMatch = !tag || entry.tags.indexOf(tag) > -1;\n\n            var statusMatch = status === 'all' || (\n                status === 'published' && entry.published) || (\n                status === 'unpublished' && !entry.published);\n\n            if (tagMatch && statusMatch) {\n\n                filtered.push(entry);\n            }\n        });\n\n        return filtered;\n    });\n\n    // Shows whether there are more\n    // pager pages.\n\n    model.hasMore = ko.pureComputed(function() {\n\n        return model.count() < model.filtered().length;\n    });\n\n    // Shows new pager page with posts.\n\n    model.showMore = function() {\n\n        model.count(model.count() + model.step());\n\n        setTimeout(function() {\n\n            // Scrolls to the bottom.\n\n            window.scrollTo(0, document.body.scrollHeight);\n\n        }, 50);\n    };\n\n    // Shows all posts.\n\n    model.showAll = function() {\n\n        model.count(model.filtered().length);\n    };\n\n    // Posts array considering the current\n    // pager state.\n\n    model.posts = ko.pureComputed(function() {\n\n        var all = model.filtered();\n\n        return all.slice(0, model.count());\n    });\n\n    // Finds data from API and updates\n    // the view.\n\n    var requests = {\n\n        typeInfo: api.typeInfo(type),\n\n        userInfo: api.userInfo(),\n\n        posts: api.posts(type),\n\n        tags: api.tags(type)\n    };\n\n    return resolveObject(requests).then(function(data) {\n\n        model.title(data.typeInfo.menu_label);\n\n        model.comments(data.typeInfo.comments);\n\n        var create = false;\n\n        // Finds if the user can create entries.\n\n        if (data.userInfo.type === 'admin') {\n\n            create = true;\n        }\n\n        if (data.typeInfo.grants.indexOf('create') >= 0) {\n\n            create = true;\n        }\n\n        model.create(create);\n\n        data.tags.forEach(function(tag) {\n\n            tag.label = tag.tag + ' (' + tag.count + ')';\n        });\n\n        data.tags.sort(function(t1, t2) {\n\n            return t1.tag === t2.tag ? 0 : (t1.tag < t2.tag ? -1 : 1);\n        });\n\n        model.tags(data.tags);\n\n        data.posts.sort(function(post1, post2) {\n\n            return post2.date_updated - post1.date_updated;\n\n        });\n\n        model.all(data.posts.map(function(postData) {\n\n            return postsItem.create(postData, data.typeInfo, data.userInfo);\n\n        }));\n\n        view.show(template, model);\n\n    });\n};\n",
    "\nvar api = require('../api');\nvar view = require('../view');\nvar message = require('../message');\nvar trash_item = require('../vm/trash_item');\n\nvar template = \"<h2>Trash</h2>\\n<!-- ko if: items().length === 0 -->\\n    <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n        Trash has no entries.\\n    </div>\\n<!-- /ko -->\\n<ul data-bind=\\\"foreach: items\\\" class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item post-item\\\">\\n        <h4 data-bind=\\\"click: expand, text: title\\\" class=\\\"list-group-item-heading\\\"></h4>\\n        <div class=\\\"list-group-item-text\\\">\\n            Type: <span data-bind=\\\"text: type\\\"></span>\\n            <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls\\\">\\n                <a data-bind=\\\"click: remove\\\" class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                    <span class=\\\"glyphicon glyphicon-remove\\\"></span> Remove\\n                </a>\\n                <a data-bind=\\\"click: restore\\\" class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                    <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span> Restore\\n                </a>\\n            </div>\\n        </div>\\n    </li>\\n</ul>\\n<a data-bind=\\\"click: purge\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n    <span class=\\\"glyphicon glyphicon-remove\\\"></span> Purge trash\\n</a>\\n\";\n\n// Page for displaying the trash list.\n\nexports.create = function() {\n\n    var model = {\n\n        items: ko.observableArray([])\n    };\n\n    model.purge = function() {\n\n        if (confirm('Purge trash?')) {\n\n            api.purge().then(function() {\n\n                message.info('Trash is purged.');\n\n                route.refresh();\n\n            }).catch(message.error);\n        }\n    };\n\n    return api.trash().then(function(items) {\n\n        model.items(items.map(function(data) {\n\n            return trash_item.create(data);\n        }));\n\n        view.show(template, model);\n    });\n};\n",
    "\nvar api = require('../api');\nvar view = require('../view');\nvar user = require('../vm/user');\nvar resolveObject = require('../resolve_object');\n\nvar template = \"<!-- ko with: user -->\\n    <h2 data-bind=\\\"text: fullname\\\"></h2>\\n\\n    <form data-bind=\\\"submit: save\\\" autocomplete=\\\"off\\\">\\n        <div data-bind=\\\"errors: errors.fullname\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-fullname\\\">Full name</label>\\n            <input data-bind=\\\"value: fullname\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-fullname\\\"\\n                placeholder=\\\"Full name\\\">\\n        </div>\\n        <div data-bind=\\\"errors: errors.username\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-username\\\">Username</label>\\n            <input data-bind=\\\"value: username\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-username\\\"\\n                placeholder=\\\"Username\\\">\\n        </div>\\n        <div data-bind=\\\"errors: errors.type\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-type\\\">Type</label>\\n            <select data-bind=\\\"value: type, options: roles,\\n                optionsText: 'label', optionsValue: 'name'\\\"\\n                class=\\\"form-control\\\" id=\\\"user-type\\\"></select>\\n        </div>\\n        <div data-bind=\\\"errors: errors.link\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-link\\\">Link</label>\\n            <input data-bind=\\\"value: link\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-link\\\"\\n                placeholder=\\\"Link\\\">\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n            <label><input data-bind=\\\"checked: comment_notifications\\\" type=\\\"checkbox\\\">\\n                Comment notifications</label>\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n            <label><input data-bind=\\\"checked: password_edit, disable: creating\\\" type=\\\"checkbox\\\">\\n                Edit password</label>\\n        </div>\\n        <div data-bind=\\\"visible: password_edit, errors: errors.password\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-password\\\">New password</label>\\n            <input data-bind=\\\"value: password\\\"\\n                type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"user-password\\\"\\n                placeholder=\\\"Password\\\">\\n            <div class=\\\"checkbox\\\">\\n                <label><input data-bind=\\\"checked: password_text\\\" type=\\\"checkbox\\\">\\n                    Show text</label>\\n            </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save\\n        </button>\\n        <a class=\\\"btn btn-default\\\" href=\\\"#users\\\">\\n            <span class=\\\"glyphicon glyphicon-arrow-left\\\"></span> Cancel\\n        </a>\\n    </form>\\n<!-- /ko -->\\n\";\n\n// Page for editing an user.\n\nexports.create = function(id) {\n\n    var model = {\n\n        user: ko.observable()\n    };\n\n    var requests = { roles: api.roles() };\n\n    if (id) {\n\n        requests.user = api.user(id);\n    }\n\n    return resolveObject(requests).then(function(data) {\n\n        model.user(user.create(data.roles, data.user));\n\n        view.show(template, model);\n\n        if (id) {\n\n            var fullname = document.querySelector('#user-fullname');\n\n            fullname.focus();\n\n            if (typeof fullname.setSelectionRange === 'function') {\n\n                fullname.setSelectionRange(0, fullname.value.length);\n            }\n        }\n    });\n};\n",
    "\nvar api = require('../api');\nvar view = require('../view');\nvar users_item = require('../vm/users_item');\n\nvar template = \"<h2>Users</h2>\\n<!-- ko if: !permission() -->\\n    <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n        You do not have permissions to manage users.\\n    </div>\\n<!-- /ko -->\\n<!-- ko if: permission() -->\\n    <ul data-bind=\\\"foreach: users\\\" class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item post-item\\\">\\n            <h4 data-bind=\\\"click: expand, text: fullname\\\" class=\\\"list-group-item-heading\\\"></h4>\\n            <div class=\\\"list-group-item-text\\\">\\n                Type: <span data-bind=\\\"text: type\\\"></span>,\\n                username: <span data-bind=\\\"text: username\\\"></span>\\n                <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls\\\">\\n                    <a data-bind=\\\"attr: { href: '#user/' + $id }, css: { disabled: !editable }\\\"\\n                        class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit\\n                    </a>\\n                    <a data-bind=\\\"click: remove, css: { disabled: !editable }\\\"\\n                        class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-remove\\\"></span> Remove\\n                    </a>\\n                </div>\\n            </div>\\n        </li>\\n    </ul>\\n    <a class=\\\"btn btn-default\\\" href=\\\"#user/new\\\">\\n        <span class=\\\"glyphicon glyphicon-plus\\\"></span> Add\\n    </a>\\n<!-- /ko -->\\n\";\n\n// Page for displaying the users list.\n\nexports.create = function() {\n\n    var model = {\n\n        users: ko.observableArray([]),\n\n        permission: ko.observable(false)\n    };\n\n    return api.userInfo().then(function(info) {\n\n        if (info.type !== 'admin') {\n\n            view.show(template, model);\n\n        } else {\n\n            return api.users().then(function(users) {\n\n                model.users(users.map(function(data) {\n\n                    var user = users_item.create(data);\n\n                    user.editable = info.type === 'admin' || user.$id === info.$id;\n\n                    return user;\n\n                }));\n\n                model.permission(true);\n\n                view.show(template, model);\n            });\n        }\n    });\n};\n",
    "// Shows preview for the given URL.\n\nvar last, callback, editorScrollTop, viewScrollTop = -1;\n\n// Callback is called when preview is closed.\n\nexports.show = function(url, cb) {\n\n    var iframe = holder();\n\n    if (iframe) {\n\n        if (last === url) {\n\n            // Just refresh.\n\n            iframe.contentWindow.location.reload(true);\n\n        } else {\n\n            iframe.src = url;\n\n            viewScrollTop = -1;\n        }\n\n    } else {\n\n        iframe = document.createElement('iframe');\n\n        iframe.src = url;\n\n        preview.appendChild(iframe);\n\n        viewScrollTop = -1;\n    }\n\n    // Store scroll position.\n\n    editorScrollTop = document.body.scrollTop;\n\n    // Show preview.\n\n    main.style.display = 'none';\n\n    preview.style.display = 'block';\n\n    controls.style.display = 'block';\n\n    if (viewScrollTop > 0) {\n\n        // Restore preview scroll position when set.\n\n        document.body.scrollTop = viewScrollTop;\n    }\n\n    last = url;\n\n    callback = cb;\n};\n\nexports.dispose = function() {\n\n    // Clean preview element.\n\n    preview.innerHTML = '';\n\n    callback = null;\n};\n\nfunction holder() {\n\n    return preview.querySelector('iframe');\n}\n\n// Main and preview elements.\n\nvar main = document.getElementById('main');\nvar preview = document.getElementById('preview');\nvar controls = document.getElementById('preview-controls');\n\n// Control button to close the preview.\n\nvar close = controls.querySelector('[data-control=\"close\"]');\n\nclose.addEventListener('click', function(e) {\n\n    e.preventDefault();\n\n    hide();\n\n}, false);\n\n// Preview hide handler.\n\nfunction hideHandler(e) {\n\n    if (e.keyCode === 27) {\n\n        hide();\n    }\n}\n\nfunction hide() {\n\n    // Store preview scroll position.\n\n    viewScrollTop = document.body.scrollTop;\n\n    main.style.display = 'block';\n\n    preview.style.display = 'none';\n\n    controls.style.display = 'none';\n\n    if (typeof callback === 'function') {\n\n        callback();\n    }\n\n    // Restore editor scroll position.\n\n    document.body.scrollTop = editorScrollTop;\n}\n\ndocument.addEventListener('keydown', hideHandler, false);\n\n// Starts resize timer.\n\nvar timer;\n\nfunction resize() {\n\n    var iframe = holder();\n\n    if (iframe) {\n\n        var contentDocument = iframe.contentDocument;\n\n        if (contentDocument.body) {\n\n            var scrollHeight = contentDocument.body.scrollHeight;\n            var iframeHeight = iframe.clientHeight;\n\n            if (scrollHeight > iframeHeight) {\n\n                iframe.style.height = (scrollHeight + 50) + 'px';\n            }\n        }\n    }\n\n    timer = setTimeout(resize, 100);\n}\n\ntimer = resize();\n",
    "// Resolves object properties\n// as promises.\n\nmodule.exports = function(obj) {\n\n    var tasks = [], map = [];\n\n    Object.keys(obj).forEach(function(key) {\n\n        tasks.push(obj[key]);\n\n        map.push(key);\n    });\n\n    return Promise.all(tasks).then(function(data) {\n\n        var resolved = {};\n\n        data.forEach(function(value, i) {\n\n            resolved[map[i]] = value;\n        });\n\n        return resolved;\n    });\n};\n",
    "exports.show = function() {\n\n    document.getElementById('spinner').style.display = 'block';\n};\n\nexports.hide = function() {\n\n    document.getElementById('spinner').style.display = 'none';\n};\n",
    "exports.show = kontainer.create('#content');\n",
    "var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// View Model for a comment.\n\nexports.create = function(data, userInfo, entryInfo, typeInfo) {\n\n    var comment = {};\n\n    // Make it expandable.\n\n    expandable.mixin(comment);\n\n    // Copies data attributes.\n\n    assign(comment, data);\n\n    comment.removable = false;\n\n    if (userInfo.type === 'admin') {\n\n        comment.removable = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_any') >= 0) {\n\n        comment.removable = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_own') >= 0) {\n\n        if (entryInfo.author === userInfo.$id) {\n\n            comment.removable = true;\n        }\n    }\n\n    comment.remove = function() {\n\n        if (confirm('Remove the comment?')) {\n\n            api.removeComment(entryInfo.$id, comment.$id).then(function() {\n\n                message.info('The comment has been removed.');\n\n                route.refresh();\n\n            }).catch(message.error);\n        }\n    };\n\n    return comment;\n};\n",
    "// Mixin for expandable view models.\n\nexports.mixin = function(obj) {\n\n    obj.expanded = ko.observable(false);\n\n    obj.expand = function() {\n\n        if (obj.expanded()) {\n\n            obj.expanded(false);\n\n        } else {\n\n            obj.expanded(true);\n        }\n    };\n};\n",
    "var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('../vm/expandable');\n\n// Creates file view model for\n// the files list view.\n\nexports.create = function(slug, data) {\n\n    var file = {};\n\n    // Copies data attributes.\n\n    assign(file, data);\n\n    expandable.mixin(file);\n\n    file.url = ko.pureComputed(function() {\n\n        return '/' + encodeURIComponent(slug()) + '/' +\n            encodeURIComponent(file.name);\n    });\n\n    file.image = !!file.name.match(/\\.(gif|jpg|jpeg|tiff|png)$/i);\n\n    return file;\n};\n",
    "var api = require('../api');\nvar message = require('../message');\nvar languages = require('../languages');\nvar files_item = require('./files_item');\n\n// Creates post view model for already\n// existing post or a new post. For new\n// post, data must be unset. The authors\n// argument must contain the list of all\n// users.\n\nexports.create = function(userInfo, type, types, authors, files, data, recovered) {\n\n    var post = {\n\n        $id: ko.observable(),\n\n        // List of authors. Used by the\n        // author list dropdown.\n\n        authors: authors,\n\n        // The post title. When this is\n        // the new post then initial slug\n        // is generated by it.\n\n        title: ko.observable('Untitled'),\n\n        // The post slug. Can contain\n        // \"safe\" characters only.\n\n        slug: ko.observable('untitled'),\n\n        // The post description. Can\n        // be left blank.\n\n        description: ko.observable(''),\n\n        types: types,\n\n        // The post type. Currently\n        // available types are post,\n        // page and block.\n\n        type: ko.observable(type),\n\n        // Type of the post content.\n        // Will be processed by the\n        // Markdown formatter when set\n        // to 'markdown''\n\n        content_type: ko.observable('markdown'),\n\n        // Flag to set whether the post\n        // is published or not.\n\n        published: ko.observable(false),\n\n        // Flag to set whether commenting\n        // is allowed or not.\n\n        commenting: ko.observable(true),\n\n        // List of tags. Tags are separated\n        // by commas.\n\n        tags: ko.observable(''),\n\n        // The count of comments.\n        // Currently not used.\n\n        comments: ko.observable(0),\n\n        // Selected user. Only admins\n        // can select author other than\n        // themself.\n\n        author: ko.observable(),\n\n        // Publish date as a string in\n        // the format YYYY-MM-DD. Might be\n        // unset when published flag is not set.\n\n        date: ko.observable(''),\n\n        // Update date as a string in\n        // the format YYYY-MM-DD.\n\n        update: ko.observable(''),\n\n        // Validates the post data.\n        // Saves or updates it using the API.\n\n        submit: function() {\n\n            submitPost(post, 'edit');\n        },\n\n        // Similar to submit but leaves\n        // the form.\n\n        save: function() {\n\n            submitPost(post, 'leave');\n        },\n\n        // The post language code. See\n        // languages.js for the list of codes.\n\n        language: ko.observable(bcLanguage),\n\n        // List of available languages.\n\n        languages: languages,\n\n        // Indicator for files component.\n\n        slug_changed: ko.observable(false),\n\n        // Only admin can change the type.\n\n        can_change_type: userInfo.type === 'admin',\n\n        // Only admin can change the author.\n\n        can_change_author: userInfo.type === 'admin',\n\n        // Array of entry files.\n\n        files: ko.observableArray(files),\n\n        // Input errors for the errors\n        // binding.\n\n        errors: {\n\n            title: ko.observableArray([]),\n            slug: ko.observableArray([]),\n            content: ko.observableArray([]),\n            date: ko.observableArray([]),\n            update: ko.observableArray([])\n        },\n\n        // Returns the plain data object\n        // to send to the backend.\n\n        toJS: function() {\n\n            var tags = post.tags().trim();\n\n            var date = post.date();\n\n            // date_published will be undefined when\n            // no date has been entered.\n\n            var date_published;\n\n            if (date !== '') {\n\n                date_published = isoDateToUnix(date);\n            }\n\n            var date_updated = isoDateToUnix(post.update());\n\n            return {\n\n                author: post.author(),\n                title: post.title(),\n                slug: post.slug(),\n                description: post.description(),\n                content: post.editor.content(),\n                type: post.type(),\n                date_published: date_published,\n                date_updated: date_updated,\n                commenting: post.commenting(),\n                published: post.published(),\n                content_type: post.content_type(),\n                tags: tags === '' ? [] : tags.split(/\\, */),\n                language: post.language()\n            };\n        },\n\n        // Updates values from a plain\n        // data object.\n\n        fromJS: function(data) {\n\n            // When the publish date is set then\n            // set the date field to formatted string.\n\n            if (typeof data.date_published !== 'undefined') {\n\n                var d = new Date(data.date_published * 1000);\n\n                post.date(d.toISOString().substring(0, 10));\n            }\n\n            post.$id(data.$id);\n            post.author(data.author);\n            post.title(data.title);\n            post.slug(data.slug);\n            post.description(data.description || '');\n            post.type(data.type);\n            post.content_type(data.content_type);\n            post.published(data.published);\n            post.commenting(data.commenting);\n            post.tags(data.tags.join(', '));\n            post.comments(data.comments);\n            post.language(data.language);\n\n            // Set up the existing files list.\n\n            files.sort(function(left, right) {\n\n                return left.name === right.name ? 0 : (left.name < right.name ? -1 : 1);\n            });\n\n            post.files(files.map(function(file) {\n\n                return files_item.create(post.slug, file);\n\n            }));\n        }\n    };\n\n    var typeInfo;\n\n    types.forEach(function(info) {\n\n        if (info.name === type) {\n\n            typeInfo = info;\n        }\n    });\n\n    if (!typeInfo) {\n\n        throw new Error('Invalid type ' + type);\n    }\n\n    // Use the preview URL pattern from\n    // type info.\n\n    post.preview = typeInfo.preview;\n\n    // Sets the view model values by the\n    // actual data object.\n\n    if (data) {\n\n        // Uses recovered data when set.\n\n        if (recovered) {\n\n            post.fromJS(recovered);\n\n            // Creates autosave from current state immediately.\n\n            setTimeout(function() {\n\n                post.parent.autosave();\n\n            }, 100);\n\n        } else {\n\n            post.fromJS(data);\n        }\n\n    } else {\n\n        // Uses recovered data.\n\n        if (recovered) {\n\n            post.fromJS(recovered);\n\n            // Creates autosave from current state immediately.\n\n            setTimeout(function() {\n\n                post.parent.autosave();\n\n            }, 100);\n        }\n\n        // Only when for new post.\n        // Add automatic slug generation.\n\n        post.title.subscribe(function(value) {\n\n            post.slug(getSlug(value));\n        });\n\n        // Select user as post author.\n\n        post.author(userInfo.$id);\n\n        // Default publish date.\n\n        post.date(new Date().toISOString().substring(0, 10));\n    }\n\n    // Set publishing permission flag.\n\n    post.can_publish = false;\n\n    if (userInfo.type === 'admin') {\n\n        post.can_publish = true;\n    }\n\n    if (typeInfo.grants.indexOf('publish_any') >= 0) {\n\n        post.can_publish = true;\n    }\n\n    if (typeInfo.grants.indexOf('publish_own') >= 0) {\n\n        if (post.author() === userInfo.$id) {\n\n            post.can_publish = true;\n        }\n    }\n\n    // Sets file management flag.\n\n    post.can_manage_files = false;\n\n    if (userInfo.type === 'admin') {\n\n        post.can_manage_files = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_any') >= 0) {\n\n        if (typeInfo.grants.indexOf('files') >= 0) {\n\n            post.can_manage_files = true;\n        }\n    }\n\n    if (typeInfo.grants.indexOf('update_own') >= 0) {\n\n        if (post.author() === userInfo.$id) {\n\n            if (typeInfo.grants.indexOf('files') >= 0) {\n\n                post.can_manage_files = true;\n            }\n        }\n    }\n\n    // Default update date is the current date.\n\n    post.update(new Date().toISOString().substring(0, 10));\n\n    post.published.subscribe(function(value) {\n\n        // Set publish date when post is published.\n        // Applies only when no publish date is set.\n\n        if (value && post.date() === '') {\n\n            post.date(new Date().toISOString().substring(0, 10));\n        }\n    });\n\n    // Indicated that slug has been changed\n    // and file management does not work before\n    // saving.\n\n    post.slug.subscribe(function(value) {\n\n        post.slug_changed(true);\n    });\n\n    // Submits the file upload form and\n    // performs the file upload process.\n\n    post.uploadFile = function() {\n\n        var file = document.getElementById('entry-file').files[0];\n\n        if (!file || !post.$id()) {\n\n            return;\n        }\n\n        api.upload(post.$id(), file).then(function(response) {\n\n            message.info('File \"' + file.name + '\" has been uploaded.');\n\n            post.files.push(files_item.create(post.slug, { name: file.name }));\n\n            // This resets the file input.\n\n            var wrap = document.getElementById('entry-file-wrap');\n\n            wrap.innerHTML = '';\n            wrap.innerHTML = '<input type=\"file\" id=\"entry-file\" class=\"form-control\" placeholder=\"Your file\">';\n\n        }).catch(message.error);\n    };\n\n    // Removes the file.\n    // Asks confirmation.\n\n    post.removeFile = function(file) {\n\n        if (confirm('Remove the file \"' + file.name + '\"?')) {\n\n            api.removeFile(post.$id(), file.name).then(function() {\n\n                message.info('File \"' + file.name + '\" has been removed.');\n\n                post.files.remove(file);\n\n            }).catch(message.error);\n        }\n    };\n\n    // Adds as image.\n\n    post.insertImage = function(file) {\n\n        api.imageSize(post.$id(), file.name).then(function(size) {\n\n            post.editor.insert('<img src=\"' + file.url() +\n                '\" width=\"' +size.width + '\" height=\"' + size.height + '\">');\n\n            post.editor.focus();\n\n        }, function() {\n\n            // Ignores dimensions API error.\n\n            post.editor.insert('<img src=\"' + file.url() + '\">');\n\n            post.editor.focus();\n\n        }).catch(message.error);\n    };\n\n    // Adds as link.\n\n    post.insertLink = function(file) {\n\n        post.editor.insert('[' + file.name + '](' + file.url() + ')');\n\n        post.editor.focus();\n    };\n\n    // FIXME refactor\n\n    post.submitUpdate = function() {\n\n        return submitPost(post, 'edit');\n    };\n\n    // Sets change callback.\n\n    post.change = function(callback) {\n\n        post.changeCallback = callback;\n    };\n\n    // Set up change detection.\n\n    ['author', 'title', 'slug', 'description', 'type',\n        'content_type', 'published', 'commenting', 'tags',\n        'language', 'date', 'update'].forEach(function(input) {\n\n        post[input].subscribe(function() {\n\n            if (typeof post.changeCallback === 'function') {\n\n                post.changeCallback();\n            }\n        });\n    });\n\n    return post;\n};\n\n// Converts ISO8601 date part into\n// an Unix timestamp.\n\nfunction isoDateToUnix(string) {\n\n    var match = string.match(/^(\\d{4})\\-(\\d{2})\\-(\\d{2})$/);\n\n    if (!match) {\n\n        throw new Error('Date does not match pattern: ' + string);\n    }\n\n    var date = new Date();\n\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCFullYear(parseInt(match[1], 10), parseInt(match[2], 10) - 1, parseInt(match[3], 10));\n\n    return Math.floor(date.getTime() / 1000);\n}\n\n// Validates the given post.\n// Adds errors using the validate module.\n\nfunction validatePost(post) {\n\n    if (post.title() === '') {\n\n        post.errors.title.push('Title is not entered.');\n    }\n\n    var slug = post.slug();\n\n    if (slug === '') {\n\n        post.errors.slug.push('Slug is not entered.');\n\n    } else {\n\n        if (!slug.match(/^[a-z0-9\\-_]+$/)) {\n\n            post.errors.slug.push('Use lowercase letters, numbers, hyphen and underscore.');\n        }\n    }\n\n    var date = post.date();\n\n    if (date === '') {\n\n        if (post.published()) {\n\n            post.errors.date.push('Publish date is not entered.');\n        }\n\n    } else if (!date.match(/^\\d{4}\\-\\d{2}\\-\\d{2}$/)) {\n\n        post.errors.date.push('Date must be in the YYYY-MM-DD format.');\n    }\n\n    var update = post.update();\n\n    if (update === '') {\n\n        post.errors.update.push('Update date is not entered.');\n\n    } else if (!update.match(/^\\d{4}\\-\\d{2}\\-\\d{2}$/)) {\n\n        post.errors.update.push('Update date must be in the YYYY-MM-DD format.');\n    }\n}\n\n// Handles save and\n// save-with-continue actions.\n\nfunction submitPost(post, action) {\n\n    var form = document.getElementById('post');\n\n    // Clear errors.\n\n    Object.keys(post.errors).forEach(function(key) {\n\n        post.errors[key]([]);\n    });\n\n    validatePost(post);\n\n    var input = form.querySelector(\n        '.has-error input, .has-error textarea, .has-error checkbox');\n\n    if (input) {\n\n        // Open the info section when\n        // it contains errors.\n\n        if (form.querySelector('.bc-info .has-error input,' +\n            ' .bc-info .has-error textarea, .bc-info .has-error checkbox')) {\n\n            post.parent.info(true);\n        }\n\n        input.focus();\n\n        return Promise.resolve(false);\n    }\n\n    // When post has '$id' property\n    // then it's an existing post.\n\n    if (post.$id()) {\n\n        return updatePost(form, post, action);\n\n    } else {\n\n        return savePost(form, post, action);\n    }\n}\n\n// Updates the already existing\n// post. Assumes that the post\n// is validated.\n\nfunction updatePost(form, post, action) {\n\n    return api.updatePost(post.$id(), post.toJS()).then(function() {\n\n        message.info('The entry \"' + post.title() + '\" has been updated.');\n\n        // Clear autosave.\n\n        post.parent.clearAutosave();\n\n        if (action === 'edit') {\n\n            post.slug_changed(false);\n\n            // Reload possibly changed post content.\n\n            api.post(post.$id()).then(function(data) {\n\n                if (post.editor.content() !== data.content) {\n\n                    post.editor.begin(data.content);\n                }\n\n                post.parent.modified(false);\n\n            }).catch(message.error);\n\n        } else {\n\n            route.go('entries/' + post.type());\n        }\n\n    }).catch(saveError.bind(null, post));\n}\n\n// Saves the new post.\n\nfunction savePost(form, post, action) {\n\n    return api.savePost(post.toJS()).then(function(res) {\n\n        message.info('The entry \"' + post.title() + '\" has been saved.');\n\n        post.parent.modified(false);\n\n        // Clear autosave.\n\n        post.parent.clearAutosave();\n\n        // Redirect to post page when we\n        // want to keep editing the post.\n        // Otherwise go back to listing page.\n\n        if (action === 'edit') {\n\n            route.go('entry/' + post.type() + '/' + res);\n\n        } else {\n\n            route.go('entries/' + post.type());\n        }\n\n    }).catch(saveError.bind(null, post));\n}\n\nfunction saveError(post, err) {\n\n    if (err.toString().match(/entry with the same slug exists/)) {\n\n        post.errors.slug.push('Entry with the same slug exists.');\n\n        // Open info section.\n\n        post.parent.info(true);\n\n        document.querySelector('.has-error input').focus();\n\n    } else {\n\n        message.error(err);\n    }\n\n    throw err;\n}\n",
    "var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// Creates posts view model for\n// the users list view.\n\nexports.create = function(data, typeInfo, userInfo) {\n\n    var post = {};\n\n    // Make it expandable.\n\n    expandable.mixin(post);\n\n    // Copies data attributes.\n\n    assign(post, data);\n\n    post.removable = false;\n\n    // Find if the entry can be removed.\n\n    if (userInfo.type === 'admin') {\n\n        post.removable = true;\n\n    }\n\n    if (typeInfo.grants.indexOf('remove_any') >= 0) {\n\n        post.removable = true;\n\n    }\n\n    if (typeInfo.grants.indexOf('remove_own') >= 0) {\n\n        if (userInfo.$id === post.author) {\n\n            post.removable = true;\n        }\n    }\n\n    post.editable = false;\n\n    if (userInfo.type === 'admin') {\n\n        post.editable = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_any') >= 0) {\n\n        post.editable = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_own') >= 0) {\n\n        if (userInfo.$id === post.author) {\n\n            post.editable = true;\n        }\n    }\n\n    post.editLink = '#entry/' + typeInfo.name + '/' + post.$id;\n\n    post.commentsLink = '#comments/' + typeInfo.name + '/' + post.$id;\n\n    // Removes the post.\n    // Asks confirmation.\n\n    post.remove = function() {\n\n        if (confirm('Remove the post \"' + post.title + '\"?')) {\n\n            api.removePost(post.$id).then(function() {\n\n                message.info('The post \"' + post.title + '\" has been removed.');\n\n                route.refresh();\n\n            }).catch(message.error);\n        }\n    };\n\n    return post;\n};\n",
    "var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// Creates trash item view model.\n\nexports.create = function(data) {\n\n    var item = {};\n\n    // Make it expandable.\n\n    expandable.mixin(item);\n\n    // Copies data attributes.\n\n    assign(item, data);\n\n    // Removes from trash.\n\n    item.remove = function() {\n\n        if (confirm('Remove the entry from trash?')) {\n\n            api.removeFromTrash(item.$id).then(function() {\n\n                message.info('Item \"' + item.title + '\" has been removed.');\n\n                route.refresh();\n\n            }).catch(message.error);\n        }\n    };\n\n    // Restores the item.\n\n    item.restore = function() {\n\n        api.restore(item.$id).then(function() {\n\n            message.info('Item \"' + item.title + '\" has been restored.');\n\n            route.refresh();\n\n        }).catch(message.error);\n    };\n\n    return item;\n};\n",
    "var api = require('../api');\nvar message = require('../message');\n\nexports.create = function(roles, data) {\n\n    var user = {\n\n        username: ko.observable(''),\n\n        fullname: ko.observable(''),\n\n        type: ko.observable('author'),\n\n        link: ko.observable(''),\n\n        password: ko.observable(''),\n\n        password_edit: ko.observable(true),\n\n        password_text: ko.observable(false),\n\n        error: ko.observable(''),\n\n        creating: true,\n\n        roles: roles,\n\n        comment_notifications: ko.observable(false),\n\n        errors: {\n\n            username: ko.observableArray([]),\n\n            fullname: ko.observableArray([]),\n\n            password: ko.observableArray([]),\n\n            link: ko.observableArray([]),\n\n            type: ko.observableArray([])\n        },\n\n        save: function(form) {\n\n            // Clear errors.\n\n            Object.keys(user.errors).forEach(function(key) {\n\n                user.errors[key]([]);\n            });\n\n            if (user.password_edit()) {\n\n                var password = user.password();\n\n                if (password === '') {\n\n                    user.errors.password.push('Password is not set.');\n\n                } else if (password.length < 6) {\n\n                    user.errors.password.push('Password length must be at least 6.');\n                }\n            }\n\n            var username = user.username();\n\n            if (username === '') {\n\n                user.errors.username.push('Username is not set.');\n\n            } else {\n\n                if (!username.match(/^[^@]+@[^@]+$/)) {\n\n                    user.errors.username.push('Username must be an email address.');\n                }\n            }\n\n            var fullname = user.fullname();\n\n            if (fullname === '') {\n\n                user.errors.fullname.push('Full name is not set.');\n            }\n\n            var link = user.link();\n\n            if (link !== '') {\n\n                if (!link.match(/https?:\\/\\//)) {\n\n                    user.errors.link.push('Link must start with http:// or https:// prefix.');\n                }\n            }\n\n            var input = form.querySelector(\n                '.has-error input, .has-error textarea,' +\n                ' .has-error checkbox, .has-error select');\n\n            if (input) {\n\n                input.focus();\n\n                return false;\n            }\n\n            if (user.$id) {\n\n                api.updateUser(user.$id, user.toJS()).then(function() {\n\n                    message.info('User \"' + user.username() + '\" has been updated.');\n\n                    route.go('users');\n\n                }).catch(handleSaveError.bind(null, user));\n\n            } else {\n\n                api.saveUser(user.toJS()).then(function() {\n\n                    message.info('User \"' + user.username() + '\" has been added.');\n\n                    route.go('users');\n\n                }).catch(handleSaveError.bind(null, user));\n            }\n\n            return false;\n        },\n\n        toJS: function() {\n\n            var js = {\n\n                username: user.username(),\n                fullname: user.fullname(),\n                type: user.type(),\n                link: user.link(),\n                comment_notifications: user.comment_notifications()\n            };\n\n            if (user.password_edit()) {\n\n                js.password = user.password();\n            }\n\n            return js;\n        }\n    };\n\n    user.password_text.subscribe(function(value) {\n\n        if (value) {\n\n            document.getElementById('user-password').type = 'text';\n\n        } else {\n\n            document.getElementById('user-password').type = 'password';\n        }\n    });\n\n    if (data) {\n\n        user.$id = data.$id;\n        user.creating = false;\n        user.username(data.username);\n        user.fullname(data.fullname);\n        user.type(data.type);\n        user.link(data.link);\n        user.password_edit(false);\n        user.comment_notifications(data.comment_notifications);\n\n    } else {\n\n        user.fullname('Unnamed');\n    }\n\n    return user;\n};\n\nfunction handleSaveError(user, err) {\n\n    var string = err.toString();\n\n    if (string.match(/Cannot remove the last admin/)) {\n\n        user.errors.type.push('Cannot remove the last admin.');\n\n    } else if (string.match(/username exists/)) {\n\n        user.errors.username.push('The username exists.');\n\n    } else {\n\n        message.error(err);\n    }\n}\n",
    "var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// Creates user view model for\n// the users list view.\n\nexports.create = function(data) {\n\n    var user = {\n\n        editable: false\n    };\n\n    // Make it expandable.\n\n    expandable.mixin(user);\n\n    // Copies data attributes.\n\n    assign(user, data);\n\n    // Removes the user.\n    // Asks confirmation.\n\n    user.remove = function() {\n\n        if (confirm('Remove the user?')) {\n\n            api.userInfo().then(function(userInfo) {\n\n                return api.removeUser(user.$id).then(function() {\n\n                    message.info('User \"' + user.username + '\" has been removed.');\n\n                    if (userInfo.$id === user.$id) {\n\n                        // User removed itself.\n\n                        sessionStorage.removeItem('api-key');\n\n                        localStorage.removeItem('api-key');\n\n                        window.location = '/admin';\n\n                    } else {\n\n                        route.refresh();\n                    }\n\n                });\n\n            }).catch(message.error);\n        }\n    };\n\n    return user;\n};\n"
  ]
}