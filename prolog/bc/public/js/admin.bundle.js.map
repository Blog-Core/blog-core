{"version":3,"file":"bundle.js","sources":["/home/raivo/blog-core/admin/node_modules/browserify/node_modules/browser-pack/_prelude.js","/home/raivo/blog-core/admin/admin.js","/home/raivo/blog-core/admin/hex.js","/home/raivo/blog-core/admin/api.js","/home/raivo/blog-core/admin/message.js","/home/raivo/blog-core/admin/components/menu.js","/home/raivo/blog-core/admin/components/login.js","/home/raivo/blog-core/admin/components/posts.js","/home/raivo/blog-core/admin/components/post.js","/home/raivo/blog-core/admin/components/users.js","/home/raivo/blog-core/admin/components/files.js","/home/raivo/blog-core/admin/components/user.js","/home/raivo/blog-core/admin/components/comments.js","/home/raivo/blog-core/admin/xhr.js","/home/raivo/blog-core/admin/validate.js","/home/raivo/blog-core/admin/vm/posts_item.js","/home/raivo/blog-core/admin/resolve_object.js","/home/raivo/blog-core/admin/vm/post.js","/home/raivo/blog-core/admin/vm/users_item.js","/home/raivo/blog-core/admin/vm/files_item.js","/home/raivo/blog-core/admin/vm/user.js","/home/raivo/blog-core/admin/vm/comments_item.js","/home/raivo/blog-core/admin/spin.js","/home/raivo/blog-core/admin/assign.js","/home/raivo/blog-core/admin/vm/expandable.js","/home/raivo/blog-core/admin/languages.js"],"names":["loadMenu","model","menu","types","Promise","resolve","api","then","authenticated","hasKey","route","go","hex","require","message","window","formatDate","ts","Date","toISOString","substring","ko","subscribable","fn","trimmed","computed","read","this","trim","write","value","valueHasMutated","owner","component","observable","params","active","show","name","applyBindings","type","id","sessionStorage","removeItem","localStorage","location","length","document","body","addEventListener","e","target","href","match","confirm","stopPropagation","preventDefault","exports","string","encoded","encodeURIComponent","i","ch","charAt","charCodeAt","toString","toLowerCase","decodeURIComponent","jsend_auth","options","headers","apiKey","jsend","xhr","response","json","JSON","parse","status","data","Error","login","username","password","method","url","stringify","Content-Type","posts","post","entryInfo","comments","removeComment","entryId","updatePost","savePost","removePost","files","removeFile","file","users","user","userInfo","updateUser","saveUser","removeUser","typeInfo","roles","getItem","key","info","text","messages","getElementById","createElement","className","innerHTML","appendChild","setTimeout","removeChild","error","err","button","console","stack","components","register","viewModel","createViewModel","template","page","remember","form","validate","clear","hasError","res","setItem","formError","all","count","step","create","title","loaded","hasMore","pureComputed","showMore","scrollTo","scrollHeight","showAll","slice","requests","resolveObject","menu_label","grants","indexOf","sort","post1","post2","date_updated","map","postData","postsItem","$id","fullname","editor","style","height","querySelector","focus","setSelectionRange","observableArray","permission","users_item","editable","directory","entry_id","entry_slug","slug","progress","slug_changed","upload","XMLHttpRequest","complete","failed","aborted","open","setRequestHeader","send","lengthComputable","Math","round","total","responseText","push","files_item","wrap","remove","left","right","tasks","userData","comments_item","spin","module","reject","req","Object","keys","forEach","onreadystatechange","readyState","hide","errors","querySelectorAll","item","parentNode","classList","elem","add","insertBefore","assign","expandable","mixin","removable","author","editLink","commentsLink","refresh","obj","resolved","isoDateToUnix","date","setUTCHours","setUTCFullYear","parseInt","floor","getTime","validatePost","content","published","update","submitPost","edit","toJS","scroll","languages","authors","description","content_type","commenting","tags","submit","save","language","bcLanguage","can_change_type","can_change_author","date_published","split","d","join","subscribe","getSlug","can_publish","can_manage_files","link","password_edit","password_text","creating","js","comment","display","to","from","expanded","expand","code"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var hex = require('./hex');\nvar api = require('./api');\nvar message = require('./message');\n\n// Menu component.\n\nrequire('./components/menu');\n\n// Login component.\n\nrequire('./components/login');\n\n// Posts list component.\n\nrequire('./components/posts');\n\n// Posts edit component.\n\nrequire('./components/post');\n\n// Users list component.\n\nrequire('./components/users');\n\n// Entry files component.\n\nrequire('./components/files');\n\n// User edit component.\n\nrequire('./components/user');\n\n// Comments list component.\n\nrequire('./components/comments');\n\n// Global to format dates.\n\nwindow.formatDate = function(ts) {\n\n    return new Date(1000 * ts).toISOString().substring(0, 10);\n};\n\n// Helper to trim whitespace from values.\n\nko.subscribable.fn.trimmed = function() {\n\n    return ko.computed({\n\n        read: function() {\n\n            return this().trim();\n        },\n\n        write: function(value) {\n\n            this(value.trim());\n            this.valueHasMutated();\n        },\n\n        owner: this\n    });\n};\n\n// The main model.\n\nvar model = {\n\n    component: ko.observable(),\n\n    // FIXME changing this before component\n    // might have side effects.\n\n    params: ko.observable({}),\n\n    menu: {\n\n        active: ko.observable(),\n\n        types: ko.observable()\n    }\n};\n\n// Shows given component with params.\n\nmodel.show = function(name, params, menu) {\n\n    model.menu.active(menu);\n    model.params(params);\n    model.component(name);\n};\n\nko.applyBindings(model);\n\n// Returns a Promise.\n\nfunction loadMenu() {\n\n    if (model.menu.types()) {\n\n        // Menu updated.\n\n        return Promise.resolve(model.menu.types());\n    }\n\n    return api.types().then(function(types) {\n\n        model.menu.types(types);\n\n        return types;\n    });\n}\n\n// Redirects user if he/she is not\n// authenticated.\n\nfunction authenticated() {\n\n    if (api.hasKey()) {\n\n        // If user if authenticated then\n        // check if custom menu entries need\n        // reloading.\n\n        loadMenu();\n\n    } else {\n\n        route.go('login');\n    }\n}\n\nroute(/^entries\\/([^\\/]+)/, function(type) {\n\n    authenticated();\n\n    model.show('posts', { type: type }, type);\n});\n\nroute(/^entry\\/([^\\/]+)\\/([^\\/]+)/, function(type, id) {\n\n    authenticated();\n\n    model.show('post', { type: type, id: id }, type);\n});\n\nroute(/^new\\/([^\\/]+)/, function(type) {\n\n    authenticated();\n\n    model.show('post', { type: type }, type);\n});\n\nroute(/^comments\\/([^\\/]+)\\/([^\\/]+)/, function(type, id) {\n\n    authenticated();\n\n    model.show('comments', { type: type, id: id }, type);\n});\n\nroute(/^users/, function() {\n\n    authenticated();\n\n    model.show('users', {}, 'users');\n});\n\nroute(/^user\\/new/, function() {\n\n    authenticated();\n\n    model.show('user', {}, 'users');\n});\n\nroute(/^user\\/([^\\/]+)/, function(id) {\n\n    authenticated();\n\n    model.show('user', { id: id }, 'users');\n});\n\nroute(/^login/, function() {\n\n    authenticated();\n\n    model.show('login', {});\n});\n\nroute(/^logout/, function() {\n\n    sessionStorage.removeItem('api-key');\n\n    localStorage.removeItem('api-key');\n\n    window.location = '/admin';\n});\n\n// Temporary route that decides\n// where to go.\n\nroute(/^landing/, function() {\n\n    model.show(null, {}, 'landing');\n\n    loadMenu().then(function(types) {\n\n        if (types.length > 0) {\n\n            // Select first type.\n\n            route.go('entries/' + types[0].name);\n        }\n    });\n});\n\nroute(/.*/, function() {\n\n    route.go(api.hasKey() ? 'landing' : 'login');\n});\n\ndocument.body.addEventListener('click', function(e) {\n\n    if (e.target.href && e.target.href.match(/#logout$/)) {\n\n        if (confirm('Do you want to log out?')) {\n\n            return true;\n\n        } else {\n\n            e.stopPropagation();\n\n            e.preventDefault();\n\n            return false;\n        }\n    }\n\n}, false);\n","exports.hex = function(string) {\n\n    var hex = '';\n\n    // This encodes string to escaped UTF-8 octets\n    // interleaved with normal ASCII characters.\n\n    var encoded = encodeURIComponent(string), i = 0;\n\n    while (i < encoded.length) {\n\n        var ch = encoded.charAt(i);\n\n        if (ch === '%') {\n\n            i += 1;\n\n            hex += encoded.charAt(i);\n\n            i += 1;\n\n            hex += encoded.charAt(i);\n\n        } else {\n\n            hex += encoded.charCodeAt(i).toString(16);\n        }\n\n        i += 1;\n    }\n\n    return hex.toLowerCase();\n};\n\nexports.string = function(hex) {\n\n    if (typeof hex !== 'string') {\n\n        hex = hex.toString();\n    }\n\n    var encoded = '';\n\n    // Turns into percent-encoded\n    // UTF-8.\n\n    while (hex) {\n\n        encoded += '%' + hex.substring(0, 2);\n\n        hex = hex.substring(2);\n    }\n\n    // Decodes to internal representation.\n\n    return decodeURIComponent(encoded);\n};\n","var xhr = require('./xhr');\n\nfunction jsend_auth(options) {\n\n    options.headers = options.headers || {};\n\n    options.headers['X-Key'] = apiKey();\n\n    return jsend(options);\n}\n\n// XHR with jsend response.\n\nfunction jsend(options) {\n\n    return xhr(options).then(function(response) {\n\n        var json = JSON.parse(response);\n\n        if (json.status === 'success') {\n\n            return json.data;\n\n        } else {\n\n            throw new Error(json.message);\n        }\n    });\n}\n\n// Login with credentials.\n\nexports.login = function(username, password) {\n\n    return jsend({\n\n        method: 'POST',\n\n        url: '/api/auth',\n\n        data: JSON.stringify({ username: username, password: password }),\n\n        headers: { 'Content-Type': 'application/json' }\n    });\n};\n\n// List of entries.\n\nexports.posts = function(type) {\n\n    return jsend_auth({ url: '/api/entries/' + encodeURIComponent(type) });\n};\n\n// The given entry.\n\nexports.post = function(id) {\n\n    return jsend_auth({ url: '/api/entry/' + encodeURIComponent(id) });\n};\n\n// The entry info.\n\nexports.entryInfo = function(id) {\n\n    return jsend_auth({ url: '/api/entry/' + encodeURIComponent(id) + '/info' });\n};\n\n// Retrieves the given entry comments.\n\nexports.comments = function(id) {\n\n    return jsend_auth({ url: '/api/post/' + encodeURIComponent(id) + '/comments' });\n};\n\n// Removes the given comment.\n\nexports.removeComment = function(entryId, id) {\n\n    return jsend_auth({\n\n        method: 'DELETE',\n\n        url: '/api/comment/' + encodeURIComponent(entryId) +\n            '/' + encodeURIComponent(id)\n    });\n};\n\n// Updates the given post.\n\nexports.updatePost = function(id, data) {\n\n    return jsend_auth({\n\n        method: 'PUT',\n\n        url: '/api/entry/' + encodeURIComponent(id),\n\n        data: JSON.stringify(data),\n\n        headers: { 'Content-Type': 'application/json' }\n    });\n};\n\n// Saves the given post.\n\nexports.savePost = function(data) {\n\n    return jsend_auth({\n\n        method: 'POST',\n\n        url: '/api/entry',\n\n        data: JSON.stringify(data),\n\n        headers: { 'Content-Type': 'application/json' }\n    });\n};\n\n// Removes the given post.\n\nexports.removePost = function(id) {\n\n    return jsend_auth({\n\n        method: 'DELETE',\n\n        url: '/api/entry/' + encodeURIComponent(id)\n    });\n};\n\n// Finds entry files.\n\nexports.files = function(entryId) {\n\n    return jsend_auth({ url: '/api/files/' + encodeURIComponent(entryId) });\n};\n\n// Removes the given entry file.\n\nexports.removeFile = function(entryId, file) {\n\n    return jsend_auth({\n\n        method: 'DELETE',\n\n        url: '/api/file/' + encodeURIComponent(entryId) +\n            '/' + encodeURIComponent(file)\n    });\n};\n\n// Retrieves all users.\n\nexports.users = function() {\n\n    return jsend_auth({ url: '/api/users' });\n};\n\n// Retrieves the given user.\n\nexports.user = function(id) {\n\n    return jsend_auth({ url: '/api/user/' + encodeURIComponent(id) });\n};\n\n// Retrieves the current user info.\n\nexports.userInfo = function() {\n\n    return jsend_auth({ url: '/api/user/info' });\n};\n\n// Updates the given user.\n\nexports.updateUser = function(id, data) {\n\n    return jsend_auth({\n\n        method: 'PUT',\n\n        data: JSON.stringify(data),\n\n        url: '/api/user/' + encodeURIComponent(id),\n\n        headers: { 'Content-Type': 'application/json' }\n    });\n};\n\n// Saves the new user.\n\nexports.saveUser = function(data) {\n\n    return jsend_auth({\n\n        method: 'POST',\n\n        data: JSON.stringify(data),\n\n        url: '/api/user',\n\n        headers: { 'Content-Type': 'application/json' }\n    });\n};\n\n// Removes the given user.\n\nexports.removeUser = function(id) {\n\n    return jsend_auth({\n\n        method: 'DELETE',\n\n        url: '/api/user/' + encodeURIComponent(id)\n    });\n};\n\n// Finds entry types.\n\nexports.types = function() {\n\n    return jsend_auth({ url: '/api/types' });\n};\n\n// Finds entry type info.\n\nexports.typeInfo = function(type) {\n\n    return jsend_auth({ url: '/api/type/' + encodeURIComponent(type) });\n};\n\n// Finds user roles.\n\nexports.roles = function() {\n\n    return jsend_auth({ url: '/api/roles' });\n};\n\n// Checks whether the API key has been set.\n\nexports.hasKey = function() {\n\n    return !!(sessionStorage.getItem('api-key') ||\n        localStorage.getItem('api-key'));\n};\n\nvar apiKey = exports.apiKey = function() {\n\n    var key = sessionStorage.getItem('api-key') ||\n        localStorage.getItem('api-key');\n\n    if (!key) {\n\n        throw new Error('API key is not set');\n    }\n\n    return key;\n};\n","// Shows informational message.\n\nexports.info = function(text) {\n\n    var messages = document.getElementById('messages');\n    var message = document.createElement('div');\n\n    message.className = 'alert alert-success message';\n    message.innerHTML = text;\n\n    messages.appendChild(message);\n\n    setTimeout(function() {\n\n        messages.removeChild(message);\n\n    }, 2000);\n};\n\n// Shows error message.\n\nexports.error = function(err) {\n\n    var button = document.createElement('button');\n\n    button.className = 'close';\n    button.innerHTML = '&times;';\n\n    var text = document.createElement('span');\n    text.innerHTML = err.toString();\n\n    var messages = document.getElementById('messages');\n    var message = document.createElement('div');\n\n    message.className = 'alert alert-danger message';\n    message.appendChild(button);\n    message.appendChild(text);\n\n    button.addEventListener('click', function() {\n\n        messages.removeChild(message);\n\n    }, false);\n\n    messages.appendChild(message);\n\n    if (err instanceof Error) {\n\n        console.error(err.stack);\n    }\n};\n","\n\n// Creates view model for the main menu.\n\nfunction menu(params) {\n\n    var model = {\n\n        active: params.active,\n\n        types: params.types\n    };\n\n    return model;\n}\n\nko.components.register('menu', {\n\n    viewModel: { createViewModel: menu },\n\n    template: \"<!-- ko if: active() -->\\n    <div class=\\\"btn-group\\\" id=\\\"menu\\\">\\n        <!-- ko foreach: types -->\\n            <a data-bind=\\\"css: { active: $parent.active() === name },\\n                attr: { href: '#entries/' + name }, text: menu_label\\\"\\n                class=\\\"btn btn-default\\\" href=\\\"#\\\"></a>\\n        <!-- /ko -->\\n        <a data-bind=\\\"css: { active: active() === 'users' }\\\" class=\\\"btn btn-default\\\" href=\\\"#users\\\">Users</a>\\n        <a class=\\\"btn btn-default\\\" href=\\\"#logout\\\">Logout</a>\\n    </div>\\n<!-- /ko -->\\n\"\n});\n","\nvar api = require('../api');\nvar message = require('../message');\nvar validate = require('../validate');\n\n// Creates view model for the login page.\n\nfunction page() {\n\n    var model = {\n\n        username: ko.observable('').trimmed(),\n\n        password: ko.observable('').trimmed(),\n\n        remember: ko.observable(false)\n    };\n\n    model.login = function(form) {\n\n        validate.clear(form);\n\n        var username = model.username();\n\n        var password = model.password();\n\n        if (username === '') {\n\n            validate.error('username', 'Username is not entered.');\n\n        } else if (!username.match(/^[^@]+@[^@]+$/)) {\n\n            validate.error('username', 'Username must be an email.');\n        }\n\n        if (password === '') {\n\n            validate.error('password', 'Password is not entered.');\n        }\n\n        if (validate.hasError(form)) {\n\n            return false;\n        }\n\n        api.login(username, password).then(function(res) {\n\n            if (model.remember()) {\n\n                localStorage.setItem('api-key', res.key);\n\n                sessionStorage.removeItem('api-key');\n\n            } else {\n\n                sessionStorage.setItem('api-key', res.key);\n\n                localStorage.removeItem('api-key');\n            }\n\n            route.go('landing');\n\n        }).catch(function(err) {\n\n            validate.formError(form, err);\n\n        });\n    };\n\n    return model;\n}\n\nko.components.register('login', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<h2>Login</h2>\\n\\n<form data-bind=\\\"submit: login\\\">\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"username\\\">Username</label>\\n        <input data-bind=\\\"textInput: username\\\"\\n            type=\\\"text\\\" name=\\\"username\\\" title=\\\"Username\\\"\\n            placeholder=\\\"Username\\\" class=\\\"form-control\\\" id=\\\"username\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"password\\\">Password</label>\\n        <input data-bind=\\\"textInput: password\\\"\\n            type=\\\"password\\\" name=\\\"password\\\" title=\\\"Password\\\"\\n            placeholder=\\\"Password\\\" class=\\\"form-control\\\" id=\\\"password\\\">\\n    </div>\\n    <div class=\\\"checkbox\\\">\\n        <label><input data-bind=\\\"checked: remember\\\" type=\\\"checkbox\\\"\\n            name=\\\"remember\\\" id=\\\"remember\\\">\\n            Remember me</label>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Login</button>\\n</form>\\n\"\n});\n","\nvar api = require('../api');\nvar message = require('../message');\nvar postsItem = require('../vm/posts_item');\nvar resolveObject = require('../resolve_object');\n\n// Component for displaying a post list.\n\nfunction page(params) {\n\n    var type = params.type;\n\n    var model = {\n\n        type: type,\n\n        all: ko.observable([]),\n\n        count: ko.observable(5),\n\n        step: ko.observable(5),\n\n        comments: ko.observable(false),\n\n        create: ko.observable(false),\n\n        title: ko.observable(),\n\n        loaded: ko.observable(false)\n    };\n\n    // Shows whether there are more\n    // pager pages.\n\n    model.hasMore = ko.pureComputed(function() {\n\n        return model.count() < model.all().length;\n    });\n\n    // Shows new pager page with posts.\n\n    model.showMore = function() {\n\n        model.count(model.count() + model.step());\n\n        setTimeout(function() {\n\n            // Scrolls to the bottom.\n\n            window.scrollTo(0, document.body.scrollHeight);\n\n        }, 50);\n    };\n\n    // Shows all posts.\n\n    model.showAll = function() {\n\n        model.count(model.all().length);\n    };\n\n    // Posts array considering the current\n    // pager state.\n\n    model.posts = ko.pureComputed(function() {\n\n        var all = model.all();\n\n        return all.slice(0, model.count());\n    });\n\n    // Finds data from API and updates\n    // the view.\n\n    var requests = {\n\n        typeInfo: api.typeInfo(type),\n\n        userInfo: api.userInfo(),\n\n        posts: api.posts(type)\n\n    };\n\n    resolveObject(requests).then(function(data) {\n\n        model.title(data.typeInfo.menu_label);\n\n        model.comments(data.typeInfo.comments);\n\n        var create = false;\n\n        // Finds if the user can create entries.\n\n        if (data.userInfo.type === 'admin') {\n\n            create = true;\n        }\n\n        if (data.typeInfo.grants.indexOf('create') >= 0) {\n\n            create = true;\n        }\n\n        model.create(create);\n\n        data.posts.sort(function(post1, post2) {\n\n            return post2.date_updated - post1.date_updated;\n\n        });\n\n        model.all(data.posts.map(function(postData) {\n\n            return postsItem.create(postData, data.typeInfo, data.userInfo);\n\n        }));\n\n        model.loaded(true);\n\n    }).catch(message.error);\n\n    return model;\n}\n\nko.components.register('posts', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<!-- ko if: loaded() -->\\n    <h2 data-bind=\\\"text: title\\\"></h2>\\n\\n    <ul data-bind=\\\"foreach: posts\\\" class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item post-item\\\">\\n            <h4 data-bind=\\\"click: expand, text: title\\\" class=\\\"list-group-item-heading\\\"></h4>\\n            <div class=\\\"list-group-item-text\\\">\\n                Update date: <span data-bind=\\\"text: formatDate(date_updated)\\\"></span>\\n                <!-- ko if: $parent.comments() -->\\n                    comments: <span data-bind=\\\"text: comments\\\"></span>\\n                <!-- /ko -->\\n                <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls\\\">\\n                    <!-- ko if: editable -->\\n                        <a data-bind=\\\"attr: { href: editLink }\\\" class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                            <span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit\\n                        </a>\\n                    <!-- /ko -->\\n                    <!-- ko if: $parent.comments() -->\\n                        <a data-bind=\\\"attr: { href: commentsLink }, css: { disabled: comments === 0 }\\\"\\n                            class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                            <span class=\\\"glyphicon glyphicon-comment\\\"></span> Comments\\n                        </a>\\n                    <!-- /ko -->\\n                    <!-- ko if: removable -->\\n                        <a data-bind=\\\"click: remove\\\"\\n                            class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                            <span class=\\\"glyphicon glyphicon-edit\\\"></span> Remove\\n                        </a>\\n                    <!-- /ko -->\\n                </div>\\n            </div>\\n        </li>\\n    </ul>\\n\\n    <!-- ko if: posts().length === 0 -->\\n        <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n            This entry type has no entries with access.\\n        </div>\\n    <!-- /ko -->\\n\\n    <div class=\\\"bc-controls\\\">\\n        <a data-bind=\\\"click: showMore, css: { disabled: !hasMore() }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n            <span class=\\\"glyphicon glyphicon-list-alt\\\"></span> Show more\\n        </a>\\n        <a data-bind=\\\"click: showAll, css: { disabled: !hasMore() }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n            <span class=\\\"glyphicon glyphicon-list-alt\\\"></span> Show all\\n        </a>\\n        <a data-bind=\\\"attr: { href: '#new/' + type }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n            <span class=\\\"glyphicon glyphicon-plus\\\"></span> Add\\n        </a>\\n    </div>\\n<!-- /ko -->\"\n});\n","\nvar api = require('../api');\nvar post = require('../vm/post');\nvar message = require('../message');\nvar resolveObject = require('../resolve_object');\n\n// Component for the post edit page.\n\nfunction page(params) {\n\n    var model = {\n\n        post: ko.observable()\n    };\n\n    var tasks;\n\n    if (params.id) {\n\n        // Edit existing post.\n\n        api.userInfo().then(function(userInfo) {\n\n            var requests = {\n\n                post: api.post(params.id),\n\n                types: api.types()\n\n            };\n\n            if (userInfo.type === 'admin') {\n\n                requests.users = api.users();\n\n            } else {\n\n                // User that is not an admin\n                // cannot create posts owned by others.\n\n                requests.users = [{\n\n                    $id: userInfo.$id,\n\n                    fullname: userInfo.fullname\n\n                }];\n            }\n\n            return resolveObject(requests).then(function(data) {\n\n                model.post(post.create(userInfo, params.type, data.types, data.users, data.post));\n\n                // Autoset initial textarea height.\n\n                var editor = document.getElementById('post-content');\n\n                editor.style.height = (editor.scrollHeight + 10) + 'px';\n\n            });\n\n        }).catch(message.error);\n\n    } else {\n\n        // Create a new post.\n\n        api.userInfo().then(function(userInfo) {\n\n            var requests = {\n\n                types: api.types()\n\n            };\n\n            if (userInfo.type === 'admin') {\n\n                requests.users = api.users();\n\n            } else {\n\n                // User that is not an admin\n                // cannot create posts owned by others.\n\n                requests.users = [{\n\n                    $id: userInfo.$id,\n\n                    fullname: userInfo.fullname\n\n                }];\n            }\n\n            return resolveObject(requests).then(function(data) {\n\n                model.post(post.create(userInfo, params.type, data.types, data.users));\n\n                var title = document.querySelector('#post-title');\n\n                title.focus();\n\n                if (typeof title.setSelectionRange === 'function') {\n\n                    title.setSelectionRange(0, title.value.length);\n                }\n            });\n\n        }).catch(message.error);\n    }\n\n    return model;\n}\n\nko.components.register('post', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<!-- ko with: post -->\\n    <h2 data-bind=\\\"text: title\\\"></h2>\\n    <form data-bind=\\\"submit: submit\\\" autocomplete=\\\"off\\\" id=\\\"post\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-title\\\">Title</label>\\n            <input data-bind=\\\"textInput: title\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"post-title\\\"\\n                placeholder=\\\"Title\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-slug\\\">Slug</label>\\n            <input data-bind=\\\"textInput: slug\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"post-slug\\\"\\n                placeholder=\\\"Slug\\\">\\n            <p class=\\\"help-block\\\">Slug should not be modified after publishing as it will break links.</p>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-description\\\">Description</label>\\n            <textarea\\n                data-bind=\\\"textInput: description\\\"\\n                class=\\\"form-control\\\" rows=\\\"3\\\" id=\\\"post-description\\\" placeholder=\\\"Description\\\"></textarea>\\n            <p class=\\\"help-block\\\">Description is used by search engines to show the page snippet.</p>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-content\\\">Content</label>\\n            <textarea\\n                data-bind=\\\"textInput: content\\\"\\n                class=\\\"form-control content\\\" rows=\\\"20\\\" id=\\\"post-content\\\"\\n                placeholder=\\\"Content\\\"></textarea>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-type\\\">Type</label>\\n            <select data-bind=\\\"value: type, options: types,\\n                optionsText: 'label', optionsValue: 'name',\\n                attr: { disabled: !can_change_type }\\\"\\n                class=\\\"form-control\\\" id=\\\"post-type\\\"></select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-content-type\\\">Content type</label>\\n            <select data-bind=\\\"value: content_type\\\"\\n                class=\\\"form-control\\\" id=\\\"post-content-type\\\">\\n                <option value=\\\"markdown\\\">Markdown</option>\\n                <option value=\\\"raw\\\">Raw</option>\\n            </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-author\\\">Author</label>\\n            <select data-bind=\\\"value: author, options: authors,\\n                optionsText: 'fullname', optionsValue: '$id',\\n                attr: { disabled: !can_change_author }\\\"\\n                class=\\\"form-control\\\" id=\\\"post-author\\\"></select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-tags\\\">Tags</label>\\n            <input data-bind=\\\"textInput: tags\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"post-tags\\\"\\n                placeholder=\\\"Tags\\\">\\n            <p class=\\\"help-block\\\">Separate multiple tags with commas.</p>\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n            <label><input data-bind=\\\"checked: published,\\n                attr: { disabled: !can_publish }\\\"\\n                type=\\\"checkbox\\\" id=\\\"post-published\\\"> Published</label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-date\\\">Publish date</label>\\n            <input data-bind=\\\"textInput: date\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"post-date\\\"\\n                placeholder=\\\"YYYY-MM-DD\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-update\\\">Update date</label>\\n            <input data-bind=\\\"textInput: update\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"post-update\\\"\\n                placeholder=\\\"YYYY-MM-DD\\\">\\n        </div>\\n            <div class=\\\"checkbox\\\">\\n                <label><input data-bind=\\\"checked: commenting\\\"\\n                    type=\\\"checkbox\\\"> Commenting</label>\\n            </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-language\\\">Language</label>\\n            <select data-bind=\\\"value: language, options: languages,\\n                optionsText: 'name', optionsValue: 'code'\\\"\\n                class=\\\"form-control\\\" id=\\\"post-language\\\"></select>\\n        </div>\\n        <!-- ko if: can_manage_files -->\\n            <!-- ko component: { name: 'files',\\n                params: { id: $id, slug: slug, slug_changed: slug_changed } } --><!-- /ko -->\\n        <!-- /ko -->\\n        <!-- ko if: !can_manage_files -->\\n            <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                To upload files you need file management permissions.\\n            </div>\\n        <!-- /ko -->\\n        <button data-bind=\\\"click: save\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save/leave\\n        </button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save/continue\\n        </button>\\n        <a data-bind=\\\"attr: { href: '#entries/' + type() }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n            <span class=\\\"glyphicon glyphicon-arrow-left\\\"></span> Entries\\n        </a>\\n    </form>\\n<!-- /ko -->\\n\"\n});\n","\nvar api = require('../api');\nvar message = require('../message');\nvar users_item = require('../vm/users_item');\n\n// Component for displaying the users list.\n\nfunction page() {\n\n    var model = {\n\n        users: ko.observableArray([]),\n\n        permission: ko.observable(false),\n\n        loaded: ko.observable(false)\n    };\n\n    api.userInfo().then(function(info) {\n\n        if (info.type !== 'admin') {\n\n            model.loaded(true);\n\n        } else {\n\n            return api.users().then(function(users) {\n\n                model.users(users.map(function(data) {\n\n                    var user = users_item.create(data);\n\n                    user.editable = info.type === 'admin' || user.$id === info.$id;\n\n                    return user;\n\n                }));\n\n                model.permission(true);\n\n                model.loaded(true);\n            });\n        }\n\n    }).catch(message.error);\n\n    return model;\n}\n\nko.components.register('users', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<!-- ko if: loaded() -->\\n    <h2>Users</h2>\\n    <!-- ko if: !permission() -->\\n        <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n            You do not have permissions to manage users.\\n        </div>\\n    <!-- /ko -->\\n    <!-- ko if: permission() -->\\n        <ul data-bind=\\\"foreach: users\\\" class=\\\"list-group\\\">\\n            <li class=\\\"list-group-item post-item\\\">\\n                <h4 data-bind=\\\"click: expand, text: fullname\\\" class=\\\"list-group-item-heading\\\"></h4>\\n                <div class=\\\"list-group-item-text\\\">\\n                    Type: <span data-bind=\\\"text: type\\\"></span>,\\n                    username: <span data-bind=\\\"text: username\\\"></span>\\n                    <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls\\\">\\n                        <a data-bind=\\\"attr: { href: '#user/' + $id }, css: { disabled: !editable }\\\"\\n                            class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                            <span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit\\n                        </a>\\n                        <a data-bind=\\\"click: remove, css: { disabled: !editable }\\\"\\n                            class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                            <span class=\\\"glyphicon glyphicon-remove\\\"></span> Remove\\n                        </a>\\n                    </div>\\n                </div>\\n            </li>\\n        </ul>\\n        <a class=\\\"btn btn-default\\\" href=\\\"#user/new\\\">\\n            <span class=\\\"glyphicon glyphicon-plus\\\"></span> Add\\n        </a>\\n    <!-- /ko -->\\n<!-- /ko -->\\n\"\n});\n","\nvar api = require('../api');\nvar message = require('../message');\nvar files_item = require('../vm/files_item');\n\n// Component for displaying file listing in entry views.\n\nfunction page(params) {\n\n    var directory = params.directory;\n\n    var model = {\n\n        entry_id: params.id,\n\n        entry_slug: params.slug,\n\n        files: ko.observableArray([]),\n\n        progress: ko.observable(0),\n\n        slug_changed: params.slug_changed\n    };\n\n    // Submits the upload form and\n    // performs the file upload process.\n\n    model.upload = function() {\n\n        var file = document.getElementById('entry-file').files[0];\n\n        if (!file) {\n\n            return;\n        }\n\n        model.file = file;\n\n        var xhr = new XMLHttpRequest();\n\n        xhr.upload.addEventListener('progress', model.progress, false);\n\n        xhr.addEventListener('load', model.complete, false);\n        xhr.addEventListener('error', model.failed, false);\n        xhr.addEventListener('abort', model.aborted, false);\n\n        xhr.open('POST', '/api/upload/' + encodeURIComponent(model.entry_id()));\n\n        xhr.setRequestHeader('X-Key', api.apiKey());\n        xhr.setRequestHeader('X-File-Name', file.name);\n        xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n\n        xhr.send(file);\n    };\n\n    // Reports the upload progress.\n    // FIXME only works on Firefox?\n\n    model.progress = function(e) {\n\n        if (e.lengthComputable) {\n\n            model.progress(Math.round(e.loaded * 100 / e.total));\n        }\n    };\n\n    // Executed then the upload process\n    // is complete.\n\n    model.complete = function(e) {\n\n        var res = JSON.parse(e.target.responseText);\n\n        if (res.status === 'success') {\n\n            message.info('File \"' + model.file.name +\n                '\" has been uploaded.');\n\n            model.files.push(files_item.create(model.entry_slug, { name: model.file.name }));\n\n            // This resets the file input.\n\n            var wrap = document.getElementById('entry-file-wrap');\n\n            wrap.innerHTML = '';\n            wrap.innerHTML = '<input type=\"file\" id=\"entry-file\" class=\"form-control\" placeholder=\"Your file\">';\n\n        } else {\n\n            // FIXME show error in form.\n\n            message.error(res.message);\n        }\n    };\n\n    model.upload.failed = function() {\n\n        // FIXME needs error checking.\n    };\n\n    // Executed when the upload process\n    // was aborted.\n\n    model.aborted = function() {\n\n        // FIXME incomplete\n    };\n\n    // Removes the file.\n    // Asks confirmation.\n\n    model.remove = function(file) {\n\n        if (confirm('Remove the file \"' + file.name + '\"?')) {\n\n            api.removeFile(model.entry_id(), file.name).then(function() {\n\n                message.info('File \"' + file.name + '\" has been removed.');\n\n                model.files.remove(file);\n\n            }).catch(message.error);\n        }\n    };\n\n    if (model.entry_id()) {\n\n        api.files(model.entry_id()).then(function(files) {\n\n            files.sort(function(left, right) {\n\n                return left.name === right.name ? 0 : (left.name < right.name ? -1 : 1);\n            });\n\n            model.files(files.map(function(file) {\n\n                return files_item.create(model.entry_slug, file);\n\n            }));\n\n        }).catch(message.error);\n    }\n\n    return model;\n}\n\nko.components.register('files', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<h3>Entry files</h3>\\n<!-- ko if: !entry_id() -->\\n    <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n        To upload files you need to save the entry first.\\n    </div>\\n<!-- /ko -->\\n<!-- ko if: entry_id() -->\\n    <!-- ko if: slug_changed() -->\\n        <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n            You have changed the entry slug. File management is\\n            re-enabled after saving the entry.\\n        </div>\\n    <!-- /ko -->\\n    <!-- ko if: !slug_changed() -->\\n        <!-- ko if: files().length === 0 -->\\n            <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                This entry has no files.\\n            </div>\\n        <!-- /ko -->\\n        <div data-bind=\\\"foreach: files\\\" class=\\\"list-group\\\">\\n            <li class=\\\"list-group-item post-item\\\">\\n                <div data-bind=\\\"click: expand\\\" class=\\\"list-group-item-heading\\\">\\n                    <span class=\\\"glyphicon glyphicon-file\\\"></span> <!-- ko text: name --><!-- /ko -->\\n                </div>\\n                <!-- ko if: expanded() -->\\n                    URL: <!-- ko text: url --><!-- /ko -->\\n                    <div class=\\\"post-controls\\\">\\n                        <a data-bind=\\\"click: $parent.remove\\\"\\n                            class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                            <span class=\\\"glyphicon glyphicon-edit\\\"></span> Remove</a>\\n                        <a data-bind=\\\"attr: { href: url }\\\" target=\\\"_blank\\\"\\n                            class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\"> View (in new tab)</a>\\n                    </div>\\n                <!-- /ko -->\\n            </li>\\n        </div>\\n        <div class=\\\"row bc-controls\\\">\\n            <div class=\\\"col-sm-6\\\">\\n                <div id=\\\"entry-file-wrap\\\">\\n                    <input type=\\\"file\\\" id=\\\"entry-file\\\" class=\\\"form-control\\\" placeholder=\\\"Your file\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n                <a data-bind=\\\"click: upload\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n                    <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\n                </a>\\n            </div>\\n        </div>\\n    <!-- /ko -->\\n<!-- /ko -->\\n\"\n});\n","\nvar api = require('../api');\nvar user = require('../vm/user');\nvar message = require('../message');\n\n// Component for user edit page.\n\nfunction page(params) {\n\n    var model = {\n\n        user: ko.observable()\n    };\n\n    var tasks;\n\n    if (params.id) {\n\n        // Edit existing user.\n\n        tasks = [ api.roles(), api.user(params.id) ];\n\n        Promise.all(tasks).then(function(data) {\n\n            var roles = data[0], userData = data[1];\n\n            model.user(user.create(roles, userData));\n\n        }).catch(message.error);\n\n    } else {\n\n        // Create a new user.\n\n        tasks = [ api.roles() ];\n\n        Promise.all(tasks).then(function(data) {\n\n            var roles = data[0];\n\n            model.user(user.create(roles));\n\n            var fullname = document.querySelector('#user-fullname');\n\n            fullname.focus();\n\n            if (typeof fullname.setSelectionRange === 'function') {\n\n                fullname.setSelectionRange(0, fullname.value.length);\n            }\n\n        }).catch(message.error);\n    }\n\n    return model;\n}\n\nko.components.register('user', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<!-- ko with: user -->\\n    <h2 data-bind=\\\"text: fullname\\\"></h2>\\n\\n    <form data-bind=\\\"submit: save\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"user-fullname\\\">Full name</label>\\n            <input data-bind=\\\"value: fullname\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-fullname\\\"\\n                placeholder=\\\"Full name\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"user-username\\\">Username</label>\\n            <input data-bind=\\\"value: username\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-username\\\"\\n                placeholder=\\\"Username\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"user-type\\\">Type</label>\\n            <select data-bind=\\\"value: type, options: roles,\\n                optionsText: 'label', optionsValue: 'name'\\\"\\n                class=\\\"form-control\\\" id=\\\"user-type\\\"></select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"user-link\\\">Link</label>\\n            <input data-bind=\\\"value: link\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-link\\\"\\n                placeholder=\\\"Link\\\">\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n            <label><input data-bind=\\\"checked: password_edit, disable: creating\\\" type=\\\"checkbox\\\">\\n                Edit password</label>\\n        </div>\\n        <div data-bind=\\\"visible: password_edit\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-password\\\">New password</label>\\n            <input data-bind=\\\"value: password\\\"\\n                type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"user-password\\\"\\n                placeholder=\\\"Password\\\">\\n            <div class=\\\"checkbox\\\">\\n                <label><input data-bind=\\\"checked: password_text\\\" type=\\\"checkbox\\\">\\n                    Show text</label>\\n            </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save\\n        </button>\\n        <a class=\\\"btn btn-default\\\" href=\\\"#users\\\">\\n            <span class=\\\"glyphicon glyphicon-arrow-left\\\"></span> Cancel\\n        </a>\\n    </form>\\n<!-- /ko -->\\n\"\n});\n","\nvar api = require('../api');\nvar message = require('../message');\nvar resolveObject = require('../resolve_object');\nvar comments_item = require('../vm/comments_item');\n\n// Creates view model for the comments list.\n\nfunction page(params) {\n\n    var model = {\n\n        title: ko.observable(),\n\n        comments: ko.observable([])\n    };\n\n    var requests = {\n\n        entryInfo: api.entryInfo(params.id),\n\n        userInfo: api.userInfo(params.id),\n\n        typeInfo: api.typeInfo(params.type),\n\n        comments: api.comments(params.id)\n    };\n\n    resolveObject(requests).then(function(data) {\n\n        model.title(data.entryInfo.title);\n\n        model.comments(data.comments.map(function(comments) {\n\n            return comments_item.create(comments, data.userInfo, data.entryInfo, data.typeInfo);\n\n        }));\n\n    }).catch(message.error);\n\n    return model;\n}\n\nko.components.register('comments', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<h2 data-bind=\\\"text: title\\\"></h2>\\n<h3>Comments</h3>\\n<ul data-bind=\\\"foreach: comments\\\" class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item post-item\\\">\\n        <h4 data-bind=\\\"text: author, click: expand\\\" class=\\\"list-group-item-heading\\\"></h4>\\n        <div class=\\\"list-group-item-text\\\">\\n            Date: <span data-bind=\\\"text: formatDate(date)\\\"></span>\\n            <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls\\\">\\n                <div class=\\\"panel panel-default\\\">\\n                    <div data-bind=\\\"text: content\\\" class=\\\"panel-body\\\"></div>\\n                </div>\\n                <!-- ko if: removable -->\\n                    <a data-bind=\\\"click: remove\\\" class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-remove\\\"></span> Remove\\n                    </a>\\n                <!-- /ko -->\\n            </div>\\n        </div>\\n    </li>\\n</ul>\\n<!-- ko if: comments().length === 0 -->\\n    <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n        This entry has no comments.\\n    </div>\\n<!-- /ko -->\\n\"\n});\n","var spin = require('./spin');\n\n// From https://gist.github.com/matthewp/3099268\n\nvar count = 0;\n\nmodule.exports = function(options) {\n\n    return new Promise(function(resolve, reject) {\n\n        var req = new XMLHttpRequest();\n\n        req.open(options.method || 'GET', options.url, true);\n\n        Object.keys(options.headers || {}).forEach(function (key) {\n\n            req.setRequestHeader(key, options.headers[key]);\n        });\n\n        req.onreadystatechange = function(e) {\n\n            if (req.readyState !== 4) {\n\n                return;\n            }\n\n            count -= 1;\n\n            if (count === 0) {\n\n                spin.hide();\n            }\n\n            if (req.status !== 200) {\n\n                reject(new Error('Server responded with a status of ' + req.status));\n\n            } else {\n\n                resolve(req.responseText);\n            }\n        };\n\n        if (count === 0) {\n\n            spin.show();\n        }\n\n        count += 1;\n\n        req.send(options.data);\n    });\n};\n","// Cleans the form from error messages.\n\nexports.clear = function(form) {\n\n    var errors = form.querySelectorAll('.error-message');\n    var error, i;\n\n    for (i = 0; i < errors.length; i++) {\n\n        error = errors.item(i);\n\n        error.parentNode.classList.remove('has-error');\n        error.parentNode.removeChild(error);\n    }\n\n    errors = form.parentNode.querySelectorAll('.alert-danger');\n\n    for (i = 0; i < errors.length; i++) {\n\n        error = errors.item(i);\n        error.parentNode.removeChild(error);\n    }\n};\n\n// Checks whether the form\n// has a validation error.\n\nexports.hasError = function(form) {\n\n    return form.querySelectorAll('.error-message').length > 0;\n};\n\n// Adds error to the container of the\n// given input.\n\nexports.error = function(id, message) {\n\n    var elem = document.getElementById(id);\n\n    var error = document.createElement('div');\n\n    error.className = 'error-message';\n    error.innerHTML = message;\n\n    elem.parentNode.appendChild(error);\n    elem.parentNode.classList.add('has-error');\n};\n\n// Sets error to the whole form.\n\nexports.formError = function(form, message) {\n\n    var error = document.createElement('div');\n\n    error.className = 'alert alert-danger';\n    error.innerHTML = message;\n\n    form.parentNode.insertBefore(error, form);\n};\n","var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// Creates posts view model for\n// the users list view.\n\nexports.create = function(data, typeInfo, userInfo) {\n\n    var post = {};\n\n    // Make it expandable.\n\n    expandable.mixin(post);\n\n    // Copies data attributes.\n\n    assign(post, data);\n\n    post.removable = false;\n\n    // Find if the entry can be removed.\n\n    if (userInfo.type === 'admin') {\n\n        post.removable = true;\n\n    }\n\n    if (typeInfo.grants.indexOf('remove_any') >= 0) {\n\n        post.removable = true;\n\n    }\n\n    if (typeInfo.grants.indexOf('remove_own') >= 0) {\n\n        if (userInfo.$id === post.author) {\n\n            post.removable = true;\n        }\n    }\n\n    post.editable = false;\n\n    if (userInfo.type === 'admin') {\n\n        post.editable = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_any') >= 0) {\n\n        post.editable = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_own') >= 0) {\n\n        if (userInfo.$id === post.author) {\n\n            post.editable = true;\n        }\n    }\n\n    post.editLink = '#entry/' + typeInfo.name + '/' + post.$id;\n\n    post.commentsLink = '#comments/' + typeInfo.name + '/' + post.$id;\n\n    // Removes the post.\n    // Asks confirmation.\n\n    post.remove = function() {\n\n        if (confirm('Remove the post \"' + post.title + '\"?')) {\n\n            api.removePost(post.$id).then(function() {\n\n                message.info('The post \"' + post.title + '\" has been removed.');\n\n                route.refresh();\n\n            }).catch(message.error);\n        }\n    };\n\n    return post;\n};\n","// Resolves object properties\n// as promises.\n\nmodule.exports = function(obj) {\n\n    var tasks = [], map = [];\n\n    Object.keys(obj).forEach(function(key) {\n\n        tasks.push(obj[key]);\n\n        map.push(key);\n    });\n\n    return Promise.all(tasks).then(function(data) {\n\n        var resolved = {};\n\n        data.forEach(function(value, i) {\n\n            resolved[map[i]] = value;\n        });\n\n        return resolved;\n    });\n};\n","var api = require('../api');\nvar message = require('../message');\nvar validate = require('../validate');\nvar languages = require('../languages');\n\n// Creates post view model for already\n// existing post or a new post. For new\n// post, data must be unset. The authors\n// argument must contain the list of all\n// users.\n\nexports.create = function(userInfo, type, types, authors, data) {\n\n    var post = {\n\n        $id: ko.observable(),\n\n        // List of authors. Used by the\n        // author list dropdown.\n\n        authors: authors,\n\n        // The post title. When this is\n        // the new post then initial slug\n        // is generated by it.\n\n        title: ko.observable('Untitled').trimmed(),\n\n        // The post slug. Can contain\n        // \"safe\" characters only.\n\n        slug: ko.observable('untitled').trimmed(),\n\n        // The post description. Can\n        // be left blank.\n\n        description: ko.observable('').trimmed(),\n\n        // The post content. Can be either\n        // Markdown or raw HTML.\n\n        content: ko.observable('').trimmed(),\n\n        types: types,\n\n        // The post type. Currently\n        // available types are post,\n        // page and block.\n\n        type: ko.observable(type),\n\n        // Type of the post content.\n        // Will be processed by the\n        // Markdown formatter when set\n        // to 'markdown''\n\n        content_type: ko.observable('markdown'),\n\n        // Flag to set whether the post\n        // is published or not.\n\n        published: ko.observable(false),\n\n        // Flag to set whether commenting\n        // is allowed or not.\n\n        commenting: ko.observable(true),\n\n        // List of tags. Tags are separated\n        // by commas.\n\n        tags: ko.observable('').trimmed(),\n\n        // The count of comments.\n        // Currently not used.\n\n        comments: ko.observable(0),\n\n\n        // Selected user. Only admins\n        // can select author other than\n        // themself.\n\n        author: ko.observable(),\n\n        // Publish date as a string in\n        // the format YYYY-MM-DD. Might be\n        // unset when published flag is not set.\n\n        date: ko.observable('').trimmed(),\n\n        // Update date as a string in\n        // the format YYYY-MM-DD.\n\n        update: ko.observable('').trimmed(),\n\n        // Validates the post data.\n        // Saves or updates it using the API.\n\n        submit: function() {\n\n            submitPost(post, true);\n        },\n\n        // Similar to submit but leaves\n        // the form.\n\n        save: function() {\n\n            submitPost(post, false);\n        },\n\n        // The post language code. See\n        // languages.js for the list of codes.\n\n        language: ko.observable(bcLanguage),\n\n        // List of available languages.\n\n        languages: languages,\n\n        // Indicator for files component.\n\n        slug_changed: ko.observable(false),\n\n        // Only admin can change the type.\n\n        can_change_type: userInfo.type === 'admin',\n\n        // Only admin can change the author.\n\n        can_change_author: userInfo.type === 'admin',\n\n        // Returns the plain data object\n        // to send to the backend.\n\n        toJS: function() {\n\n            var tags = post.tags().trim();\n\n            var date = post.date();\n\n            // date_published will be undefined when\n            // no date has been entered.\n\n            var date_published;\n\n            if (date !== '') {\n\n                date_published = isoDateToUnix(date);\n            }\n\n            var date_updated = isoDateToUnix(post.update());\n\n            return {\n\n                author: post.author(),\n                title: post.title(),\n                slug: post.slug(),\n                description: post.description(),\n                content: post.content(),\n                type: post.type(),\n                date_published: date_published,\n                date_updated: date_updated,\n                commenting: post.commenting(),\n                published: post.published(),\n                content_type: post.content_type(),\n                tags: tags === '' ? [] : tags.split(/\\, */),\n                language: post.language()\n            };\n        }\n    };\n\n    var typeInfo;\n\n    types.forEach(function(info) {\n\n        if (info.name === type) {\n\n            typeInfo = info;\n        }\n    });\n\n    if (!typeInfo) {\n\n        throw new Error('Invalid type ' + type);\n    }\n\n    // Sets the view model values by the\n    // actual data object.\n\n    if (data) {\n\n        // When the publish date is set then\n        // set the date field to formatted string.\n\n        if (typeof data.date_published !== 'undefined') {\n\n            var d = new Date(data.date_published * 1000);\n\n            post.date(d.toISOString().substring(0, 10));\n        }\n\n        post.$id(data.$id);\n        post.author(data.author);\n        post.title(data.title);\n        post.slug(data.slug);\n        post.description(data.description || '');\n        post.content(data.content);\n        post.type(data.type);\n        post.content_type(data.content_type);\n        post.published(data.published);\n        post.commenting(data.commenting);\n        post.tags(data.tags.join(', '));\n        post.comments(data.comments);\n        post.language(data.language);\n\n    } else {\n\n        // Only when for new post.\n        // Add automatic slug generation.\n\n        post.title.subscribe(function(value) {\n\n            post.slug(getSlug(value));\n        });\n\n        // Select user as post author.\n\n        post.author(userInfo.$id);\n\n        // Default publish date.\n\n        post.date(new Date().toISOString().substring(0, 10));\n    }\n\n    // Set publishing permission flag.\n\n    post.can_publish = false;\n\n    if (userInfo.type === 'admin') {\n\n        post.can_publish = true;\n    }\n\n    if (typeInfo.grants.indexOf('publish_any') >= 0) {\n\n        post.can_publish = true;\n    }\n\n    if (typeInfo.grants.indexOf('publish_own') >= 0) {\n\n        if (post.author() === userInfo.$id) {\n\n            post.can_publish = true;\n        }\n    }\n\n    // Sets file management flag.\n\n    post.can_manage_files = false;\n\n    if (userInfo.type === 'admin') {\n\n        post.can_manage_files = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_any') >= 0) {\n\n        if (typeInfo.grants.indexOf('files') >= 0) {\n\n            post.can_manage_files = true;\n        }\n    }\n\n    if (typeInfo.grants.indexOf('update_own') >= 0) {\n\n        if (post.author() === userInfo.$id) {\n\n            if (typeInfo.grants.indexOf('files') >= 0) {\n\n                post.can_manage_files = true;\n            }\n        }\n    }\n\n    // Default update date is the current date.\n\n    post.update(new Date().toISOString().substring(0, 10));\n\n    post.published.subscribe(function(value) {\n\n        // Set publish date when post is published.\n        // Applies only when no publish date is set.\n\n        if (value && post.date() === '') {\n\n            post.date(new Date().toISOString().substring(0, 10));\n        }\n    });\n\n    // Indicated that slug has been changed\n    // and file management does not work before\n    // saving.\n\n    post.slug.subscribe(function(value) {\n\n        post.slug_changed(true);\n    });\n\n    return post;\n};\n\n// Converts ISO8601 date part into\n// an Unix timestamp.\n\nfunction isoDateToUnix(string) {\n\n    var match = string.match(/^(\\d{4})\\-(\\d{2})\\-(\\d{2})$/);\n\n    if (!match) {\n\n        throw new Error('Date does not match pattern: ' + string);\n    }\n\n    var date = new Date();\n\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCFullYear(parseInt(match[1], 10), parseInt(match[2], 10) - 1, parseInt(match[3], 10));\n\n    return Math.floor(date.getTime() / 1000);\n}\n\n// Validates the given post.\n// Adds errors using the validate module.\n\nfunction validatePost(post) {\n\n    if (post.title() === '') {\n\n        validate.error('post-title', 'Title is not entered.');\n    }\n\n    var slug = post.slug();\n\n    if (slug === '') {\n\n        validate.error('post-slug', 'Slug is not entered.');\n\n    } else {\n\n        if (!slug.match(/^[a-z0-9\\-_]+$/)) {\n\n            validate.error('post-slug', 'Use lowercase letters, numbers, hyphen and underscore.');\n        }\n    }\n\n    if (post.content() === '') {\n\n        validate.error('post-content', 'Content is not entered.');\n    }\n\n    var date = post.date();\n\n    if (date === '') {\n\n        if (post.published()) {\n\n            validate.error('post-date', 'Publish date is not entered.');\n        }\n\n    } else if (!date.match(/^\\d{4}\\-\\d{2}\\-\\d{2}$/)) {\n\n        validate.error('post-date', 'Date must be in the YYYY-MM-DD format.');\n    }\n\n    var update = post.update();\n\n    if (update === '') {\n\n        validate.error('post-update', 'Update date is not entered.');\n\n    } else if (!update.match(/^\\d{4}\\-\\d{2}\\-\\d{2}$/)) {\n\n        validate.error('post-update', 'Update date must be in the YYYY-MM-DD format.');\n    }\n}\n\n// Handles save and\n// save-with-continue actions.\n\nfunction submitPost(post, edit) {\n\n    var form = document.getElementById('post');\n\n    validate.clear(form);\n\n    validatePost(post);\n\n    if (validate.hasError(form)) {\n\n        return false;\n    }\n\n    // When post has '$id' property\n    // then it's an existing post.\n\n    if (post.$id()) {\n\n        updatePost(form, post, edit);\n\n    } else {\n\n        savePost(form, post, edit);\n    }\n}\n\n// Updates the already existing\n// post. Assumes that the post\n// is validated.\n\nfunction updatePost(form, post, edit) {\n\n    api.updatePost(post.$id(), post.toJS()).then(function() {\n\n        message.info('The entry \"' + post.title() + '\" has been updated.');\n\n        if (edit) {\n\n            post.slug_changed(false);\n\n        } else {\n\n            route.go('entries/' + post.type());\n        }\n\n    }).catch(function(err) {\n\n        validate.formError(form, err);\n\n        window.scroll(0, 0);\n\n    });\n}\n\n// Saves the new post.\n\nfunction savePost(form, post, edit) {\n\n    api.savePost(post.toJS()).then(function(res) {\n\n        message.info('The entry \"' + post.title() + '\" has been saved.');\n\n        // Redirect to post page when we\n        // want to keep editing the post.\n        // Otherwise go back to listing page.\n\n        if (edit) {\n\n            route.go('entry/' + post.type() + '/' + res);\n\n        } else {\n\n            route.go('entries/' + post.type());\n        }\n\n    }).catch(function(err) {\n\n        validate.formError(form, err);\n\n        window.scroll(0, 0);\n\n    });\n}\n","var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// Creates user view model for\n// the users list view.\n\nexports.create = function(data) {\n\n    var user = {\n\n        editable: false\n    };\n\n    // Make it expandable.\n\n    expandable.mixin(user);\n\n    // Copies data attributes.\n\n    assign(user, data);\n\n    // Removes the user.\n    // Asks confirmation.\n\n    user.remove = function() {\n\n        if (confirm('Remove the user?')) {\n\n            api.removeUser(user.$id).then(function() {\n\n                message.info('User \"' + user.username + '\" has been removed.');\n\n                route.refresh();\n\n            }).catch(message.error);\n        }\n    };\n\n    return user;\n};\n","var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('../vm/expandable');\n\n// Creates file view model for\n// the files list view.\n\nexports.create = function(slug, data) {\n\n    var file = {};\n\n    // Copies data attributes.\n\n    assign(file, data);\n\n    expandable.mixin(file);\n\n    file.url = ko.pureComputed(function() {\n\n        return '/' + slug() + '/' + file.name;\n    });\n\n    return file;\n};\n","var message = require('../message');\nvar api = require('../api');\nvar validate = require('../validate');\n\nexports.create = function(roles, data) {\n\n    var user = {\n\n        username: ko.observable('').trimmed(),\n        fullname: ko.observable('').trimmed(),\n        type: ko.observable('author'),\n        link: ko.observable('').trimmed(),\n        password: ko.observable('').trimmed(),\n        password_edit: ko.observable(true),\n        password_text: ko.observable(false),\n        error: ko.observable(''),\n        creating: true,\n        roles: roles,\n\n        save: function(form) {\n\n            validate.clear(form);\n\n            if (user.password_edit()) {\n\n                var password = user.password();\n\n                if (password === '') {\n\n                    validate.error('user-password', 'Password is not set.');\n\n                } else if (password.length < 6) {\n\n                    validate.error('user-password', 'Password length must be at least 6.');\n                }\n            }\n\n            var username = user.username();\n\n            if (username === '') {\n\n                validate.error('user-username', 'Username is not set.');\n\n            } else {\n\n                if (!username.match(/^[^@]+@[^@]+$/)) {\n\n                    validate.error('user-username', 'Username must be an email address.');\n                }\n            }\n\n            var fullname = user.fullname();\n\n            if (fullname === '') {\n\n                validate.error('user-fullname', 'Full name is not set.');\n            }\n\n            var link = user.link();\n\n            if (link !== '') {\n\n                if (!link.match(/https?:\\/\\//)) {\n\n                    validate.error('user-link', 'Link must start with http:// or https:// prefix.');\n                }\n            }\n\n            if (validate.hasError(form)) {\n\n                return false;\n            }\n\n            if (user.$id) {\n\n                api.updateUser(user.$id, user.toJS()).then(function() {\n\n                    message.info('User \"' + user.username() + '\" has been updated.');\n\n                    route.go('users');\n\n                }).catch(function(err) {\n\n                    validate.formError(form, err);\n\n                });\n\n            } else {\n\n                api.saveUser(user.toJS()).then(function() {\n\n                    message.info('User \"' + user.username() + '\" has been added.');\n\n                    route.go('users');\n\n                }).catch(function(err) {\n\n                    validate.formError(form, err);\n\n                });\n            }\n\n            return false;\n        },\n\n        toJS: function() {\n\n            var js = {\n\n                username: user.username(),\n                fullname: user.fullname(),\n                type: user.type(),\n                link: user.link()\n            };\n\n            if (user.password_edit()) {\n\n                js.password = user.password();\n            }\n\n            return js;\n        }\n    };\n\n    user.password_text.subscribe(function(value) {\n\n        if (value) {\n\n            document.getElementById('user-password').type = 'text';\n\n        } else {\n\n            document.getElementById('user-password').type = 'password';\n        }\n    });\n\n    if (data) {\n\n        user.$id = data.$id;\n        user.creating = false;\n        user.username(data.username);\n        user.fullname(data.fullname);\n        user.type(data.type);\n        user.link(data.link);\n        user.password_edit(false);\n\n    } else {\n\n        user.fullname('Unnamed');\n    }\n\n    return user;\n};\n","var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// View Model for a comment.\n\nexports.create = function(data, userInfo, entryInfo, typeInfo) {\n\n    var comment = {};\n\n    // Make it expandable.\n\n    expandable.mixin(comment);\n\n    // Copies data attributes.\n\n    assign(comment, data);\n\n    comment.removable = false;\n\n    if (userInfo.type === 'admin') {\n\n        comment.removable = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_any') >= 0) {\n\n        comment.removable = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_own') >= 0) {\n\n        if (entryInfo.author === userInfo.$id) {\n\n            comment.removable = true;\n        }\n    }\n\n    comment.remove = function() {\n\n        if (confirm('Remove the comment?')) {\n\n            api.removeComment(entryInfo.$id, comment.$id).then(function() {\n\n                message.info('The comment has been removed.');\n\n                route.refresh();\n\n            }).catch(message.error);\n        }\n    };\n\n    return comment;\n};\n","exports.show = function() {\n\n    document.getElementById('spinner').style.display = 'block';\n};\n\nexports.hide = function() {\n\n    document.getElementById('spinner').style.display = 'none';\n};\n","// Copies properties from one object to another.\n\nmodule.exports = function(to, from) {\n\n    Object.keys(from).forEach(function(key) {\n\n        to[key] = from[key];\n    });\n};\n","// Mixin for expandable view models.\n\nexports.mixin = function(obj) {\n\n    obj.expanded = ko.observable(false);\n\n    obj.expand = function() {\n\n        if (obj.expanded()) {\n\n            obj.expanded(false);\n\n        } else {\n\n            obj.expanded(true);\n        }\n    };\n};\n","// http://stackoverflow.com/questions/3217492/list-of-language-codes-in-yaml-or-json\n// @author Phil Teare\n// using wikipedia data\n\nmodule.exports = [\n    {\n        'code': 'ab',\n        'name': 'Abkhaz'\n    },\n    {\n        'code': 'aa',\n        'name': 'Afar'\n    },\n    {\n        'code': 'af',\n        'name': 'Afrikaans'\n    },\n    {\n        'code': 'ak',\n        'name': 'Akan'\n    },\n    {\n        'code': 'sq',\n        'name': 'Albanian'\n    },\n    {\n        'code': 'am',\n        'name': 'Amharic'\n    },\n    {\n        'code': 'ar',\n        'name': 'Arabic'\n    },\n    {\n        'code': 'an',\n        'name': 'Aragonese'\n    },\n    {\n        'code': 'hy',\n        'name': 'Armenian'\n    },\n    {\n        'code': 'as',\n        'name': 'Assamese'\n    },\n    {\n        'code': 'av',\n        'name': 'Avaric'\n    },\n    {\n        'code': 'ae',\n        'name': 'Avestan'\n    },\n    {\n        'code': 'ay',\n        'name': 'Aymara'\n    },\n    {\n        'code': 'az',\n        'name': 'Azerbaijani'\n    },\n    {\n        'code': 'bm',\n        'name': 'Bambara'\n    },\n    {\n        'code': 'ba',\n        'name': 'Bashkir'\n    },\n    {\n        'code': 'eu',\n        'name': 'Basque'\n    },\n    {\n        'code': 'be',\n        'name': 'Belarusian'\n    },\n    {\n        'code': 'bn',\n        'name': 'Bengali'\n    },\n    {\n        'code': 'bh',\n        'name': 'Bihari'\n    },\n    {\n        'code': 'bi',\n        'name': 'Bislama'\n    },\n    {\n        'code': 'bs',\n        'name': 'Bosnian'\n    },\n    {\n        'code': 'br',\n        'name': 'Breton'\n    },\n    {\n        'code': 'bg',\n        'name': 'Bulgarian'\n    },\n    {\n        'code': 'my',\n        'name': 'Burmese'\n    },\n    {\n        'code': 'ca',\n        'name': 'Catalan; Valencian'\n    },\n    {\n        'code': 'ch',\n        'name': 'Chamorro'\n    },\n    {\n        'code': 'ce',\n        'name': 'Chechen'\n    },\n    {\n        'code': 'ny',\n        'name': 'Chichewa; Chewa; Nyanja'\n    },\n    {\n        'code': 'zh',\n        'name': 'Chinese'\n    },\n    {\n        'code': 'cv',\n        'name': 'Chuvash'\n    },\n    {\n        'code': 'kw',\n        'name': 'Cornish'\n    },\n    {\n        'code': 'co',\n        'name': 'Corsican'\n    },\n    {\n        'code': 'cr',\n        'name': 'Cree'\n    },\n    {\n        'code': 'hr',\n        'name': 'Croatian'\n    },\n    {\n        'code': 'cs',\n        'name': 'Czech'\n    },\n    {\n        'code': 'da',\n        'name': 'Danish'\n    },\n    {\n        'code': 'dv',\n        'name': 'Divehi; Dhivehi; Maldivian;'\n    },\n    {\n        'code': 'nl',\n        'name': 'Dutch'\n    },\n    {\n        'code': 'en',\n        'name': 'English'\n    },\n    {\n        'code': 'eo',\n        'name': 'Esperanto'\n    },\n    {\n        'code': 'et',\n        'name': 'Estonian'\n    },\n    {\n        'code': 'ee',\n        'name': 'Ewe'\n    },\n    {\n        'code': 'fo',\n        'name': 'Faroese'\n    },\n    {\n        'code': 'fj',\n        'name': 'Fijian'\n    },\n    {\n        'code': 'fi',\n        'name': 'Finnish'\n    },\n    {\n        'code': 'fr',\n        'name': 'French'\n    },\n    {\n        'code': 'ff',\n        'name': 'Fula; Fulah; Pulaar; Pular'\n    },\n    {\n        'code': 'gl',\n        'name': 'Galician'\n    },\n    {\n        'code': 'ka',\n        'name': 'Georgian'\n    },\n    {\n        'code': 'de',\n        'name': 'German'\n    },\n    {\n        'code': 'el',\n        'name': 'Greek, Modern'\n    },\n    {\n        'code': 'gn',\n        'name': 'Guaraní'\n    },\n    {\n        'code': 'gu',\n        'name': 'Gujarati'\n    },\n    {\n        'code': 'ht',\n        'name': 'Haitian; Haitian Creole'\n    },\n    {\n        'code': 'ha',\n        'name': 'Hausa'\n    },\n    {\n        'code': 'he',\n        'name': 'Hebrew (modern)'\n    },\n    {\n        'code': 'hz',\n        'name': 'Herero'\n    },\n    {\n        'code': 'hi',\n        'name': 'Hindi'\n    },\n    {\n        'code': 'ho',\n        'name': 'Hiri Motu'\n    },\n    {\n        'code': 'hu',\n        'name': 'Hungarian'\n    },\n    {\n        'code': 'is',\n        'name': 'Icelandic'\n    },\n    {\n        'code': 'io',\n        'name': 'Ido'\n    },\n    {\n        'code': 'ig',\n        'name': 'Igbo'\n    },\n    {\n        'code': 'id',\n        'name': 'Indonesian'\n    },\n    {\n        'code': 'ia',\n        'name': 'Interlingua'\n    },\n    {\n        'code': 'ie',\n        'name': 'Interlingue'\n    },\n    {\n        'code': 'iu',\n        'name': 'Inuktitut'\n    },\n    {\n        'code': 'ik',\n        'name': 'Inupiaq'\n    },\n    {\n        'code': 'ga',\n        'name': 'Irish'\n    },\n    {\n        'code': 'it',\n        'name': 'Italian'\n    },\n    {\n        'code': 'ja',\n        'name': 'Japanese'\n    },\n    {\n        'code': 'jv',\n        'name': 'Javanese'\n    },\n    {\n        'code': 'kl',\n        'name': 'Kalaallisut, Greenlandic'\n    },\n    {\n        'code': 'kn',\n        'name': 'Kannada'\n    },\n    {\n        'code': 'kr',\n        'name': 'Kanuri'\n    },\n    {\n        'code': 'ks',\n        'name': 'Kashmiri'\n    },\n    {\n        'code': 'kk',\n        'name': 'Kazakh'\n    },\n    {\n        'code': 'km',\n        'name': 'Khmer'\n    },\n    {\n        'code': 'ki',\n        'name': 'Kikuyu, Gikuyu'\n    },\n    {\n        'code': 'rw',\n        'name': 'Kinyarwanda'\n    },\n    {\n        'code': 'ky',\n        'name': 'Kirghiz, Kyrgyz'\n    },\n    {\n        'code': 'rn',\n        'name': 'Kirundi'\n    },\n    {\n        'code': 'kv',\n        'name': 'Komi'\n    },\n    {\n        'code': 'kg',\n        'name': 'Kongo'\n    },\n    {\n        'code': 'ko',\n        'name': 'Korean'\n    },\n    {\n        'code': 'ku',\n        'name': 'Kurdish'\n    },\n    {\n        'code': 'kj',\n        'name': 'Kwanyama, Kuanyama'\n    },\n    {\n        'code': 'lo',\n        'name': 'Lao'\n    },\n    {\n        'code': 'la',\n        'name': 'Latin'\n    },\n    {\n        'code': 'lv',\n        'name': 'Latvian'\n    },\n    {\n        'code': 'li',\n        'name': 'Limburgish, Limburgan, Limburger'\n    },\n    {\n        'code': 'ln',\n        'name': 'Lingala'\n    },\n    {\n        'code': 'lt',\n        'name': 'Lithuanian'\n    },\n    {\n        'code': 'lu',\n        'name': 'Luba-Katanga'\n    },\n    {\n        'code': 'lg',\n        'name': 'Luganda'\n    },\n    {\n        'code': 'lb',\n        'name': 'Luxembourgish, Letzeburgesch'\n    },\n    {\n        'code': 'mk',\n        'name': 'Macedonian'\n    },\n    {\n        'code': 'mg',\n        'name': 'Malagasy'\n    },\n    {\n        'code': 'ms',\n        'name': 'Malay'\n    },\n    {\n        'code': 'ml',\n        'name': 'Malayalam'\n    },\n    {\n        'code': 'mt',\n        'name': 'Maltese'\n    },\n    {\n        'code': 'gv',\n        'name': 'Manx'\n    },\n    {\n        'code': 'mr',\n        'name': 'Marathi (Marāṭhī)'\n    },\n    {\n        'code': 'mh',\n        'name': 'Marshallese'\n    },\n    {\n        'code': 'mn',\n        'name': 'Mongolian'\n    },\n    {\n        'code': 'mi',\n        'name': 'Māori'\n    },\n    {\n        'code': 'na',\n        'name': 'Nauru'\n    },\n    {\n        'code': 'nv',\n        'name': 'Navajo, Navaho'\n    },\n    {\n        'code': 'ng',\n        'name': 'Ndonga'\n    },\n    {\n        'code': 'ne',\n        'name': 'Nepali'\n    },\n    {\n        'code': 'nd',\n        'name': 'North Ndebele'\n    },\n    {\n        'code': 'se',\n        'name': 'Northern Sami'\n    },\n    {\n        'code': 'no',\n        'name': 'Norwegian'\n    },\n    {\n        'code': 'nb',\n        'name': 'Norwegian Bokmål'\n    },\n    {\n        'code': 'nn',\n        'name': 'Norwegian Nynorsk'\n    },\n    {\n        'code': 'ii',\n        'name': 'Nuosu'\n    },\n    {\n        'code': 'oc',\n        'name': 'Occitan'\n    },\n    {\n        'code': 'oj',\n        'name': 'Ojibwe, Ojibwa'\n    },\n    {\n        'code': 'cu',\n        'name': 'Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic'\n    },\n    {\n        'code': 'or',\n        'name': 'Oriya'\n    },\n    {\n        'code': 'om',\n        'name': 'Oromo'\n    },\n    {\n        'code': 'os',\n        'name': 'Ossetian, Ossetic'\n    },\n    {\n        'code': 'pa',\n        'name': 'Panjabi, Punjabi'\n    },\n    {\n        'code': 'ps',\n        'name': 'Pashto, Pushto'\n    },\n    {\n        'code': 'fa',\n        'name': 'Persian'\n    },\n    {\n        'code': 'pl',\n        'name': 'Polish'\n    },\n    {\n        'code': 'pt',\n        'name': 'Portuguese'\n    },\n    {\n        'code': 'pi',\n        'name': 'Pāli'\n    },\n    {\n        'code': 'qu',\n        'name': 'Quechua'\n    },\n    {\n        'code': 'ro',\n        'name': 'Romanian, Moldavian, Moldovan'\n    },\n    {\n        'code': 'rm',\n        'name': 'Romansh'\n    },\n    {\n        'code': 'ru',\n        'name': 'Russian'\n    },\n    {\n        'code': 'sm',\n        'name': 'Samoan'\n    },\n    {\n        'code': 'sg',\n        'name': 'Sango'\n    },\n    {\n        'code': 'sa',\n        'name': 'Sanskrit (Saṁskṛta)'\n    },\n    {\n        'code': 'sc',\n        'name': 'Sardinian'\n    },\n    {\n        'code': 'gd',\n        'name': 'Scottish Gaelic; Gaelic'\n    },\n    {\n        'code': 'sr',\n        'name': 'Serbian'\n    },\n    {\n        'code': 'sn',\n        'name': 'Shona'\n    },\n    {\n        'code': 'sd',\n        'name': 'Sindhi'\n    },\n    {\n        'code': 'si',\n        'name': 'Sinhala, Sinhalese'\n    },\n    {\n        'code': 'sk',\n        'name': 'Slovak'\n    },\n    {\n        'code': 'sl',\n        'name': 'Slovene'\n    },\n    {\n        'code': 'so',\n        'name': 'Somali'\n    },\n    {\n        'code': 'nr',\n        'name': 'South Ndebele'\n    },\n    {\n        'code': 'st',\n        'name': 'Southern Sotho'\n    },\n    {\n        'code': 'es',\n        'name': 'Spanish; Castilian'\n    },\n    {\n        'code': 'su',\n        'name': 'Sundanese'\n    },\n    {\n        'code': 'sw',\n        'name': 'Swahili'\n    },\n    {\n        'code': 'ss',\n        'name': 'Swati'\n    },\n    {\n        'code': 'sv',\n        'name': 'Swedish'\n    },\n    {\n        'code': 'tl',\n        'name': 'Tagalog'\n    },\n    {\n        'code': 'ty',\n        'name': 'Tahitian'\n    },\n    {\n        'code': 'tg',\n        'name': 'Tajik'\n    },\n    {\n        'code': 'ta',\n        'name': 'Tamil'\n    },\n    {\n        'code': 'tt',\n        'name': 'Tatar'\n    },\n    {\n        'code': 'te',\n        'name': 'Telugu'\n    },\n    {\n        'code': 'th',\n        'name': 'Thai'\n    },\n    {\n        'code': 'bo',\n        'name': 'Tibetan Standard, Tibetan, Central'\n    },\n    {\n        'code': 'ti',\n        'name': 'Tigrinya'\n    },\n    {\n        'code': 'to',\n        'name': 'Tonga (Tonga Islands)'\n    },\n    {\n        'code': 'ts',\n        'name': 'Tsonga'\n    },\n    {\n        'code': 'tn',\n        'name': 'Tswana'\n    },\n    {\n        'code': 'tr',\n        'name': 'Turkish'\n    },\n    {\n        'code': 'tk',\n        'name': 'Turkmen'\n    },\n    {\n        'code': 'tw',\n        'name': 'Twi'\n    },\n    {\n        'code': 'ug',\n        'name': 'Uighur, Uyghur'\n    },\n    {\n        'code': 'uk',\n        'name': 'Ukrainian'\n    },\n    {\n        'code': 'ur',\n        'name': 'Urdu'\n    },\n    {\n        'code': 'uz',\n        'name': 'Uzbek'\n    },\n    {\n        'code': 've',\n        'name': 'Venda'\n    },\n    {\n        'code': 'vi',\n        'name': 'Vietnamese'\n    },\n    {\n        'code': 'vo',\n        'name': 'Volapük'\n    },\n    {\n        'code': 'wa',\n        'name': 'Walloon'\n    },\n    {\n        'code': 'cy',\n        'name': 'Welsh'\n    },\n    {\n        'code': 'fy',\n        'name': 'Western Frisian'\n    },\n    {\n        'code': 'wo',\n        'name': 'Wolof'\n    },\n    {\n        'code': 'xh',\n        'name': 'Xhosa'\n    },\n    {\n        'code': 'yi',\n        'name': 'Yiddish'\n    },\n    {\n        'code': 'yo',\n        'name': 'Yoruba'\n    },\n    {\n        'code': 'za',\n        'name': 'Zhuang, Chuang'\n    }\n];\n"]}