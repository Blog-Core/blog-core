{"version":3,"file":"bundle.js","sources":["/home/raivo/blog-core/admin/node_modules/browserify/node_modules/browser-pack/_prelude.js","/home/raivo/blog-core/admin/admin.js","/home/raivo/blog-core/admin/hex.js","/home/raivo/blog-core/admin/api.js","/home/raivo/blog-core/admin/message.js","/home/raivo/blog-core/admin/components/menu.js","/home/raivo/blog-core/admin/components/login.js","/home/raivo/blog-core/admin/components/posts.js","/home/raivo/blog-core/admin/components/post.js","/home/raivo/blog-core/admin/components/users.js","/home/raivo/blog-core/admin/components/user.js","/home/raivo/blog-core/admin/components/comments.js","/home/raivo/blog-core/admin/components/directory.js","/home/raivo/blog-core/admin/components/file.js","/home/raivo/blog-core/admin/xhr.js","/home/raivo/blog-core/admin/validate.js","/home/raivo/blog-core/admin/vm/posts_item.js","/home/raivo/blog-core/admin/vm/post.js","/home/raivo/blog-core/admin/vm/users_item.js","/home/raivo/blog-core/admin/focus.js","/home/raivo/blog-core/admin/vm/user.js","/home/raivo/blog-core/admin/vm/comments_item.js","/home/raivo/blog-core/admin/path.js","/home/raivo/blog-core/admin/vm/directory_item.js","/home/raivo/blog-core/admin/spin.js","/home/raivo/blog-core/admin/assign.js","/home/raivo/blog-core/admin/vm/expandable.js","/home/raivo/blog-core/admin/languages.js"],"names":["loadMenu","model","menu","types","Promise","resolve","api","then","authenticated","hasKey","route","go","hex","require","message","window","formatDate","ts","Date","toISOString","substring","ko","subscribable","fn","trimmed","computed","read","this","trim","write","value","valueHasMutated","owner","component","observable","params","active","show","name","applyBindings","type","id","directory","file","sessionStorage","removeItem","location","length","exports","string","i","charCodeAt","toString","String","fromCharCode","parseInt","substr","jsendAuth","options","headers","apiKey","jsend","xhr","response","json","JSON","parse","status","data","Error","login","username","password","method","url","stringify","Content-Type","posts","X-Key","post","encodeURIComponent","entryInfo","comments","removeComment","updatePost","savePost","removePost","createDirectory","subdirectory","removeDirectory","removeFile","users","user","userInfo","updateUser","saveUser","removeUser","getItem","key","info","text","messages","document","getElementById","createElement","className","innerHTML","appendChild","setTimeout","removeChild","error","err","button","addEventListener","console","stack","components","register","viewModel","createViewModel","template","page","form","validate","clear","match","hasError","res","setItem","formError","all","count","step","hasMore","pureComputed","showMore","scrollTo","body","scrollHeight","showAll","slice","tasks","sort","post1","post2","date_updated","map","posts_item","create","editable","$id","author","postData","editor","style","height","title","querySelector","focus","setSelectionRange","observableArray","users_item","userData","comments_item","path","decode","entries","parent","upload","progress","submit","sub","join","cancel","files","reader","FileReader","onload","XMLHttpRequest","complete","failed","aborted","open","setRequestHeader","send","Uint8Array","result","readAsArrayBuffer","e","lengthComputable","Math","round","loaded","total","refresh","remove","confirm","list","directory_item","compare","size","date","modified","spin","module","reject","req","Object","keys","forEach","onreadystatechange","readyState","hide","responseText","errors","querySelectorAll","item","parentNode","classList","elem","add","insertBefore","assign","expandable","mixin","findAuthor","authors","isoDateToUnix","setUTCHours","setUTCFullYear","floor","getTime","validatePost","slug","content","published","update","submitPost","edit","toJS","scroll","languages","description","content_type","commenting","tags","author_selectable","save","language","bcLanguage","date_published","split","d","subscribe","getSlug","selector","el","fullname","link","password_edit","password_text","creating","my_type","js","comment","decoded","lenght","tokens","entry","encoded","entry1","entry2","compareName","display","to","from","obj","expanded","expand","code"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var hex = require('./hex');\nvar api = require('./api');\nvar message = require('./message');\n\n// Menu component.\n\nrequire('./components/menu');\n\n// Login component.\n\nrequire('./components/login');\n\n// Posts list component.\n\nrequire('./components/posts');\n\n// Posts edit component.\n\nrequire('./components/post');\n\n// Users list component.\n\nrequire('./components/users');\n\n// User edit component.\n\nrequire('./components/user');\n\n// Comments list component.\n\nrequire('./components/comments');\n\n// Directory listing component.\n\nrequire('./components/directory');\n\n// File view component.\n\nrequire('./components/file');\n\n// Global to format dates.\n\nwindow.formatDate = function(ts) {\n\n    return new Date(1000 * ts).toISOString().substring(0, 10);\n};\n\n// Helper to trim whitespace from values.\n\nko.subscribable.fn.trimmed = function() {\n\n    return ko.computed({\n\n        read: function() {\n\n            return this().trim();\n        },\n\n        write: function(value) {\n\n            this(value.trim());\n            this.valueHasMutated();\n        },\n\n        owner: this\n    });\n};\n\n// The main model.\n\nvar model = {\n\n    component: ko.observable(),\n\n    // FIXME changing this before component\n    // might have side effects.\n\n    params: ko.observable({}),\n\n    menu: {\n\n        active: ko.observable(),\n\n        types: ko.observable()\n    }\n};\n\n// Shows given component with params.\n\nmodel.show = function(name, params, menu) {\n\n    model.menu.active(menu);\n    model.params(params);\n    model.component(name);\n};\n\nko.applyBindings(model);\n\n// Returns a Promise.\n\nfunction loadMenu() {\n\n    if (model.menu.types()) {\n\n        // Menu updated.\n\n        return Promise.resolve(model.menu.types());\n    }\n\n    return api.types().then(function(types) {\n\n        model.menu.types(types);\n\n        return types;\n    });\n}\n\n// Redirects user if he/she is not\n// authenticated.\n\nfunction authenticated() {\n\n    if (api.hasKey()) {\n\n        // If user if authenticated then\n        // check if custom menu entries need\n        // reloading.\n\n        loadMenu();\n\n    } else {\n\n        route.go('login');\n    }\n}\n\nroute(/^entries\\/([^\\/]+)/, function(type) {\n\n    authenticated();\n\n    model.show('posts', { type: type }, type);\n});\n\nroute(/^entry\\/([^\\/]+)\\/([^\\/]+)/, function(type, id) {\n\n    authenticated();\n\n    model.show('post', { id: id }, type);\n});\n\nroute(/^new\\/([^\\/]+)/, function(type) {\n\n    authenticated();\n\n    model.show('post', { type: type }, type);\n});\n\nroute(/^files/, function() {\n\n    authenticated();\n\n    route.go('directory/' + hex.hex('/'));\n});\n\nroute(/^directory\\/([^\\/]+)/, function(directory) {\n\n    authenticated();\n\n    model.show('directory', { directory: directory }, 'files');\n});\n\nroute(/^file\\/([^\\/]+)/, function(file) {\n\n    authenticated();\n\n    model.show('file', { file: file }, 'files');\n});\n\nroute(/^comments\\/([^\\/]+)\\/([^\\/]+)/, function(type, id) {\n\n    authenticated();\n\n    model.show('comments', { id: id }, type);\n});\n\nroute(/^users/, function() {\n\n    authenticated();\n\n    model.show('users', {}, 'users');\n});\n\nroute(/^user\\/new/, function() {\n\n    authenticated();\n\n    model.show('user', {}, 'users');\n});\n\nroute(/^user\\/([^\\/]+)/, function(id) {\n\n    authenticated();\n\n    model.show('user', { id: id }, 'users');\n});\n\nroute(/^login/, function() {\n\n    authenticated();\n\n    model.show('login', {});\n});\n\nroute(/^logout/, function() {\n\n    sessionStorage.removeItem('api-key');\n\n    window.location = '/admin';\n});\n\n// Temporary route that decides\n// where to go.\n\nroute(/^landing/, function() {\n\n    model.show(null, {}, 'landing');\n\n    loadMenu().then(function(types) {\n\n        if (types.length > 0) {\n\n            // Select first type.\n\n            route.go('entries/' + types[0].name);\n        }\n    });\n});\n\nroute(/.*/, function() {\n\n    route.go(api.hasKey() ? 'landing' : 'login');\n});\n","exports.hex = function(string) {\n\n    var hex = '';\n\n    for(var i = 0; i < string.length; i++) {\n\n        hex += string.charCodeAt(i).toString(16);\n    }\n\n    return hex;\n};\n\n// FIXME this is broken encoding.\n\nexports.string = function(hex) {\n\n    if (typeof hex !== 'string') {\n\n        hex = hex.toString();\n    }\n\n    var string = '';\n\n    for (var i = 0; i < hex.length; i += 2) {\n\n        string += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    }\n\n    return string;\n};\n","var xhr = require('./xhr');\n\n// FIXME make all API calls use it.\n\nfunction jsendAuth(options) {\n\n    options.headers = options.headers || {};\n\n    options.headers['X-Key'] = apiKey();\n\n    return jsend(options);\n}\n\nfunction jsend(options) {\n\n    return xhr(options).then(function(response) {\n\n        var json = JSON.parse(response);\n\n        if (json.status === 'success') {\n\n            return json.data;\n\n        } else {\n\n            throw new Error(json.message);\n        }\n    });\n}\n\nexports.login = function(username, password) {\n\n    var options = {\n\n        method: 'POST',\n\n        url: '/api/auth',\n\n        data: JSON.stringify({\n\n            username: username,\n            password: password\n        }),\n\n        headers: {\n\n            'Content-Type': 'application/json'\n        }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\nexports.posts = function(type) {\n\n    var options = {\n\n        url: '/api/entries/' + type,\n\n        headers: {\n\n            'X-Key': apiKey()\n        }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response).data;\n    });\n};\n\nexports.post = function(id) {\n\n    var options = {\n\n        url: '/api/entry/' + encodeURIComponent(id),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response).data;\n    });\n};\n\nexports.entryInfo = function(id) {\n\n    var options = {\n\n        url: '/api/entry/' + encodeURIComponent(id) + '/info',\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response).data;\n    });\n};\n\n// Retrieves the given post comments.\n\nexports.comments = function(id) {\n\n    var options = {\n\n        url: '/api/post/' + encodeURIComponent(id) + '/comments',\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response).data;\n    });\n};\n\n// Removes the given comment.\n\nexports.removeComment = function(id) {\n\n    return jsendAuth({\n\n        method: 'DELETE',\n\n        url: '/api/comment/' + encodeURIComponent(id)\n    });\n};\n\nexports.updatePost = function(id, data) {\n\n    var options = {\n\n        method: 'PUT',\n\n        url: '/api/entry/' + id,\n\n        data: JSON.stringify(data),\n\n        headers: { 'X-Key': apiKey(), 'Content-Type': 'application/json' }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\nexports.savePost = function(data) {\n\n    var options = {\n\n        method: 'POST',\n\n        url: '/api/entry',\n\n        data: JSON.stringify(data),\n\n        headers: { 'X-Key': apiKey(), 'Content-Type': 'application/json' }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\n// Removes the given post.\n\nexports.removePost = function(id) {\n\n    var options = {\n\n        method: 'DELETE',\n\n        url: '/api/entry/' + encodeURIComponent(id),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\nexports.directory = function(directory) {\n\n    var options = {\n\n        url: '/api/directory/' + encodeURIComponent(directory),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response).data;\n    });\n};\n\n// Creates the subdirectory.\n// Assumes that directory is hex-encoded\n// and subdirectory is not.\n\nexports.createDirectory = function(directory, subdirectory) {\n\n    return jsendAuth({\n\n        method: 'POST',\n\n        url: '/api/directory/' + encodeURIComponent(directory) + '/' +\n            encodeURIComponent(subdirectory)\n    });\n};\n\n// Removes the directory.\n// Assumes that file path is hex-encoded.\n\nexports.removeDirectory = function(directory) {\n\n    return jsendAuth({\n\n        method: 'DELETE',\n\n        url: '/api/directory/' + encodeURIComponent(directory)\n    });\n};\n\n// Retrieves file metainfo.\n// Assumes that file path is hex-encoded.\n\nexports.file = function(file) {\n\n    return jsendAuth({\n\n        url: '/api/file/' + encodeURIComponent(file)\n    });\n};\n\n// Removes the given file.\n// Assumes that file path is hex-encoded.\n\nexports.removeFile = function(file) {\n\n    return jsendAuth({\n\n        method: 'DELETE',\n\n        url: '/api/file/' + encodeURIComponent(file)\n    });\n};\n\n// Retrieves all users.\n\nexports.users = function() {\n\n    var options = {\n\n        url: '/api/users',\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response).data;\n    });\n};\n\n// Retrieves the given user.\n\nexports.user = function(id) {\n\n    var options = {\n\n        url: '/api/user/' + encodeURIComponent(id),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response).data;\n    });\n};\n\n// Retrieves the current user info.\n\nexports.userInfo = function() {\n\n    return jsendAuth({\n\n        url: '/api/user/info'\n    });\n};\n\n// Updates the given user.\n\nexports.updateUser = function(id, data) {\n\n    var options = {\n\n        method: 'PUT',\n\n        data: JSON.stringify(data),\n\n        url: '/api/user/' + encodeURIComponent(id),\n\n        headers: { 'X-Key': apiKey(), 'Content-Type': 'application/json' }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\n// Saves the new user.\n\nexports.saveUser = function(data) {\n\n    var options = {\n\n        method: 'POST',\n\n        data: JSON.stringify(data),\n\n        url: '/api/user',\n\n        headers: { 'X-Key': apiKey(), 'Content-Type': 'application/json' }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\n// Removes the given user.\n\nexports.removeUser = function(id) {\n\n    var options = {\n\n        method: 'DELETE',\n\n        url: '/api/user/' + encodeURIComponent(id),\n\n        headers: { 'X-Key': apiKey() }\n    };\n\n    return xhr(options).then(function(response) {\n\n        return JSON.parse(response);\n    });\n};\n\n// Finds entry types.\n\nexports.types = function() {\n\n    return jsendAuth({\n\n        url: '/api/types',\n    });\n};\n\n// Checks whether the API key has been set.\n\nexports.hasKey = function() {\n\n    return !!sessionStorage.getItem('api-key');\n};\n\nvar apiKey = exports.apiKey = function() {\n\n    var key = sessionStorage.getItem('api-key');\n\n    if (!key) {\n\n        throw new Error('API key is not set');\n    }\n\n    return key;\n};\n","// Shows informational message.\n\nexports.info = function(text) {\n\n    var messages = document.getElementById('messages');\n    var message = document.createElement('div');\n\n    message.className = 'alert alert-success message';\n    message.innerHTML = text;\n\n    messages.appendChild(message);\n\n    setTimeout(function() {\n\n        messages.removeChild(message);\n\n    }, 2000);\n};\n\n// Shows error message.\n\nexports.error = function(err) {\n\n    var button = document.createElement('button');\n\n    button.className = 'close';\n    button.innerHTML = '&times;';\n\n    var text = document.createElement('span');\n    text.innerHTML = err.toString();\n\n    var messages = document.getElementById('messages');\n    var message = document.createElement('div');\n\n    message.className = 'alert alert-danger message';\n    message.appendChild(button);\n    message.appendChild(text);\n\n    button.addEventListener('click', function() {\n\n        messages.removeChild(message);\n\n    }, false);\n\n    messages.appendChild(message);\n\n    if (err instanceof Error) {\n\n        console.error(err.stack);\n    }\n};\n","\n\n// Creates view model for the main menu.\n\nfunction menu(params) {\n\n    var model = {\n\n        active: params.active,\n\n        types: params.types\n    };\n\n    return model;\n}\n\nko.components.register('bc-menu', {\n\n    viewModel: { createViewModel: menu },\n\n    template: \"<!-- ko if: active() -->\\n    <div class=\\\"btn-group\\\" id=\\\"menu\\\">\\n        <!-- ko foreach: types -->\\n            <a data-bind=\\\"css: { active: $parent.active() === name },\\n                attr: { href: '#entries/' + name }, text: menu_label\\\"\\n                class=\\\"btn btn-default\\\" href=\\\"#\\\"></a>\\n        <!-- /ko -->\\n        <a data-bind=\\\"css: { active: active() === 'users' }\\\" class=\\\"btn btn-default\\\" href=\\\"#users\\\">Users</a>\\n        <a data-bind=\\\"css: { active: active() === 'files' }\\\" class=\\\"btn btn-default\\\" href=\\\"#files\\\">Files</a>\\n        <a class=\\\"btn btn-default\\\" href=\\\"#logout\\\">Logout</a>\\n    </div>\\n<!-- /ko -->\\n\"\n});\n","\nvar api = require('../api');\nvar message = require('../message');\nvar validate = require('../validate');\n\n// Creates view model for the login page.\n\nfunction page() {\n\n    var model = {\n\n        username: ko.observable('').trimmed(),\n\n        password: ko.observable('').trimmed()\n    };\n\n    model.login = function(form) {\n\n        validate.clear(form);\n\n        var username = model.username();\n\n        var password = model.password();\n\n        if (username === '') {\n\n            validate.error('username', 'Username is not entered.');\n\n        } else if (!username.match(/^[^@]+@[^@]+$/)) {\n\n            validate.error('username', 'Username must be an email.');\n        }\n\n        if (password === '') {\n\n            validate.error('password', 'Password is not entered.');\n        }\n\n        if (validate.hasError(form)) {\n\n            return false;\n        }\n\n        api.login(username, password).then(function(res) {\n\n            if (res.status === 'success') {\n\n                sessionStorage.setItem('api-key', res.data.key);\n\n                route.go('landing');\n\n            } else {\n\n                validate.formError(form, res.message);\n            }\n\n        }).catch(message.error);\n    };\n\n    return model;\n}\n\nko.components.register('login', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<h2>Login</h2>\\n\\n<form data-bind=\\\"submit: login\\\">\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"username\\\">Username</label>\\n        <input data-bind=\\\"textInput: username\\\"\\n            type=\\\"text\\\" name=\\\"username\\\" title=\\\"Username\\\"\\n            placeholder=\\\"Username\\\" class=\\\"form-control\\\" id=\\\"username\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"password\\\">Password</label>\\n        <input data-bind=\\\"textInput: password\\\"\\n            type=\\\"password\\\" name=\\\"password\\\" title=\\\"Password\\\"\\n            placeholder=\\\"Password\\\" class=\\\"form-control\\\" id=\\\"password\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Login</button>\\n</form>\\n\"\n});\n","\nvar api = require('../api');\nvar message = require('../message');\nvar posts_item = require('../vm/posts_item');\n\n// Component for displaying a post list.\n\nfunction page(params) {\n\n    var type = params.type;\n\n    var model = {\n\n        type: type,\n\n        all: ko.observable([]),\n\n        count: ko.observable(5),\n\n        step: ko.observable(5)\n    };\n\n    // Shows whether there are more\n    // pager pages.\n\n    model.hasMore = ko.pureComputed(function() {\n\n        return model.count() < model.all().length;\n    });\n\n    // Shows new pager page with posts.\n\n    model.showMore = function() {\n\n        model.count(model.count() + model.step());\n\n        setTimeout(function() {\n\n            // Scrolls to the bottom.\n\n            window.scrollTo(0, document.body.scrollHeight);\n\n        }, 50);\n    };\n\n    // Shows all posts.\n\n    model.showAll = function() {\n\n        model.count(model.all().length);\n    };\n\n    // Posts array considering the current\n    // pager state.\n\n    model.posts = ko.pureComputed(function() {\n\n        var all = model.all();\n\n        return all.slice(0, model.count());\n    });\n\n    var tasks = [ api.userInfo(), api.posts(type) ];\n\n    Promise.all(tasks).then(function(data) {\n\n        var info = data[0], posts = data[1];\n\n        posts.sort(function(post1, post2) {\n\n            return post2.date_updated - post1.date_updated;\n        });\n\n        model.all(posts.map(function(data) {\n\n            var post = posts_item.create(data);\n\n            post.editable = info.type === 'admin' || info.$id === post.author;\n\n            return post;\n\n        }));\n\n    }).catch(message.error);\n\n    return model;\n}\n\nko.components.register('posts', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<h2>Posts</h2>\\n\\n<ul data-bind=\\\"foreach: posts\\\" class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item post-item\\\">\\n        <h4 data-bind=\\\"click: expand, text: title\\\" class=\\\"list-group-item-heading\\\"></h4>\\n        <div class=\\\"list-group-item-text\\\">\\n            Update date: <span data-bind=\\\"text: formatDate(date_updated)\\\"></span>,\\n            comments: <span data-bind=\\\"text: comments\\\"></span>\\n            <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls\\\">\\n                <a data-bind=\\\"attr: { href: '#entry/' + type + '/' + $id }, css: { disabled: !editable }\\\"\\n                    class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                    <span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit\\n                </a>\\n                <a data-bind=\\\"attr: { href: '#comments/' + type + '/' + $id }, visible: type === 'post', css: { disabled: comments === 0 || !editable }\\\"\\n                    class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                    <span class=\\\"glyphicon glyphicon-comment\\\"></span> Comments\\n                </a>\\n                <a data-bind=\\\"click: remove, css: { disabled: !editable }\\\"\\n                    class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                    <span class=\\\"glyphicon glyphicon-edit\\\"></span> Remove\\n                </a>\\n            </div>\\n        </div>\\n    </li>\\n</ul>\\n\\n<a data-bind=\\\"click: showMore, css: { disabled: !hasMore() }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n    <span class=\\\"glyphicon glyphicon-list-alt\\\"></span> Show more\\n</a>\\n<a data-bind=\\\"click: showAll, css: { disabled: !hasMore() }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n    <span class=\\\"glyphicon glyphicon-list-alt\\\"></span> Show all\\n</a>\\n<a data-bind=\\\"attr: { href: '#new/' + type }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n    <span class=\\\"glyphicon glyphicon-plus\\\"></span> Add\\n</a>\\n\"\n});\n","\nvar api = require('../api');\nvar post = require('../vm/post');\nvar message = require('../message');\n\n// Component for the post edit page.\n\nfunction page(params) {\n\n    var model = {\n\n        post: ko.observable()\n    };\n\n    var tasks;\n\n    if (params.id) {\n\n        // Edit existing post.\n\n        // FIXME only admin can call users?\n\n        tasks = [ api.userInfo(), api.users(), api.post(params.id), api.types() ];\n\n        Promise.all(tasks).then(function(data) {\n\n            var info = data[0], users = data[1],\n                postData = data[2], types = data[3];\n\n            model.post(post.create(info, types, users, postData));\n\n            // Autoset initial textarea height.\n\n            var editor = document.getElementById('post-content');\n\n            editor.style.height = (editor.scrollHeight + 10) + 'px';\n\n        }).catch(message.error);\n\n    } else {\n\n        // Create a new post.\n\n        tasks = [ api.userInfo(), api.users(), api.types() ];\n\n        Promise.all(tasks).then(function(data) {\n\n            var info = data[0], users = data[1], types = data[2];\n\n            model.post(post.create(info, types, users));\n\n            model.post().type(params.type);\n\n            var title = document.querySelector('#post-title');\n\n            title.focus();\n\n            if (typeof title.setSelectionRange === 'function') {\n\n                title.setSelectionRange(0, title.value.length);\n            }\n\n        }).catch(message.error);\n    }\n\n    return model;\n}\n\nko.components.register('post', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<!-- ko with: post -->\\n    <h2 data-bind=\\\"text: title\\\"></h2>\\n    <form data-bind=\\\"submit: submit\\\" autocomplete=\\\"off\\\" id=\\\"post\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-title\\\">Title</label>\\n            <input data-bind=\\\"value: title\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"post-title\\\"\\n                placeholder=\\\"Title\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-slug\\\">Slug</label>\\n            <input data-bind=\\\"value: slug\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"post-slug\\\"\\n                placeholder=\\\"Slug\\\">\\n            <p class=\\\"help-block\\\">Slug should not be modified after publishing as it will break links.</p>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-description\\\">Description</label>\\n            <textarea\\n                data-bind=\\\"value: description\\\"\\n                class=\\\"form-control\\\" rows=\\\"3\\\" id=\\\"post-description\\\" placeholder=\\\"Description\\\"></textarea>\\n            <p class=\\\"help-block\\\">Description is used by search engines to show the page snippet.</p>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-content\\\">Content</label>\\n            <textarea\\n                data-bind=\\\"value: content\\\"\\n                class=\\\"form-control content\\\" rows=\\\"20\\\" id=\\\"post-content\\\"\\n                placeholder=\\\"Content\\\"></textarea>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-type\\\">Type</label>\\n            <select data-bind=\\\"value: type, options: types,\\n                optionsText: 'label', optionsValue: 'name'\\\"\\n                class=\\\"form-control\\\" id=\\\"post-type\\\"></select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-content-type\\\">Content type</label>\\n            <select data-bind=\\\"value: content_type\\\" class=\\\"form-control\\\" id=\\\"post-content-type\\\">\\n                <option value=\\\"markdown\\\">Markdown</option>\\n                <option value=\\\"raw\\\">Raw</option>\\n            </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-author\\\">Author</label>\\n            <select data-bind=\\\"value: author, options: authors,\\n                optionsText: 'fullname', attr: { disabled: !author_selectable }\\\"\\n                class=\\\"form-control\\\" id=\\\"post-author\\\"></select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-tags\\\">Tags</label>\\n            <input data-bind=\\\"value: tags\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"post-tags\\\"\\n                placeholder=\\\"Tags\\\">\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n            <label><input data-bind=\\\"checked: published\\\"\\n                type=\\\"checkbox\\\" id=\\\"post-published\\\"> Published</label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-date\\\">Publish date</label>\\n            <input data-bind=\\\"value: date\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"post-date\\\"\\n                placeholder=\\\"YYYY-MM-DD\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-update\\\">Update date</label>\\n            <input data-bind=\\\"value: update\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"post-update\\\"\\n                placeholder=\\\"YYYY-MM-DD\\\">\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n            <label><input data-bind=\\\"checked: commenting\\\" type=\\\"checkbox\\\"> Commenting</label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"post-language\\\">Language</label>\\n            <select data-bind=\\\"value: language, options: languages,\\n                optionsText: 'name', optionsValue: 'code'\\\"\\n                class=\\\"form-control\\\" id=\\\"post-language\\\"></select>\\n        </div>\\n        <button data-bind=\\\"click: save\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save/leave\\n        </button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save/continue\\n        </button>\\n        <a data-bind=\\\"attr: { href: '#' + type() + 's' }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n            <span class=\\\"glyphicon glyphicon-arrow-left\\\"></span> Posts\\n        </a>\\n    </form>\\n<!-- /ko -->\\n\"\n});\n","\nvar api = require('../api');\nvar message = require('../message');\nvar users_item = require('../vm/users_item');\n\n// Component for displaying the users list.\n\nfunction page() {\n\n    var model = {\n\n        users: ko.observableArray([]),\n\n        type: ko.observable()\n    };\n\n    // Loads users and current user info.\n\n    var tasks = [ api.userInfo(), api.users() ];\n\n    Promise.all(tasks).then(function(data) {\n\n        var info = data[0], users = data[1];\n\n        model.type(info.type);\n\n        model.users(users.map(function(data) {\n\n            var user = users_item.create(data);\n\n            user.editable = info.type === 'admin' || user.$id === info.$id;\n\n            return user;\n\n        }));\n\n    }).catch(message.error);\n\n    return model;\n}\n\nko.components.register('users', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<h2>Users</h2>\\n\\n<ul data-bind=\\\"foreach: users\\\" class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item post-item\\\">\\n        <h4 data-bind=\\\"click: expand, text: fullname\\\" class=\\\"list-group-item-heading\\\"></h4>\\n        <div class=\\\"list-group-item-text\\\">\\n            Type: <span data-bind=\\\"text: type\\\"></span>,\\n            username: <span data-bind=\\\"text: username\\\"></span>\\n            <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls\\\">\\n                <a data-bind=\\\"attr: { href: '#user/' + $id }, css: { disabled: !editable }\\\"\\n                    class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                    <span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit\\n                </a>\\n                <a data-bind=\\\"click: remove, css: { disabled: !editable }\\\"\\n                    class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                    <span class=\\\"glyphicon glyphicon-remove\\\"></span> Remove\\n                </a>\\n            </div>\\n        </div>\\n    </li>\\n</ul>\\n\\n<a data-bind=\\\"css: { disabled: type() !== 'admin' }\\\"\\n    class=\\\"btn btn-default\\\" href=\\\"#user/new\\\">\\n    <span class=\\\"glyphicon glyphicon-plus\\\"></span> Add\\n</a>\\n\"\n});\n","\nvar api = require('../api');\nvar focus = require('../focus');\nvar user = require('../vm/user');\nvar message = require('../message');\n\n// Component for user edit page.\n\nfunction page(params) {\n\n    var model = {\n\n        user: ko.observable()\n    };\n\n    if (params.id) {\n\n        // Edit existing user.\n\n        var tasks = [ api.userInfo(), api.user(params.id) ];\n\n        Promise.all(tasks).then(function(data) {\n\n            var info = data[0], userData = data[1];\n\n            model.user(user.create(info, userData));\n\n            focus('#user-fullname');\n\n        }).catch(message.error);\n\n    } else {\n\n        // Create a new user.\n\n        api.userInfo().then(function(info) {\n\n            model.user(user.create(info));\n\n            focus('#user-fullname');\n\n        }).catch(message.error);\n    }\n\n    return model;\n}\n\nko.components.register('user', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<!-- ko with: user -->\\n    <h2 data-bind=\\\"text: fullname\\\"></h2>\\n\\n    <form data-bind=\\\"submit: save\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"user-fullname\\\">Full name</label>\\n            <input data-bind=\\\"value: fullname\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-fullname\\\"\\n                placeholder=\\\"Full name\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"user-username\\\">Username</label>\\n            <input data-bind=\\\"value: username\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-username\\\"\\n                placeholder=\\\"Username\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"user-type\\\">Type</label>\\n            <select data-bind=\\\"value: type\\\" class=\\\"form-control\\\">\\n                <option value=\\\"author\\\">Author</option>\\n                <option value=\\\"admin\\\">Admin</option>\\n            </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"user-link\\\">Link</label>\\n            <input data-bind=\\\"value: link\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-link\\\"\\n                placeholder=\\\"Link\\\">\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n            <label><input data-bind=\\\"checked: files, disable: my_type !== 'admin'\\\" type=\\\"checkbox\\\">\\n                Allow file management</label>\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n            <label><input data-bind=\\\"checked: password_edit, disable: creating\\\" type=\\\"checkbox\\\">\\n                Edit password</label>\\n        </div>\\n        <div data-bind=\\\"visible: password_edit\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-password\\\">New password</label>\\n            <input data-bind=\\\"value: password\\\"\\n                type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"user-password\\\"\\n                placeholder=\\\"Password\\\">\\n            <div class=\\\"checkbox\\\">\\n                <label><input data-bind=\\\"checked: password_text\\\" type=\\\"checkbox\\\">\\n                    Show text</label>\\n            </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save\\n        </button>\\n        <a class=\\\"btn btn-default\\\" href=\\\"#users\\\">\\n            <span class=\\\"glyphicon glyphicon-arrow-left\\\"></span> Cancel\\n        </a>\\n    </form>\\n<!-- /ko -->\\n\"\n});\n","\nvar api = require('../api');\nvar message = require('../message');\nvar comments_item = require('../vm/comments_item');\n\n// Creates view model for the comments list.\n\nfunction page(params) {\n\n    var model = {\n\n        title: ko.observable(),\n\n        comments: ko.observable([])\n    };\n\n    var tasks = [ api.entryInfo(params.id), api.comments(params.id) ];\n\n    Promise.all(tasks).then(function(data) {\n\n        var info = data[0], comments = data[1];\n\n        model.title(info.title);\n\n        model.comments(comments.map(function(data) {\n\n            return comments_item.create(data);\n\n        }));\n\n    }).catch(message.error);\n\n    return model;\n}\n\nko.components.register('comments', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<h2 data-bind=\\\"text: title\\\"></h2>\\n<h3>Comments</h3>\\n<ul data-bind=\\\"foreach: comments\\\" class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item post-item\\\">\\n        <h4 data-bind=\\\"text: author, click: expand\\\" class=\\\"list-group-item-heading\\\"></h4>\\n        <div class=\\\"list-group-item-text\\\">\\n            Date: <span data-bind=\\\"text: formatDate(date)\\\"></span>\\n            <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls\\\">\\n                <div class=\\\"panel panel-default\\\">\\n                    <div data-bind=\\\"text: message\\\" class=\\\"panel-body\\\"></div>\\n                </div>\\n                <a data-bind=\\\"click: remove\\\" class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                    <span class=\\\"glyphicon glyphicon-remove\\\"></span> Remove\\n                </a>\\n            </div>\\n        </div>\\n    </li>\\n</ul>\\n\"\n});\n","\nvar api = require('../api');\nvar path = require('../path');\nvar message = require('../message');\nvar directory_item = require('../vm/directory_item');\n\n// Component for displaying a directory.\n\nfunction page(params) {\n\n    var directory = params.directory;\n\n    var model = {\n\n        directory: path.decode(directory),\n\n        entries: ko.observable([]),\n\n        parent: path.parent(directory),\n\n        subdirectory: {\n\n            form: ko.observable(false),\n\n            directory: ko.observable('').trimmed()\n        },\n\n        upload: {\n\n            form: ko.observable(false),\n\n            progress: ko.observable(0)\n        }\n    };\n\n    // Opens subdirectory form.\n\n    model.subdirectory.show = function() {\n\n        model.subdirectory.form(true);\n    };\n\n    // Creates the subdirectory.\n\n    model.subdirectory.submit = function() {\n\n        var sub = model.subdirectory.directory();\n\n        api.createDirectory(directory, sub).then(function() {\n\n            message.info('Directory \"' + path.decode(path.join(directory, sub)) +\n                '\" has been created.');\n\n            model.subdirectory.form(false);\n\n            route.go('directory/' + path.join(directory, sub));\n\n        }).catch(message.error);\n    };\n\n    // Cancels and hides the subdirectory form.\n    // Resets the form.\n\n    model.subdirectory.cancel = function() {\n\n        model.subdirectory.form(false);\n        model.subdirectory.directory('');\n    };\n\n    // Shows file upload form.\n\n    model.upload.show = function() {\n\n        model.upload.form(true);\n    };\n\n    // Submits the upload form and\n    // performs the file upload process.\n\n    model.upload.submit = function() {\n\n        var file = document.getElementById('directory-file').files[0];\n\n        if (!file) {\n\n            return;\n        }\n\n        model.upload.file = file;\n\n        var reader = new FileReader();\n\n        reader.onload = function() {\n\n            var xhr = new XMLHttpRequest();\n\n            xhr.upload.addEventListener('progress', model.upload.progress, false);\n\n            xhr.addEventListener('load', model.upload.complete, false);\n            xhr.addEventListener('error', model.upload.failed, false);\n            xhr.addEventListener('abort', model.upload.aborted, false);\n\n            xhr.open('POST', '/api/upload/' + encodeURIComponent(directory));\n\n            xhr.setRequestHeader('X-Key', api.apiKey());\n            xhr.setRequestHeader('X-File-Name', file.name);\n            xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n\n            xhr.send(new Uint8Array(reader.result));\n        };\n\n        reader.readAsArrayBuffer(file);\n    };\n\n    // Cancels and hides the upload form.\n\n    model.upload.cancel = function() {\n\n        model.upload.form(false);\n    };\n\n    // Reports the upload progress.\n    // FIXME only works on Firefox?\n\n    model.upload.progress = function(e) {\n\n        if (e.lengthComputable) {\n\n            model.upload.progress(Math.round(e.loaded * 100 / e.total));\n        }\n    };\n\n    // Executed then the upload process\n    // is complete.\n\n    model.upload.complete = function() {\n\n        route.refresh();\n\n        message.info('File \"' + path.decode(path.join(directory, model.upload.file.name)) +\n            '\" has been uploaded.');\n    };\n\n    model.upload.failed = function() {\n\n        // FIXME needs error checking.\n    };\n\n    // Executed when the upload process\n    // was aborted.\n\n    model.upload.aborted = function() {\n\n        model.upload.form(false);\n    };\n\n    model.remove = function() {\n\n        if (confirm('Remove directory \"' + path.decode(directory) + '\"?')) {\n\n            api.removeDirectory(directory).then(function() {\n\n                message.info('Directory \"' + path.decode(directory) +\n                    '\" has been successfully removed.');\n\n                route.go('directory/' + model.parent);\n\n            }).catch(message.error);\n        }\n    };\n\n    api.directory(directory).then(function(list) {\n\n        var entries = list.map(function(data) {\n\n            return directory_item.create(directory, data);\n\n        });\n\n        entries.sort(directory_item.compare);\n\n        model.entries(entries);\n\n    }).catch(message.error);\n\n    return model;\n}\n\nko.components.register('directory', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<h2 data-bind=\\\"text: 'Directory ' + directory\\\"></h2>\\n\\n<p>\\n    <!-- ko if: directory !== '/' -->\\n        <a data-bind=\\\"attr: { href: '#directory/' + parent }\\\"\\n            class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n            <span class=\\\"glyphicon glyphicon-arrow-up\\\"></span> Up\\n        </a>\\n    <!-- /ko -->\\n    <a data-bind=\\\"click: subdirectory.show\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n        <span class=\\\"glyphicon glyphicon-folder-close\\\"></span> Add\\n    </a>\\n    <a data-bind=\\\"click: upload.show\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n        <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\n    </a>\\n    <!-- ko if: directory !== '/' -->\\n        <a data-bind=\\\"click: remove\\\"\\n            class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n            <span class=\\\"glyphicon glyphicon-remove-circle\\\"></span> Remove\\n        </a>\\n    <!-- /ko -->\\n</p>\\n\\n<!-- ko if: subdirectory.form() -->\\n    <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">New directory</div>\\n        <div class=\\\"panel-body\\\">\\n            <form data-bind=\\\"submit: subdirectory.submit\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"directory-new\\\">Directory name</label>\\n                    <input data-bind=\\\"value: subdirectory.directory\\\"\\n                        type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"directory-new\\\"\\n                        placeholder=\\\"Directory name\\\" required=\\\"true\\\">\\n                </div>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n                    <span class=\\\"glyphicon glyphicon-folder-close\\\"></span> Add\\n                </button>\\n                <a data-bind=\\\"click: subdirectory.cancel\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n                    <span class=\\\"glyphicon glyphicon-remove-circle\\\"></span> Cancel\\n                </a>\\n            </form>\\n        </div>\\n    </div>\\n<!-- /ko -->\\n\\n<!-- ko if: upload.form() -->\\n    <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">Upload file</div>\\n        <div class=\\\"panel-body\\\">\\n            <form data-bind=\\\"submit: upload.submit\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"directory-file\\\">File</label>\\n                    <input type=\\\"file\\\" id=\\\"directory-file\\\"\\n                        placeholder=\\\"Your file\\\" required=\\\"true\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"progress\\\">\\n                        <div data-bind=\\\"attr: { 'aria-valuenow': upload.progress }, style: { width: upload.progress + '%' }\\\"\\n                            class=\\\"progress-bar\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"0\\\"\\n                            aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 0%\\\">\\n                            <span data-bind=\\\"text: upload.progress + '% complete'\\\" class=\\\"sr-only\\\"></span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n                    <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\n                </button>\\n                <a data-bind=\\\"click: upload.cancel\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n                    <span class=\\\"glyphicon glyphicon-remove-circle\\\"></span> Cancel\\n                </a>\\n            </form>\\n        </div>\\n    </div>\\n<!-- /ko -->\\n\\n<div data-bind=\\\"foreach: entries\\\" class=\\\"list-group\\\">\\n    <a data-bind=\\\"attr: { href: (directory ? '#directory/' : '#file/') + encoded }\\\" href=\\\"#\\\" class=\\\"list-group-item\\\">\\n        <span data-bind=\\\"css: { 'glyphicon-folder-close': directory, 'glyphicon-file': !directory }\\\" class=\\\"glyphicon\\\"></span>\\n        <span data-bind=\\\"text: name\\\"></span>\\n    </a>\\n</div>\\n\"\n});\n","\nvar api = require('../api');\nvar path = require('../path');\nvar message = require('../message');\n\n// Component for displaying a directory.\n\nfunction page(params) {\n\n    var file = params.file;\n\n    var model = {\n\n        file: path.decode(file),\n\n        parent: path.parent(file),\n\n        size: ko.observable(),\n\n        date: ko.observable(0)\n    };\n\n    model.remove = function() {\n\n        if (confirm('Remove file ' + path.decode(file) + '?')) {\n\n            api.removeFile(file).then(function() {\n\n                message.info('File \"' + path.decode(file) + '\" removed.');\n\n                route.go('directory/' + model.parent);\n\n            }).catch(message.error);\n        }\n    };\n\n    api.file(file).then(function(data) {\n\n        model.size(data.size);\n\n        model.date(data.modified);\n\n    }).catch(message.error);\n\n    return model;\n}\n\nko.components.register('file', {\n\n    viewModel: { createViewModel: page },\n\n    template: \"<h2 data-bind=\\\"text: 'File ' + file\\\"></h2>\\n<p>\\n    File size: <span data-bind=\\\"text: size\\\"></span> bytes<br>\\n    Last uploaded: <span data-bind=\\\"text: formatDate(date())\\\"></span>\\n</p>\\n<p>\\n    <a data-bind=\\\"attr: { href: '#directory/' + parent }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n        <span class=\\\"glyphicon glyphicon-arrow-up\\\"></span> Up\\n    </a>\\n    <a data-bind=\\\"attr: { href: file }\\\" href=\\\"#\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n        Direct link (opens in new tab)\\n    </a>\\n    <a data-bind=\\\"click: remove\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n        <span class=\\\"glyphicon glyphicon-remove-circle\\\"></span> Remove\\n    </a>\\n</p>\\n\"\n});\n","var spin = require('./spin');\n\n// From https://gist.github.com/matthewp/3099268\n\nvar count = 0;\n\nmodule.exports = function(options) {\n\n    return new Promise(function(resolve, reject) {\n\n        var req = new XMLHttpRequest();\n\n        req.open(options.method || 'GET', options.url, true);\n\n        Object.keys(options.headers || {}).forEach(function (key) {\n\n            req.setRequestHeader(key, options.headers[key]);\n        });\n\n        req.onreadystatechange = function(e) {\n\n            if (req.readyState !== 4) {\n\n                return;\n            }\n\n            count -= 1;\n\n            if (count === 0) {\n\n                spin.hide();\n            }\n\n            if (req.status !== 200) {\n\n                reject(new Error('Server responded with a status of ' + req.status));\n\n            } else {\n\n                resolve(req.responseText);\n            }\n        };\n\n        if (count === 0) {\n\n            spin.show();\n        }\n\n        count += 1;\n\n        req.send(options.data);\n    });\n};\n","// Cleans the form from error messages.\n\nexports.clear = function(form) {\n\n    var errors = form.querySelectorAll('.error-message');\n    var error, i;\n\n    for (i = 0; i < errors.length; i++) {\n\n        error = errors.item(i);\n\n        error.parentNode.classList.remove('has-error');\n        error.parentNode.removeChild(error);\n    }\n\n    errors = form.parentNode.querySelectorAll('.alert-danger');\n\n    for (i = 0; i < errors.length; i++) {\n\n        error = errors.item(i);\n        error.parentNode.removeChild(error);\n    }\n};\n\n// Checks whether the form\n// has a validation error.\n\nexports.hasError = function(form) {\n\n    return form.querySelectorAll('.error-message').length > 0;\n};\n\n// Adds error to the container of the\n// given input.\n\nexports.error = function(id, message) {\n\n    var elem = document.getElementById(id);\n\n    var error = document.createElement('div');\n\n    error.className = 'error-message';\n    error.innerHTML = message;\n\n    elem.parentNode.appendChild(error);\n    elem.parentNode.classList.add('has-error');\n};\n\n// Sets error to the whole form.\n\nexports.formError = function(form, message) {\n\n    var error = document.createElement('div');\n\n    error.className = 'alert alert-danger';\n    error.innerHTML = message;\n\n    form.parentNode.insertBefore(error, form);\n};\n","var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// Creates posts view model for\n// the users list view.\n\nexports.create = function(data) {\n\n    var post = {\n\n        editable: false\n    };\n\n    // Make it expandable.\n\n    expandable.mixin(post);\n\n    // Copies data attributes.\n\n    assign(post, data);\n\n    // Removes the post.\n    // Asks confirmation.\n\n    post.remove = function() {\n\n        if (confirm('Remove the post?')) {\n\n            api.removePost(post.$id).then(function(response) {\n\n                if (response.status === 'success') {\n\n                    message.info('The post was removed.');\n\n                    route.refresh();\n\n                } else {\n\n                    message.error(response.message);\n                }\n\n            }).catch(message.error);\n        }\n    };\n\n    return post;\n};\n","var api = require('../api');\nvar message = require('../message');\nvar validate = require('../validate');\nvar languages = require('../languages');\n\n// Creates post view model for already\n// existing post or a new post. For new\n// post, data must be unset. The authors\n// argument must contain the list of all\n// users.\n\nexports.create = function(user, types, authors, data) {\n\n    // Sets author to the current user\n    // by default. Gets overriden by data.\n\n    var author = findAuthor(authors, user.$id);\n\n    var post = {\n\n        // List of authors. Used by the\n        // author list dropdown.\n\n        authors: authors,\n\n        // The post title. When this is\n        // the new post then initial slug\n        // is generated by it.\n\n        title: ko.observable('Untitled').trimmed(),\n\n        // The post slug. Can contain\n        // \"safe\" characters only.\n\n        slug: ko.observable('untitled').trimmed(),\n\n        // The post description. Can\n        // be left blank.\n\n        description: ko.observable('').trimmed(),\n\n        // The post content. Can be either\n        // Markdown or raw HTML.\n\n        content: ko.observable('').trimmed(),\n\n        types: types,\n\n        // The post type. Currently\n        // available types are post,\n        // page and block.\n\n        type: ko.observable(),\n\n        // Type of the post content.\n        // Will be processed by the\n        // Markdown formatter when set\n        // to 'markdown''\n\n        content_type: ko.observable('markdown'),\n\n        // Flag to set whether the post\n        // is published or not.\n\n        published: ko.observable(false),\n\n        // Flag to set whether commenting\n        // is allowed or not.\n\n        commenting: ko.observable(true),\n\n        // List of tags. Tags are separated\n        // by commas.\n\n        tags: ko.observable('').trimmed(),\n\n        // The count of comments.\n        // Currently not used.\n\n        comments: ko.observable(0),\n\n\n        // Selected user. Only admins\n        // can select author other than\n        // themself.\n\n        author: ko.observable(author),\n\n        // Flag that indicates whether\n        // the current user can select\n        // the post author.\n\n        author_selectable: user.type === 'admin',\n\n        // Publish date as a string in\n        // the format YYYY-MM-DD. Might be\n        // unset when published flag is not set.\n\n        date: ko.observable('').trimmed(),\n\n        // Update date as a string in\n        // the format YYYY-MM-DD.\n\n        update: ko.observable('').trimmed(),\n\n        // Validates the post data.\n        // Saves or updates it using the API.\n\n        submit: function() {\n\n            submitPost(post, true);\n        },\n\n        // Similar to submit but leaves\n        // the form.\n\n        save: function() {\n\n            submitPost(post, false);\n        },\n\n        // The post language code. See\n        // languages.js for the list of codes.\n\n        language: ko.observable(bcLanguage),\n\n        // List of available languages.\n\n        languages: languages,\n\n        // Returns the plain data object\n        // to send to the backend.\n\n        toJS: function() {\n\n            var tags = post.tags().trim();\n\n            var date = post.date();\n\n            // date_published will be undefined when\n            // no date has been entered.\n\n            var date_published;\n\n            if (date !== '') {\n\n                date_published = isoDateToUnix(date);\n            }\n\n            var date_updated = isoDateToUnix(post.update());\n\n            return {\n\n                author: post.author().$id,\n                title: post.title(),\n                slug: post.slug(),\n                description: post.description(),\n                content: post.content(),\n                type: post.type(),\n                date_published: date_published,\n                date_updated: date_updated,\n                commenting: post.commenting(),\n                published: post.published(),\n                content_type: post.content_type(),\n                tags: tags === '' ? [] : tags.split(/\\, */),\n                language: post.language()\n            };\n        }\n    };\n\n    post.type(types[0].name);\n\n    // Sets the view model values by the\n    // actual data object.\n\n    if (data) {\n\n        author = findAuthor(authors, data.author);\n\n        // When the publish date is set then\n        // set the date field to formatted string.\n\n        if (typeof data.date_published !== 'undefined') {\n\n            var d = new Date(data.date_published * 1000);\n\n            post.date(d.toISOString().substring(0, 10));\n        }\n\n        post.$id = data.$id;\n        post.author(author);\n        post.title(data.title);\n        post.slug(data.slug);\n        post.description(data.description || '');\n        post.content(data.content);\n        post.type(data.type);\n        post.content_type(data.content_type);\n        post.published(data.published);\n        post.commenting(data.commenting);\n        post.tags(data.tags.join(', '));\n        post.comments(data.comments);\n        post.language(data.language);\n\n    } else {\n\n        // Only when for new post.\n        // Add automatic slug generation.\n\n        post.title.subscribe(function(value) {\n\n            post.slug(getSlug(value));\n        });\n\n        // Default publish date.\n\n        post.date(new Date().toISOString().substring(0, 10));\n    }\n\n    // Default update date is the current date.\n\n    post.update(new Date().toISOString().substring(0, 10));\n\n    post.published.subscribe(function(value) {\n\n        // Set publish date when post is published.\n        // Applies only when no publish date is set.\n\n        if (value && post.date() === '') {\n\n            post.date(new Date().toISOString().substring(0, 10));\n        }\n    });\n\n    return post;\n};\n\n// Finds matching author from the\n// array of authors.\n\nfunction findAuthor(authors, id) {\n\n    var author;\n\n    for (var i = 0; i < authors.length; i++) {\n\n        if (authors[i].$id === id) {\n\n            author = authors[i];\n\n            break;\n        }\n    }\n\n    if (!author) {\n\n        throw new Error('No author ' + id);\n    }\n\n    return author;\n}\n\n// Converts ISO8601 date part into\n// an Unix timestamp.\n\nfunction isoDateToUnix(string) {\n\n    var match = string.match(/^(\\d{4})\\-(\\d{2})\\-(\\d{2})$/);\n\n    if (!match) {\n\n        throw new Error('Date does not match pattern: ' + string);\n    }\n\n    var date = new Date();\n\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCFullYear(parseInt(match[1], 10), parseInt(match[2], 10) - 1, parseInt(match[3], 10));\n\n    return Math.floor(date.getTime() / 1000);\n}\n\n// Validates the given post.\n// Adds errors using the validate module.\n\nfunction validatePost(post) {\n\n    if (post.title() === '') {\n\n        validate.error('post-title', 'Title is not entered.');\n    }\n\n    var slug = post.slug();\n\n    if (slug === '') {\n\n        validate.error('post-slug', 'Slug is not entered.');\n\n    } else {\n\n        if (!slug.match(/^[a-z0-9\\-_]+$/)) {\n\n            validate.error('post-slug', 'Use lowercase letters, numbers, hyphen and underscore.');\n        }\n    }\n\n    if (post.content() === '') {\n\n        validate.error('post-content', 'Content is not entered.');\n    }\n\n    var date = post.date();\n\n    if (date === '') {\n\n        if (post.published()) {\n\n            validate.error('post-date', 'Publish date is not entered.');\n        }\n\n    } else if (!date.match(/^\\d{4}\\-\\d{2}\\-\\d{2}$/)) {\n\n        validate.error('post-date', 'Date must be in the YYYY-MM-DD format.');\n    }\n\n    var update = post.update();\n\n    if (update === '') {\n\n        validate.error('post-update', 'Update date is not entered.');\n\n    } else if (!update.match(/^\\d{4}\\-\\d{2}\\-\\d{2}$/)) {\n\n        validate.error('post-update', 'Update date must be in the YYYY-MM-DD format.');\n    }\n}\n\n// Handles save and\n// save-with-continue actions.\n\nfunction submitPost(post, edit) {\n\n    var form = document.getElementById('post');\n\n    validate.clear(form);\n\n    validatePost(post);\n\n    if (validate.hasError(form)) {\n\n        return false;\n    }\n\n    // When post has '$id' property\n    // then it's an existing post.\n\n    if (post.$id) {\n\n        updatePost(form, post, edit);\n\n    } else {\n\n        savePost(form, post, edit);\n    }\n}\n\n// Updates the already existing\n// post. Assumes that the post\n// is validated.\n\nfunction updatePost(form, post, edit) {\n\n    api.updatePost(post.$id, post.toJS()).then(function(response) {\n\n        if (response.status === 'success') {\n\n            message.info('Post updated.');\n\n            if (!edit) {\n\n                route.go(post.type() + 's');\n            }\n\n        } else {\n\n            validate.formError(form, response.message);\n\n            window.scroll(0, 0);\n        }\n\n    }, message.error);\n}\n\n// Saves the new post.\n\nfunction savePost(form, post, edit) {\n\n    api.savePost(post.toJS()).then(function(response) {\n\n        if (response.status === 'success') {\n\n            message.info('Post saved.');\n\n            // Redirect to post page when we\n            // want to keep editing the post.\n            // Otherwise go back to listing page.\n\n            if (edit) {\n\n                route.go(post.type() + '/' + response.data);\n\n            } else {\n\n                route.go(post.type() + 's');\n            }\n\n        } else {\n\n            validate.formError(form, response.message);\n\n            window.scroll(0, 0);\n        }\n\n    }, message.error);\n}\n","var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// Creates user view model for\n// the users list view.\n\nexports.create = function(data) {\n\n    var user = {\n\n        editable: false\n    };\n\n    // Make it expandable.\n\n    expandable.mixin(user);\n\n    // Copies data attributes.\n\n    assign(user, data);\n\n    // Removes the user.\n    // Asks confirmation.\n\n    user.remove = function() {\n\n        if (confirm('Remove the user?')) {\n\n            api.removeUser(user.$id).then(function(response) {\n\n                if (response.status === 'success') {\n\n                    message.info('The user was removed.');\n\n                    route.refresh();\n\n                } else {\n\n                    message.error(response.message);\n                }\n\n            }).catch(message.error);\n        }\n    };\n\n    return user;\n};\n","// Sets focus to the given selector.\n\nmodule.exports = function(selector) {\n\n    var el = document.querySelector(selector);\n\n    if (el) {\n\n        el.focus();\n    }\n};\n","var message = require('../message');\nvar api = require('../api');\nvar validate = require('../validate');\n\n// info - the current user info.\n\nexports.create = function(info, data) {\n\n    var mytype = sessionStorage.getItem('user-type');\n\n    var user = {\n\n        username: ko.observable('').trimmed(),\n        fullname: ko.observable('').trimmed(),\n        type: ko.observable('author'),\n        link: ko.observable('').trimmed(),\n        password: ko.observable('').trimmed(),\n        password_edit: ko.observable(true),\n        password_text: ko.observable(false),\n        error: ko.observable(''),\n        creating: true,\n        files: ko.observable(false),\n        my_type: info.type,\n\n        save: function(form) {\n\n            validate.clear(form);\n\n            if (user.password_edit()) {\n\n                var password = user.password();\n\n                if (password === '') {\n\n                    validate.error('user-password', 'Password is not set.');\n\n                } else if (password.length < 6) {\n\n                    validate.error('user-password', 'Password length must be at least 6.');\n                }\n            }\n\n            var username = user.username();\n\n            if (username === '') {\n\n                validate.error('user-username', 'Username is not set.');\n\n            } else {\n\n                if (!username.match(/^[^@]+@[^@]+$/)) {\n\n                    validate.error('user-username', 'Username must be an email address.');\n                }\n            }\n\n            var fullname = user.fullname();\n\n            if (fullname === '') {\n\n                validate.error('user-fullname', 'Full name is not set.');\n            }\n\n            var link = user.link();\n\n            if (link !== '') {\n\n                if (!link.match(/https?:\\/\\//)) {\n\n                    validate.error('user-link', 'Link must start with http:// or https:// prefix.');\n                }\n            }\n\n            if (validate.hasError(form)) {\n\n                return false;\n            }\n\n            if (user.$id) {\n\n                api.updateUser(user.$id, user.toJS()).then(function(response) {\n\n                    if (response.status === 'success') {\n\n                        route.go('users');\n\n                    } else {\n\n                        validate.formError(form, response.message);\n                    }\n\n                }, message.error);\n\n            } else {\n\n                api.saveUser(user.toJS()).then(function(response) {\n\n                    if (response.status === 'success') {\n\n                        route.go('users');\n\n                    } else {\n\n                        validate.formError(form, response.message);\n                    }\n\n                }, message.error);\n            }\n\n            return false;\n        },\n\n        toJS: function() {\n\n            var js = {\n\n                username: user.username(),\n                fullname: user.fullname(),\n                type: user.type(),\n                link: user.link(),\n                files: user.files()\n            };\n\n            if (user.password_edit()) {\n\n                js.password = user.password();\n            }\n\n            return js;\n        }\n    };\n\n    user.password_text.subscribe(function(value) {\n\n        if (value) {\n\n            document.getElementById('user-password').type = 'text';\n\n        } else {\n\n            document.getElementById('user-password').type = 'password';\n        }\n    });\n\n    if (data) {\n\n        user.$id = data.$id;\n        user.creating = false;\n        user.username(data.username);\n        user.fullname(data.fullname);\n        user.type(data.type);\n        user.link(data.link);\n        user.password_edit(false);\n        user.files(data.files);\n    }\n\n    return user;\n};\n","var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// View Model for a comment.\n\nexports.create = function(data) {\n\n    var comment = {};\n\n    // Make it expandable.\n\n    expandable.mixin(comment);\n\n    // Copies data attributes.\n\n    assign(comment, data);\n\n    comment.remove = function() {\n\n        if (confirm('Remove the comment?')) {\n\n            api.removeComment(comment.$id).then(function() {\n\n                route.refresh();\n\n            }).catch(message.error);\n        }\n    };\n\n    return comment;\n};\n","var hex = require('./hex');\n\n// Helper to work with hex-encoded file paths.\n\n// Decodes the given path into non-hex form.\n\nexports.decode = function(path) {\n\n    return hex.string(path);\n};\n\n// Returns hex-encoded parent directory.\n\nexports.parent = function(path) {\n\n    var decoded = hex.string(path);\n\n    if (decoded === '/') {\n\n        return path;\n    }\n\n    // Paths must start with slash.\n\n    if (decoded[0] !== '/') {\n\n        throw new Error('Paths must start with a slash.');\n    }\n\n    // Drop end slash.\n\n    if (decoded[decoded.lenght - 1] === '/') {\n\n        decoded = decoded.substring(0, decoded.lenght - 1);\n    }\n\n    var tokens = decoded.split(/\\//);\n\n    // Extract and encode the parent.\n\n    return hex.hex('/' + tokens.slice(1, tokens.length - 1).join('/'));\n};\n\n// Joins hex-encoded directory name with\n// non-encoded file name.\n\nexports.join = function(directory, name) {\n\n    var decoded = hex.string(directory);\n\n    // Does not add double slash when directory is /.\n\n    return hex.hex((decoded === '/' ? '' : decoded) + '/' + name);\n};\n","var api = require('../api');\nvar path = require('../path');\nvar assign = require('../assign');\nvar message = require('../message');\n\n// View Model for a directory entry.\n\nexports.create = function(directory, data) {\n\n    var entry = {};\n\n    // Copies data attributes.\n\n    assign(entry, data);\n\n    entry.encoded = path.join(directory, entry.name);\n\n    return entry;\n};\n\n// Compares entries so that directories\n// come first.\n\nexports.compare = function(entry1, entry2) {\n\n    // Compares directory entries by name.\n\n    function compareName() {\n\n        return entry1.name < entry2.name ? -1 : 1;\n    }\n\n    if (entry1.directory) {\n\n        if (entry2.directory) {\n\n            return compareName();\n\n        } else {\n\n            return -1;\n        }\n\n    } else {\n\n        if (entry2.directory) {\n\n            return 1;\n\n        } else {\n\n            return compareName();\n        }\n    }\n};\n","exports.show = function() {\n\n    document.getElementById('spinner').style.display = 'block';\n};\n\nexports.hide = function() {\n\n    document.getElementById('spinner').style.display = 'none';\n};\n","// Copies properties from one object to another.\n\nmodule.exports = function(to, from) {\n\n    Object.keys(from).forEach(function(key) {\n\n        to[key] = from[key];\n    });\n};\n","// Mixin for expandable view models.\n\nexports.mixin = function(obj) {\n\n    obj.expanded = ko.observable(false);\n\n    obj.expand = function() {\n\n        if (obj.expanded()) {\n\n            obj.expanded(false);\n\n        } else {\n\n            obj.expanded(true);\n        }\n    };\n};\n","// http://stackoverflow.com/questions/3217492/list-of-language-codes-in-yaml-or-json\n// @author Phil Teare\n// using wikipedia data\n\nmodule.exports = [\n    {\n        'code': 'ab',\n        'name': 'Abkhaz'\n    },\n    {\n        'code': 'aa',\n        'name': 'Afar'\n    },\n    {\n        'code': 'af',\n        'name': 'Afrikaans'\n    },\n    {\n        'code': 'ak',\n        'name': 'Akan'\n    },\n    {\n        'code': 'sq',\n        'name': 'Albanian'\n    },\n    {\n        'code': 'am',\n        'name': 'Amharic'\n    },\n    {\n        'code': 'ar',\n        'name': 'Arabic'\n    },\n    {\n        'code': 'an',\n        'name': 'Aragonese'\n    },\n    {\n        'code': 'hy',\n        'name': 'Armenian'\n    },\n    {\n        'code': 'as',\n        'name': 'Assamese'\n    },\n    {\n        'code': 'av',\n        'name': 'Avaric'\n    },\n    {\n        'code': 'ae',\n        'name': 'Avestan'\n    },\n    {\n        'code': 'ay',\n        'name': 'Aymara'\n    },\n    {\n        'code': 'az',\n        'name': 'Azerbaijani'\n    },\n    {\n        'code': 'bm',\n        'name': 'Bambara'\n    },\n    {\n        'code': 'ba',\n        'name': 'Bashkir'\n    },\n    {\n        'code': 'eu',\n        'name': 'Basque'\n    },\n    {\n        'code': 'be',\n        'name': 'Belarusian'\n    },\n    {\n        'code': 'bn',\n        'name': 'Bengali'\n    },\n    {\n        'code': 'bh',\n        'name': 'Bihari'\n    },\n    {\n        'code': 'bi',\n        'name': 'Bislama'\n    },\n    {\n        'code': 'bs',\n        'name': 'Bosnian'\n    },\n    {\n        'code': 'br',\n        'name': 'Breton'\n    },\n    {\n        'code': 'bg',\n        'name': 'Bulgarian'\n    },\n    {\n        'code': 'my',\n        'name': 'Burmese'\n    },\n    {\n        'code': 'ca',\n        'name': 'Catalan; Valencian'\n    },\n    {\n        'code': 'ch',\n        'name': 'Chamorro'\n    },\n    {\n        'code': 'ce',\n        'name': 'Chechen'\n    },\n    {\n        'code': 'ny',\n        'name': 'Chichewa; Chewa; Nyanja'\n    },\n    {\n        'code': 'zh',\n        'name': 'Chinese'\n    },\n    {\n        'code': 'cv',\n        'name': 'Chuvash'\n    },\n    {\n        'code': 'kw',\n        'name': 'Cornish'\n    },\n    {\n        'code': 'co',\n        'name': 'Corsican'\n    },\n    {\n        'code': 'cr',\n        'name': 'Cree'\n    },\n    {\n        'code': 'hr',\n        'name': 'Croatian'\n    },\n    {\n        'code': 'cs',\n        'name': 'Czech'\n    },\n    {\n        'code': 'da',\n        'name': 'Danish'\n    },\n    {\n        'code': 'dv',\n        'name': 'Divehi; Dhivehi; Maldivian;'\n    },\n    {\n        'code': 'nl',\n        'name': 'Dutch'\n    },\n    {\n        'code': 'en',\n        'name': 'English'\n    },\n    {\n        'code': 'eo',\n        'name': 'Esperanto'\n    },\n    {\n        'code': 'et',\n        'name': 'Estonian'\n    },\n    {\n        'code': 'ee',\n        'name': 'Ewe'\n    },\n    {\n        'code': 'fo',\n        'name': 'Faroese'\n    },\n    {\n        'code': 'fj',\n        'name': 'Fijian'\n    },\n    {\n        'code': 'fi',\n        'name': 'Finnish'\n    },\n    {\n        'code': 'fr',\n        'name': 'French'\n    },\n    {\n        'code': 'ff',\n        'name': 'Fula; Fulah; Pulaar; Pular'\n    },\n    {\n        'code': 'gl',\n        'name': 'Galician'\n    },\n    {\n        'code': 'ka',\n        'name': 'Georgian'\n    },\n    {\n        'code': 'de',\n        'name': 'German'\n    },\n    {\n        'code': 'el',\n        'name': 'Greek, Modern'\n    },\n    {\n        'code': 'gn',\n        'name': 'Guaraní'\n    },\n    {\n        'code': 'gu',\n        'name': 'Gujarati'\n    },\n    {\n        'code': 'ht',\n        'name': 'Haitian; Haitian Creole'\n    },\n    {\n        'code': 'ha',\n        'name': 'Hausa'\n    },\n    {\n        'code': 'he',\n        'name': 'Hebrew (modern)'\n    },\n    {\n        'code': 'hz',\n        'name': 'Herero'\n    },\n    {\n        'code': 'hi',\n        'name': 'Hindi'\n    },\n    {\n        'code': 'ho',\n        'name': 'Hiri Motu'\n    },\n    {\n        'code': 'hu',\n        'name': 'Hungarian'\n    },\n    {\n        'code': 'is',\n        'name': 'Icelandic'\n    },\n    {\n        'code': 'io',\n        'name': 'Ido'\n    },\n    {\n        'code': 'ig',\n        'name': 'Igbo'\n    },\n    {\n        'code': 'id',\n        'name': 'Indonesian'\n    },\n    {\n        'code': 'ia',\n        'name': 'Interlingua'\n    },\n    {\n        'code': 'ie',\n        'name': 'Interlingue'\n    },\n    {\n        'code': 'iu',\n        'name': 'Inuktitut'\n    },\n    {\n        'code': 'ik',\n        'name': 'Inupiaq'\n    },\n    {\n        'code': 'ga',\n        'name': 'Irish'\n    },\n    {\n        'code': 'it',\n        'name': 'Italian'\n    },\n    {\n        'code': 'ja',\n        'name': 'Japanese'\n    },\n    {\n        'code': 'jv',\n        'name': 'Javanese'\n    },\n    {\n        'code': 'kl',\n        'name': 'Kalaallisut, Greenlandic'\n    },\n    {\n        'code': 'kn',\n        'name': 'Kannada'\n    },\n    {\n        'code': 'kr',\n        'name': 'Kanuri'\n    },\n    {\n        'code': 'ks',\n        'name': 'Kashmiri'\n    },\n    {\n        'code': 'kk',\n        'name': 'Kazakh'\n    },\n    {\n        'code': 'km',\n        'name': 'Khmer'\n    },\n    {\n        'code': 'ki',\n        'name': 'Kikuyu, Gikuyu'\n    },\n    {\n        'code': 'rw',\n        'name': 'Kinyarwanda'\n    },\n    {\n        'code': 'ky',\n        'name': 'Kirghiz, Kyrgyz'\n    },\n    {\n        'code': 'rn',\n        'name': 'Kirundi'\n    },\n    {\n        'code': 'kv',\n        'name': 'Komi'\n    },\n    {\n        'code': 'kg',\n        'name': 'Kongo'\n    },\n    {\n        'code': 'ko',\n        'name': 'Korean'\n    },\n    {\n        'code': 'ku',\n        'name': 'Kurdish'\n    },\n    {\n        'code': 'kj',\n        'name': 'Kwanyama, Kuanyama'\n    },\n    {\n        'code': 'lo',\n        'name': 'Lao'\n    },\n    {\n        'code': 'la',\n        'name': 'Latin'\n    },\n    {\n        'code': 'lv',\n        'name': 'Latvian'\n    },\n    {\n        'code': 'li',\n        'name': 'Limburgish, Limburgan, Limburger'\n    },\n    {\n        'code': 'ln',\n        'name': 'Lingala'\n    },\n    {\n        'code': 'lt',\n        'name': 'Lithuanian'\n    },\n    {\n        'code': 'lu',\n        'name': 'Luba-Katanga'\n    },\n    {\n        'code': 'lg',\n        'name': 'Luganda'\n    },\n    {\n        'code': 'lb',\n        'name': 'Luxembourgish, Letzeburgesch'\n    },\n    {\n        'code': 'mk',\n        'name': 'Macedonian'\n    },\n    {\n        'code': 'mg',\n        'name': 'Malagasy'\n    },\n    {\n        'code': 'ms',\n        'name': 'Malay'\n    },\n    {\n        'code': 'ml',\n        'name': 'Malayalam'\n    },\n    {\n        'code': 'mt',\n        'name': 'Maltese'\n    },\n    {\n        'code': 'gv',\n        'name': 'Manx'\n    },\n    {\n        'code': 'mr',\n        'name': 'Marathi (Marāṭhī)'\n    },\n    {\n        'code': 'mh',\n        'name': 'Marshallese'\n    },\n    {\n        'code': 'mn',\n        'name': 'Mongolian'\n    },\n    {\n        'code': 'mi',\n        'name': 'Māori'\n    },\n    {\n        'code': 'na',\n        'name': 'Nauru'\n    },\n    {\n        'code': 'nv',\n        'name': 'Navajo, Navaho'\n    },\n    {\n        'code': 'ng',\n        'name': 'Ndonga'\n    },\n    {\n        'code': 'ne',\n        'name': 'Nepali'\n    },\n    {\n        'code': 'nd',\n        'name': 'North Ndebele'\n    },\n    {\n        'code': 'se',\n        'name': 'Northern Sami'\n    },\n    {\n        'code': 'no',\n        'name': 'Norwegian'\n    },\n    {\n        'code': 'nb',\n        'name': 'Norwegian Bokmål'\n    },\n    {\n        'code': 'nn',\n        'name': 'Norwegian Nynorsk'\n    },\n    {\n        'code': 'ii',\n        'name': 'Nuosu'\n    },\n    {\n        'code': 'oc',\n        'name': 'Occitan'\n    },\n    {\n        'code': 'oj',\n        'name': 'Ojibwe, Ojibwa'\n    },\n    {\n        'code': 'cu',\n        'name': 'Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic'\n    },\n    {\n        'code': 'or',\n        'name': 'Oriya'\n    },\n    {\n        'code': 'om',\n        'name': 'Oromo'\n    },\n    {\n        'code': 'os',\n        'name': 'Ossetian, Ossetic'\n    },\n    {\n        'code': 'pa',\n        'name': 'Panjabi, Punjabi'\n    },\n    {\n        'code': 'ps',\n        'name': 'Pashto, Pushto'\n    },\n    {\n        'code': 'fa',\n        'name': 'Persian'\n    },\n    {\n        'code': 'pl',\n        'name': 'Polish'\n    },\n    {\n        'code': 'pt',\n        'name': 'Portuguese'\n    },\n    {\n        'code': 'pi',\n        'name': 'Pāli'\n    },\n    {\n        'code': 'qu',\n        'name': 'Quechua'\n    },\n    {\n        'code': 'ro',\n        'name': 'Romanian, Moldavian, Moldovan'\n    },\n    {\n        'code': 'rm',\n        'name': 'Romansh'\n    },\n    {\n        'code': 'ru',\n        'name': 'Russian'\n    },\n    {\n        'code': 'sm',\n        'name': 'Samoan'\n    },\n    {\n        'code': 'sg',\n        'name': 'Sango'\n    },\n    {\n        'code': 'sa',\n        'name': 'Sanskrit (Saṁskṛta)'\n    },\n    {\n        'code': 'sc',\n        'name': 'Sardinian'\n    },\n    {\n        'code': 'gd',\n        'name': 'Scottish Gaelic; Gaelic'\n    },\n    {\n        'code': 'sr',\n        'name': 'Serbian'\n    },\n    {\n        'code': 'sn',\n        'name': 'Shona'\n    },\n    {\n        'code': 'sd',\n        'name': 'Sindhi'\n    },\n    {\n        'code': 'si',\n        'name': 'Sinhala, Sinhalese'\n    },\n    {\n        'code': 'sk',\n        'name': 'Slovak'\n    },\n    {\n        'code': 'sl',\n        'name': 'Slovene'\n    },\n    {\n        'code': 'so',\n        'name': 'Somali'\n    },\n    {\n        'code': 'nr',\n        'name': 'South Ndebele'\n    },\n    {\n        'code': 'st',\n        'name': 'Southern Sotho'\n    },\n    {\n        'code': 'es',\n        'name': 'Spanish; Castilian'\n    },\n    {\n        'code': 'su',\n        'name': 'Sundanese'\n    },\n    {\n        'code': 'sw',\n        'name': 'Swahili'\n    },\n    {\n        'code': 'ss',\n        'name': 'Swati'\n    },\n    {\n        'code': 'sv',\n        'name': 'Swedish'\n    },\n    {\n        'code': 'tl',\n        'name': 'Tagalog'\n    },\n    {\n        'code': 'ty',\n        'name': 'Tahitian'\n    },\n    {\n        'code': 'tg',\n        'name': 'Tajik'\n    },\n    {\n        'code': 'ta',\n        'name': 'Tamil'\n    },\n    {\n        'code': 'tt',\n        'name': 'Tatar'\n    },\n    {\n        'code': 'te',\n        'name': 'Telugu'\n    },\n    {\n        'code': 'th',\n        'name': 'Thai'\n    },\n    {\n        'code': 'bo',\n        'name': 'Tibetan Standard, Tibetan, Central'\n    },\n    {\n        'code': 'ti',\n        'name': 'Tigrinya'\n    },\n    {\n        'code': 'to',\n        'name': 'Tonga (Tonga Islands)'\n    },\n    {\n        'code': 'ts',\n        'name': 'Tsonga'\n    },\n    {\n        'code': 'tn',\n        'name': 'Tswana'\n    },\n    {\n        'code': 'tr',\n        'name': 'Turkish'\n    },\n    {\n        'code': 'tk',\n        'name': 'Turkmen'\n    },\n    {\n        'code': 'tw',\n        'name': 'Twi'\n    },\n    {\n        'code': 'ug',\n        'name': 'Uighur, Uyghur'\n    },\n    {\n        'code': 'uk',\n        'name': 'Ukrainian'\n    },\n    {\n        'code': 'ur',\n        'name': 'Urdu'\n    },\n    {\n        'code': 'uz',\n        'name': 'Uzbek'\n    },\n    {\n        'code': 've',\n        'name': 'Venda'\n    },\n    {\n        'code': 'vi',\n        'name': 'Vietnamese'\n    },\n    {\n        'code': 'vo',\n        'name': 'Volapük'\n    },\n    {\n        'code': 'wa',\n        'name': 'Walloon'\n    },\n    {\n        'code': 'cy',\n        'name': 'Welsh'\n    },\n    {\n        'code': 'fy',\n        'name': 'Western Frisian'\n    },\n    {\n        'code': 'wo',\n        'name': 'Wolof'\n    },\n    {\n        'code': 'xh',\n        'name': 'Xhosa'\n    },\n    {\n        'code': 'yi',\n        'name': 'Yiddish'\n    },\n    {\n        'code': 'yo',\n        'name': 'Yoruba'\n    },\n    {\n        'code': 'za',\n        'name': 'Zhuang, Chuang'\n    }\n];\n"]}