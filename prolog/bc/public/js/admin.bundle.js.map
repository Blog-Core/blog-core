{
  "version": 3,
  "sources": [
    "/home/raivo/blog-core/admin/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/home/raivo/blog-core/admin/admin.js",
    "/home/raivo/blog-core/admin/lib/api.js",
    "/home/raivo/blog-core/admin/lib/assign.js",
    "/home/raivo/blog-core/admin/lib/form_error.js",
    "/home/raivo/blog-core/admin/lib/languages.js",
    "/home/raivo/blog-core/admin/lib/message.js",
    "/home/raivo/blog-core/admin/lib/pages/comments.js",
    "/home/raivo/blog-core/admin/lib/pages/login.js",
    "/home/raivo/blog-core/admin/lib/pages/post.js",
    "/home/raivo/blog-core/admin/lib/pages/posts.js",
    "/home/raivo/blog-core/admin/lib/pages/user.js",
    "/home/raivo/blog-core/admin/lib/pages/users.js",
    "/home/raivo/blog-core/admin/lib/resolve_object.js",
    "/home/raivo/blog-core/admin/lib/spinner.js",
    "/home/raivo/blog-core/admin/lib/view.js",
    "/home/raivo/blog-core/admin/lib/vm/comments_item.js",
    "/home/raivo/blog-core/admin/lib/vm/expandable.js",
    "/home/raivo/blog-core/admin/lib/vm/files_item.js",
    "/home/raivo/blog-core/admin/lib/vm/post.js",
    "/home/raivo/blog-core/admin/lib/vm/posts_item.js",
    "/home/raivo/blog-core/admin/lib/vm/user.js",
    "/home/raivo/blog-core/admin/lib/vm/users_item.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var api = require('./lib/api');\nvar message = require('./lib/message');\nvar login = require('./lib/pages/login');\nvar posts = require('./lib/pages/posts');\nvar post = require('./lib/pages/post');\nvar users = require('./lib/pages/users');\nvar user = require('./lib/pages/user');\nvar comments = require('./lib/pages/comments');\n\n// Errors binding.\n\nrequire('./lib/form_error');\n\n// Global to format dates.\n\nwindow.formatDate = function(ts) {\n\n    return new Date(1000 * ts).toISOString().substring(0, 10);\n};\n\n// The page menu.\n\nvar menu = {\n\n    active: ko.observable(),\n\n    types: ko.observable(),\n\n    load: function() {\n\n        if (menu.types()) {\n\n            // Menu updated.\n\n            return Promise.resolve(menu.types());\n        }\n\n        return api.types().then(function(types) {\n\n            menu.types(types);\n\n            return types;\n        });\n    }\n};\n\n// Binds menu.\n\nko.applyBindings(menu,\n    document.getElementById('menu'));\n\n// Redirects user if he/she is not\n// authenticated.\n\nfunction authenticated() {\n\n    if (api.hasKey()) {\n\n        // If user if authenticated then\n        // check if custom menu entries need\n        // reloading.\n\n        menu.load();\n\n    } else {\n\n        route.go('login');\n    }\n}\n\nroute(/^entries\\/([^\\/]+)/, function(type) {\n\n    authenticated();\n\n    menu.active(type);\n\n    posts.create(type).catch(message.error);\n});\n\nroute(/^entry\\/([^\\/]+)\\/([^\\/]+)/, function(type, id) {\n\n    authenticated();\n\n    menu.active(type);\n\n    post.create(type, id).catch(message.error);\n});\n\nroute(/^new\\/([^\\/]+)/, function(type) {\n\n    authenticated();\n\n    menu.active(type);\n\n    post.create(type).catch(message.error);\n});\n\nroute(/^comments\\/([^\\/]+)\\/([^\\/]+)/, function(type, id) {\n\n    authenticated();\n\n    menu.active(type);\n\n    comments.create(type, id).catch(message.error);\n});\n\nroute(/^users/, function() {\n\n    authenticated();\n\n    menu.active('users');\n\n    users.create().catch(message.error);\n});\n\nroute(/^user\\/new/, function() {\n\n    authenticated();\n\n    menu.active('users');\n\n    user.create().catch(message.error);\n});\n\nroute(/^user\\/([^\\/]+)/, function(id) {\n\n    authenticated();\n\n    menu.active('users');\n\n    user.create(id).catch(message.error);\n});\n\nroute(/^login/, function() {\n\n    authenticated();\n\n    menu.active(null);\n\n    login.create().catch(message.error);\n});\n\nroute(/^logout/, function() {\n\n    sessionStorage.removeItem('api-key');\n\n    localStorage.removeItem('api-key');\n\n    window.location = '/admin';\n});\n\n// Temporary route that decides\n// where to go.\n\nroute(/^landing/, function() {\n\n    menu.active(null);\n\n    menu.load().then(function(types) {\n\n        if (types.length > 0) {\n\n            // Select first type.\n\n            route.go('entries/' + types[0].name);\n        }\n    });\n});\n\nroute(/.*/, function() {\n\n    route.go(api.hasKey() ? 'landing' : 'login');\n});\n\ndocument.body.addEventListener('click', function(e) {\n\n    if (e.target.href && e.target.href.match(/#logout$/)) {\n\n        if (confirm('Do you want to log out?')) {\n\n            return true;\n\n        } else {\n\n            e.stopPropagation();\n\n            e.preventDefault();\n\n            return false;\n        }\n    }\n\n}, false);\n",
    "var spinner = require('./spinner');\n\nvar showCount = 0;\n\nfunction spinnerShow() {\n\n    if (showCount === 0) {\n\n        spinner.show();\n    }\n\n    showCount += 1;\n}\n\nfunction spinnerHide() {\n\n    showCount -= 1;\n\n    if (showCount === 0) {\n\n        spinner.hide();\n    }\n}\n\nfunction fetchGet(url) {\n\n    spinnerShow();\n\n    return fetch(url, {\n\n        headers: {\n\n            'Accept': 'application/json',\n            'X-Key': apiKey()\n        }\n\n    }).catch(function(err) {\n\n        spinnerHide();\n\n        throw err;\n\n    }).then(handleResponse);\n}\n\nfunction fetchDelete(url) {\n\n    spinnerShow();\n\n    return fetch(url, {\n\n        method: 'DELETE',\n\n        headers: {\n\n            'Accept': 'application/json',\n            'X-Key': apiKey()\n        }\n\n    }).catch(function(err) {\n\n        spinnerHide();\n\n        throw err;\n\n    }).then(handleResponse);\n}\n\nfunction fetchPost(url, data, noauth) {\n\n    spinnerShow();\n\n    var headers = {\n\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    };\n\n    if (!noauth) {\n\n        headers['X-Key'] = apiKey();\n    }\n\n    return fetch(url, {\n\n        method: 'POST',\n\n        headers: headers,\n\n        body: JSON.stringify(data)\n\n    }).catch(function(err) {\n\n        spinnerHide();\n\n        throw err;\n\n    }).then(handleResponse);\n}\n\nfunction fetchUpdate(url, data) {\n\n    spinnerShow();\n\n    return fetch(url, {\n\n        method: 'PUT',\n\n        headers: {\n\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-Key': apiKey()\n        },\n\n        body: JSON.stringify(data)\n\n    }).catch(function(err) {\n\n        spinnerHide();\n\n        throw err;\n\n    }).then(handleResponse);\n}\n\nfunction fetchUploadFile(url, file) {\n\n    spinnerShow();\n\n    return fetch(url, {\n\n        method: 'POST',\n\n        headers: {\n\n            'Accept': 'application/json',\n            'Content-Type': 'application/octet-stream',\n            'X-Key': apiKey(),\n            'X-File-Name': file.name\n        },\n\n        body: file\n\n    }).catch(function(err) {\n\n        spinnerHide();\n\n        throw err;\n\n    }).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n\n    spinnerHide();\n\n    return response.json().then(function(json) {\n\n        if (json.status === 'success') {\n\n            return json.data;\n\n        } else {\n\n            throw new Error('API response is not success: ' + json.message);\n        }\n    });\n}\n\n// Uploads entry file.\n\nexports.upload = function(id, file) {\n\n    return fetchUploadFile('/api/upload/' + encodeURIComponent(id), file);\n};\n\n// Login with credentials.\n\nexports.login = function(username, password) {\n\n    return fetchPost('/api/auth', {\n        username: username, password: password }, true);\n};\n\n// List of entries.\n\nexports.posts = function(type) {\n\n    return fetchGet('/api/entries/' + encodeURIComponent(type));\n};\n\n// The given entry.\n\nexports.post = function(id) {\n\n    return fetchGet('/api/entry/' + encodeURIComponent(id));\n};\n\n// The entry info.\n\nexports.entryInfo = function(id) {\n\n    return fetchGet('/api/entry/' + encodeURIComponent(id) + '/info');\n};\n\n// Retrieves the given entry comments.\n\nexports.comments = function(id) {\n\n    return fetchGet('/api/post/' + encodeURIComponent(id) + '/comments');\n};\n\n// Removes the given comment.\n\nexports.removeComment = function(entryId, id) {\n\n    return fetchDelete('/api/comment/' + encodeURIComponent(entryId) +\n            '/' + encodeURIComponent(id));\n};\n\n// Updates the given post.\n\nexports.updatePost = function(id, data) {\n\n    return fetchUpdate('/api/entry/' + encodeURIComponent(id), data);\n};\n\n// Saves the given post.\n\nexports.savePost = function(data) {\n\n    return fetchPost('/api/entry', data);\n};\n\n// Removes the given post.\n\nexports.removePost = function(id) {\n\n    return fetchDelete('/api/entry/' + encodeURIComponent(id));\n};\n\n// Finds entry files.\n\nexports.files = function(entryId) {\n\n    return fetchGet('/api/files/' + encodeURIComponent(entryId));\n};\n\n// Removes the given entry file.\n\nexports.removeFile = function(entryId, file) {\n\n    return fetchDelete('/api/file/' + encodeURIComponent(entryId) +\n            '/' + encodeURIComponent(file));\n};\n\n// Retrieves all users.\n\nexports.users = function() {\n\n    return fetchGet('/api/users');\n};\n\n// Retrieves the given user.\n\nexports.user = function(id) {\n\n    return fetchGet('/api/user/' + encodeURIComponent(id));\n};\n\n// Retrieves the current user info.\n\nexports.userInfo = function() {\n\n    return fetchGet('/api/user/info');\n};\n\n// Updates the given user.\n\nexports.updateUser = function(id, data) {\n\n    return fetchUpdate('/api/user/' + encodeURIComponent(id), data);\n};\n\n// Saves the new user.\n\nexports.saveUser = function(data) {\n\n    return fetchPost('/api/user', data);\n};\n\n// Removes the given user.\n\nexports.removeUser = function(id) {\n\n    return fetchDelete('/api/user/' + encodeURIComponent(id));\n};\n\n// Finds entry types.\n\nexports.types = function() {\n\n    return fetchGet('/api/types');\n};\n\n// Finds entry type info.\n\nexports.typeInfo = function(type) {\n\n    return fetchGet('/api/type/' + encodeURIComponent(type));\n};\n\n// Finds user roles.\n\nexports.roles = function() {\n\n    return fetchGet('/api/roles');\n};\n\n// Checks whether the API key has been set.\n\nexports.hasKey = function() {\n\n    return !!(sessionStorage.getItem('api-key') ||\n        localStorage.getItem('api-key'));\n};\n\nvar apiKey = exports.apiKey = function() {\n\n    var key = sessionStorage.getItem('api-key') ||\n        localStorage.getItem('api-key');\n\n    if (!key) {\n\n        throw new Error('API key is not set');\n    }\n\n    return key;\n};\n",
    "// Copies properties from one object to another.\n\nmodule.exports = function(to, from) {\n\n    Object.keys(from).forEach(function(key) {\n\n        to[key] = from[key];\n    });\n};\n",
    "function setErrors(element, valueAccessor) {\n\n    var value = ko.unwrap(valueAccessor());\n\n    if (value.length > 0) {\n\n        var span = element.querySelector('.ko-input-error');\n\n        if (!span) {\n\n            // No existing error display.\n\n            if (!element.className.match(/has\\-error/)) {\n\n                element.className = element.className + ' has-error';\n            }\n\n            span = document.createElement('span');\n\n            span.className = 'help-block ko-input-error';\n\n            // Finds the holder element.\n\n            var holder = element.querySelector('.checkbox');\n\n            if (!holder) {\n\n                holder = element.querySelector('.form-control');\n            }\n\n            holder.parentNode.appendChild(span);\n        }\n\n        // Update errors display.\n\n        span.innerHTML = value.join(' ');\n\n    } else {\n\n        // Removes error class and messages.\n\n        element.className = element.className.replace(/has\\-error/, '');\n        element.className = element.className.replace(/\\s+/, ' ');\n\n        var error = element.querySelector('.ko-input-error');\n\n        if (error) {\n\n            error.parentNode.removeChild(error);\n        }\n    }\n}\n\n// Defines the errors binding.\n\nko.bindingHandlers.errors = {\n\n    init: function(element, valueAccessor) {\n\n        setErrors(element, valueAccessor);\n    },\n\n    update: function(element, valueAccessor, allBindings) {\n\n        setErrors(element, valueAccessor);\n    }\n};\n",
    "// http://stackoverflow.com/questions/3217492/list-of-language-codes-in-yaml-or-json\n// @author Phil Teare\n// using wikipedia data\n\nmodule.exports = [\n    {\n        'code': 'ab',\n        'name': 'Abkhaz'\n    },\n    {\n        'code': 'aa',\n        'name': 'Afar'\n    },\n    {\n        'code': 'af',\n        'name': 'Afrikaans'\n    },\n    {\n        'code': 'ak',\n        'name': 'Akan'\n    },\n    {\n        'code': 'sq',\n        'name': 'Albanian'\n    },\n    {\n        'code': 'am',\n        'name': 'Amharic'\n    },\n    {\n        'code': 'ar',\n        'name': 'Arabic'\n    },\n    {\n        'code': 'an',\n        'name': 'Aragonese'\n    },\n    {\n        'code': 'hy',\n        'name': 'Armenian'\n    },\n    {\n        'code': 'as',\n        'name': 'Assamese'\n    },\n    {\n        'code': 'av',\n        'name': 'Avaric'\n    },\n    {\n        'code': 'ae',\n        'name': 'Avestan'\n    },\n    {\n        'code': 'ay',\n        'name': 'Aymara'\n    },\n    {\n        'code': 'az',\n        'name': 'Azerbaijani'\n    },\n    {\n        'code': 'bm',\n        'name': 'Bambara'\n    },\n    {\n        'code': 'ba',\n        'name': 'Bashkir'\n    },\n    {\n        'code': 'eu',\n        'name': 'Basque'\n    },\n    {\n        'code': 'be',\n        'name': 'Belarusian'\n    },\n    {\n        'code': 'bn',\n        'name': 'Bengali'\n    },\n    {\n        'code': 'bh',\n        'name': 'Bihari'\n    },\n    {\n        'code': 'bi',\n        'name': 'Bislama'\n    },\n    {\n        'code': 'bs',\n        'name': 'Bosnian'\n    },\n    {\n        'code': 'br',\n        'name': 'Breton'\n    },\n    {\n        'code': 'bg',\n        'name': 'Bulgarian'\n    },\n    {\n        'code': 'my',\n        'name': 'Burmese'\n    },\n    {\n        'code': 'ca',\n        'name': 'Catalan; Valencian'\n    },\n    {\n        'code': 'ch',\n        'name': 'Chamorro'\n    },\n    {\n        'code': 'ce',\n        'name': 'Chechen'\n    },\n    {\n        'code': 'ny',\n        'name': 'Chichewa; Chewa; Nyanja'\n    },\n    {\n        'code': 'zh',\n        'name': 'Chinese'\n    },\n    {\n        'code': 'cv',\n        'name': 'Chuvash'\n    },\n    {\n        'code': 'kw',\n        'name': 'Cornish'\n    },\n    {\n        'code': 'co',\n        'name': 'Corsican'\n    },\n    {\n        'code': 'cr',\n        'name': 'Cree'\n    },\n    {\n        'code': 'hr',\n        'name': 'Croatian'\n    },\n    {\n        'code': 'cs',\n        'name': 'Czech'\n    },\n    {\n        'code': 'da',\n        'name': 'Danish'\n    },\n    {\n        'code': 'dv',\n        'name': 'Divehi; Dhivehi; Maldivian;'\n    },\n    {\n        'code': 'nl',\n        'name': 'Dutch'\n    },\n    {\n        'code': 'en',\n        'name': 'English'\n    },\n    {\n        'code': 'eo',\n        'name': 'Esperanto'\n    },\n    {\n        'code': 'et',\n        'name': 'Estonian'\n    },\n    {\n        'code': 'ee',\n        'name': 'Ewe'\n    },\n    {\n        'code': 'fo',\n        'name': 'Faroese'\n    },\n    {\n        'code': 'fj',\n        'name': 'Fijian'\n    },\n    {\n        'code': 'fi',\n        'name': 'Finnish'\n    },\n    {\n        'code': 'fr',\n        'name': 'French'\n    },\n    {\n        'code': 'ff',\n        'name': 'Fula; Fulah; Pulaar; Pular'\n    },\n    {\n        'code': 'gl',\n        'name': 'Galician'\n    },\n    {\n        'code': 'ka',\n        'name': 'Georgian'\n    },\n    {\n        'code': 'de',\n        'name': 'German'\n    },\n    {\n        'code': 'el',\n        'name': 'Greek, Modern'\n    },\n    {\n        'code': 'gn',\n        'name': 'Guaraní'\n    },\n    {\n        'code': 'gu',\n        'name': 'Gujarati'\n    },\n    {\n        'code': 'ht',\n        'name': 'Haitian; Haitian Creole'\n    },\n    {\n        'code': 'ha',\n        'name': 'Hausa'\n    },\n    {\n        'code': 'he',\n        'name': 'Hebrew (modern)'\n    },\n    {\n        'code': 'hz',\n        'name': 'Herero'\n    },\n    {\n        'code': 'hi',\n        'name': 'Hindi'\n    },\n    {\n        'code': 'ho',\n        'name': 'Hiri Motu'\n    },\n    {\n        'code': 'hu',\n        'name': 'Hungarian'\n    },\n    {\n        'code': 'is',\n        'name': 'Icelandic'\n    },\n    {\n        'code': 'io',\n        'name': 'Ido'\n    },\n    {\n        'code': 'ig',\n        'name': 'Igbo'\n    },\n    {\n        'code': 'id',\n        'name': 'Indonesian'\n    },\n    {\n        'code': 'ia',\n        'name': 'Interlingua'\n    },\n    {\n        'code': 'ie',\n        'name': 'Interlingue'\n    },\n    {\n        'code': 'iu',\n        'name': 'Inuktitut'\n    },\n    {\n        'code': 'ik',\n        'name': 'Inupiaq'\n    },\n    {\n        'code': 'ga',\n        'name': 'Irish'\n    },\n    {\n        'code': 'it',\n        'name': 'Italian'\n    },\n    {\n        'code': 'ja',\n        'name': 'Japanese'\n    },\n    {\n        'code': 'jv',\n        'name': 'Javanese'\n    },\n    {\n        'code': 'kl',\n        'name': 'Kalaallisut, Greenlandic'\n    },\n    {\n        'code': 'kn',\n        'name': 'Kannada'\n    },\n    {\n        'code': 'kr',\n        'name': 'Kanuri'\n    },\n    {\n        'code': 'ks',\n        'name': 'Kashmiri'\n    },\n    {\n        'code': 'kk',\n        'name': 'Kazakh'\n    },\n    {\n        'code': 'km',\n        'name': 'Khmer'\n    },\n    {\n        'code': 'ki',\n        'name': 'Kikuyu, Gikuyu'\n    },\n    {\n        'code': 'rw',\n        'name': 'Kinyarwanda'\n    },\n    {\n        'code': 'ky',\n        'name': 'Kirghiz, Kyrgyz'\n    },\n    {\n        'code': 'rn',\n        'name': 'Kirundi'\n    },\n    {\n        'code': 'kv',\n        'name': 'Komi'\n    },\n    {\n        'code': 'kg',\n        'name': 'Kongo'\n    },\n    {\n        'code': 'ko',\n        'name': 'Korean'\n    },\n    {\n        'code': 'ku',\n        'name': 'Kurdish'\n    },\n    {\n        'code': 'kj',\n        'name': 'Kwanyama, Kuanyama'\n    },\n    {\n        'code': 'lo',\n        'name': 'Lao'\n    },\n    {\n        'code': 'la',\n        'name': 'Latin'\n    },\n    {\n        'code': 'lv',\n        'name': 'Latvian'\n    },\n    {\n        'code': 'li',\n        'name': 'Limburgish, Limburgan, Limburger'\n    },\n    {\n        'code': 'ln',\n        'name': 'Lingala'\n    },\n    {\n        'code': 'lt',\n        'name': 'Lithuanian'\n    },\n    {\n        'code': 'lu',\n        'name': 'Luba-Katanga'\n    },\n    {\n        'code': 'lg',\n        'name': 'Luganda'\n    },\n    {\n        'code': 'lb',\n        'name': 'Luxembourgish, Letzeburgesch'\n    },\n    {\n        'code': 'mk',\n        'name': 'Macedonian'\n    },\n    {\n        'code': 'mg',\n        'name': 'Malagasy'\n    },\n    {\n        'code': 'ms',\n        'name': 'Malay'\n    },\n    {\n        'code': 'ml',\n        'name': 'Malayalam'\n    },\n    {\n        'code': 'mt',\n        'name': 'Maltese'\n    },\n    {\n        'code': 'gv',\n        'name': 'Manx'\n    },\n    {\n        'code': 'mr',\n        'name': 'Marathi (Marāṭhī)'\n    },\n    {\n        'code': 'mh',\n        'name': 'Marshallese'\n    },\n    {\n        'code': 'mn',\n        'name': 'Mongolian'\n    },\n    {\n        'code': 'mi',\n        'name': 'Māori'\n    },\n    {\n        'code': 'na',\n        'name': 'Nauru'\n    },\n    {\n        'code': 'nv',\n        'name': 'Navajo, Navaho'\n    },\n    {\n        'code': 'ng',\n        'name': 'Ndonga'\n    },\n    {\n        'code': 'ne',\n        'name': 'Nepali'\n    },\n    {\n        'code': 'nd',\n        'name': 'North Ndebele'\n    },\n    {\n        'code': 'se',\n        'name': 'Northern Sami'\n    },\n    {\n        'code': 'no',\n        'name': 'Norwegian'\n    },\n    {\n        'code': 'nb',\n        'name': 'Norwegian Bokmål'\n    },\n    {\n        'code': 'nn',\n        'name': 'Norwegian Nynorsk'\n    },\n    {\n        'code': 'ii',\n        'name': 'Nuosu'\n    },\n    {\n        'code': 'oc',\n        'name': 'Occitan'\n    },\n    {\n        'code': 'oj',\n        'name': 'Ojibwe, Ojibwa'\n    },\n    {\n        'code': 'cu',\n        'name': 'Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic'\n    },\n    {\n        'code': 'or',\n        'name': 'Oriya'\n    },\n    {\n        'code': 'om',\n        'name': 'Oromo'\n    },\n    {\n        'code': 'os',\n        'name': 'Ossetian, Ossetic'\n    },\n    {\n        'code': 'pa',\n        'name': 'Panjabi, Punjabi'\n    },\n    {\n        'code': 'ps',\n        'name': 'Pashto, Pushto'\n    },\n    {\n        'code': 'fa',\n        'name': 'Persian'\n    },\n    {\n        'code': 'pl',\n        'name': 'Polish'\n    },\n    {\n        'code': 'pt',\n        'name': 'Portuguese'\n    },\n    {\n        'code': 'pi',\n        'name': 'Pāli'\n    },\n    {\n        'code': 'qu',\n        'name': 'Quechua'\n    },\n    {\n        'code': 'ro',\n        'name': 'Romanian, Moldavian, Moldovan'\n    },\n    {\n        'code': 'rm',\n        'name': 'Romansh'\n    },\n    {\n        'code': 'ru',\n        'name': 'Russian'\n    },\n    {\n        'code': 'sm',\n        'name': 'Samoan'\n    },\n    {\n        'code': 'sg',\n        'name': 'Sango'\n    },\n    {\n        'code': 'sa',\n        'name': 'Sanskrit (Saṁskṛta)'\n    },\n    {\n        'code': 'sc',\n        'name': 'Sardinian'\n    },\n    {\n        'code': 'gd',\n        'name': 'Scottish Gaelic; Gaelic'\n    },\n    {\n        'code': 'sr',\n        'name': 'Serbian'\n    },\n    {\n        'code': 'sn',\n        'name': 'Shona'\n    },\n    {\n        'code': 'sd',\n        'name': 'Sindhi'\n    },\n    {\n        'code': 'si',\n        'name': 'Sinhala, Sinhalese'\n    },\n    {\n        'code': 'sk',\n        'name': 'Slovak'\n    },\n    {\n        'code': 'sl',\n        'name': 'Slovene'\n    },\n    {\n        'code': 'so',\n        'name': 'Somali'\n    },\n    {\n        'code': 'nr',\n        'name': 'South Ndebele'\n    },\n    {\n        'code': 'st',\n        'name': 'Southern Sotho'\n    },\n    {\n        'code': 'es',\n        'name': 'Spanish; Castilian'\n    },\n    {\n        'code': 'su',\n        'name': 'Sundanese'\n    },\n    {\n        'code': 'sw',\n        'name': 'Swahili'\n    },\n    {\n        'code': 'ss',\n        'name': 'Swati'\n    },\n    {\n        'code': 'sv',\n        'name': 'Swedish'\n    },\n    {\n        'code': 'tl',\n        'name': 'Tagalog'\n    },\n    {\n        'code': 'ty',\n        'name': 'Tahitian'\n    },\n    {\n        'code': 'tg',\n        'name': 'Tajik'\n    },\n    {\n        'code': 'ta',\n        'name': 'Tamil'\n    },\n    {\n        'code': 'tt',\n        'name': 'Tatar'\n    },\n    {\n        'code': 'te',\n        'name': 'Telugu'\n    },\n    {\n        'code': 'th',\n        'name': 'Thai'\n    },\n    {\n        'code': 'bo',\n        'name': 'Tibetan Standard, Tibetan, Central'\n    },\n    {\n        'code': 'ti',\n        'name': 'Tigrinya'\n    },\n    {\n        'code': 'to',\n        'name': 'Tonga (Tonga Islands)'\n    },\n    {\n        'code': 'ts',\n        'name': 'Tsonga'\n    },\n    {\n        'code': 'tn',\n        'name': 'Tswana'\n    },\n    {\n        'code': 'tr',\n        'name': 'Turkish'\n    },\n    {\n        'code': 'tk',\n        'name': 'Turkmen'\n    },\n    {\n        'code': 'tw',\n        'name': 'Twi'\n    },\n    {\n        'code': 'ug',\n        'name': 'Uighur, Uyghur'\n    },\n    {\n        'code': 'uk',\n        'name': 'Ukrainian'\n    },\n    {\n        'code': 'ur',\n        'name': 'Urdu'\n    },\n    {\n        'code': 'uz',\n        'name': 'Uzbek'\n    },\n    {\n        'code': 've',\n        'name': 'Venda'\n    },\n    {\n        'code': 'vi',\n        'name': 'Vietnamese'\n    },\n    {\n        'code': 'vo',\n        'name': 'Volapük'\n    },\n    {\n        'code': 'wa',\n        'name': 'Walloon'\n    },\n    {\n        'code': 'cy',\n        'name': 'Welsh'\n    },\n    {\n        'code': 'fy',\n        'name': 'Western Frisian'\n    },\n    {\n        'code': 'wo',\n        'name': 'Wolof'\n    },\n    {\n        'code': 'xh',\n        'name': 'Xhosa'\n    },\n    {\n        'code': 'yi',\n        'name': 'Yiddish'\n    },\n    {\n        'code': 'yo',\n        'name': 'Yoruba'\n    },\n    {\n        'code': 'za',\n        'name': 'Zhuang, Chuang'\n    }\n];\n",
    "// Shows informational message.\n\nexports.info = function(text) {\n\n    var messages = document.getElementById('messages');\n    var message = document.createElement('div');\n\n    message.className = 'alert alert-success message';\n    message.innerHTML = text;\n\n    messages.appendChild(message);\n\n    setTimeout(function() {\n\n        messages.removeChild(message);\n\n    }, 2000);\n};\n\n// Shows error message.\n\nexports.error = function(err) {\n\n    var button = document.createElement('button');\n\n    button.className = 'close';\n    button.innerHTML = '&times;';\n\n    var text = document.createElement('span');\n    text.innerHTML = err.toString();\n\n    var messages = document.getElementById('messages');\n    var message = document.createElement('div');\n\n    message.className = 'alert alert-danger message';\n    message.appendChild(button);\n    message.appendChild(text);\n\n    button.addEventListener('click', function() {\n\n        messages.removeChild(message);\n\n    }, false);\n\n    messages.appendChild(message);\n\n    if (err instanceof Error) {\n\n        console.error(err.stack);\n    }\n};\n",
    "\nvar api = require('../api');\nvar view = require('../view');\nvar resolveObject = require('../resolve_object');\nvar comments_item = require('../vm/comments_item');\n\nvar template = \"<h2 data-bind=\\\"text: title\\\"></h2>\\n<h3>Comments</h3>\\n<ul data-bind=\\\"foreach: comments\\\" class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item post-item\\\">\\n        <h4 data-bind=\\\"text: author, click: expand\\\" class=\\\"list-group-item-heading\\\"></h4>\\n        <div class=\\\"list-group-item-text\\\">\\n            Date: <span data-bind=\\\"text: formatDate(date)\\\"></span>\\n            <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls\\\">\\n                <div class=\\\"panel panel-default\\\">\\n                    <div data-bind=\\\"text: content\\\" class=\\\"panel-body\\\"></div>\\n                </div>\\n                <!-- ko if: removable -->\\n                    <a data-bind=\\\"click: remove\\\" class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-remove\\\"></span> Remove\\n                    </a>\\n                <!-- /ko -->\\n            </div>\\n        </div>\\n    </li>\\n</ul>\\n<!-- ko if: comments().length === 0 -->\\n    <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n        This entry has no comments.\\n    </div>\\n<!-- /ko -->\\n\";\n\n// Page for the comments list.\n\nexports.create = function(type, id) {\n\n    var model = {\n\n        title: ko.observable(),\n\n        comments: ko.observable([])\n    };\n\n    var requests = {\n\n        entryInfo: api.entryInfo(id),\n\n        userInfo: api.userInfo(id),\n\n        typeInfo: api.typeInfo(type),\n\n        comments: api.comments(id)\n    };\n\n    return resolveObject(requests).then(function(data) {\n\n        model.title(data.entryInfo.title);\n\n        model.comments(data.comments.map(function(comments) {\n\n            return comments_item.create(comments, data.userInfo, data.entryInfo, data.typeInfo);\n\n        }));\n\n        view.show(template, model);\n    });\n};\n",
    "\nvar api = require('../api');\nvar view = require('../view');\nvar message = require('../message');\n\nvar template = \"<h2>Login</h2>\\n\\n<form data-bind=\\\"submit: login\\\">\\n    <div data-bind=\\\"errors: errors.username\\\" class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"username\\\">Username</label>\\n        <input data-bind=\\\"textInput: username\\\"\\n            type=\\\"text\\\" name=\\\"username\\\" title=\\\"Username\\\"\\n            placeholder=\\\"Username\\\" class=\\\"form-control\\\" id=\\\"username\\\">\\n    </div>\\n    <div data-bind=\\\"errors: errors.password\\\" class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"password\\\">Password</label>\\n        <input data-bind=\\\"textInput: password\\\"\\n            type=\\\"password\\\" name=\\\"password\\\" title=\\\"Password\\\"\\n            placeholder=\\\"Password\\\" class=\\\"form-control\\\" id=\\\"password\\\">\\n    </div>\\n    <div class=\\\"checkbox\\\">\\n        <label><input data-bind=\\\"checked: remember\\\" type=\\\"checkbox\\\"\\n            name=\\\"remember\\\" id=\\\"remember\\\">\\n            Remember me</label>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Login</button>\\n</form>\\n\";\n\n// The login page.\n\nexports.create = function() {\n\n    var model = {\n\n        username: ko.observable(''),\n\n        password: ko.observable(''),\n\n        remember: ko.observable(false),\n\n        errors: {\n\n            username: ko.observableArray([]),\n            password: ko.observableArray([])\n        }\n    };\n\n    model.login = function(form) {\n\n        // Clear errors.\n\n        Object.keys(model.errors).forEach(function(key) {\n\n            model.errors[key]([]);\n        });\n\n        var username = model.username();\n\n        var password = model.password();\n\n        if (username === '') {\n\n            model.errors.username.push('Username is not entered.');\n\n        } else if (!username.match(/^[^@]+@[^@]+$/)) {\n\n            model.errors.username.push('Username must be an email.');\n        }\n\n        if (password === '') {\n\n            model.errors.password.push('Password is not entered.');\n        }\n\n        var input = form.querySelector(\n            '.has-error input, .has-error textarea, .has-error checkbox');\n\n        if (input) {\n\n            input.focus();\n\n            return false;\n        }\n\n        api.login(username, password).then(function(res) {\n\n            if (model.remember()) {\n\n                localStorage.setItem('api-key', res.key);\n\n                sessionStorage.removeItem('api-key');\n\n            } else {\n\n                sessionStorage.setItem('api-key', res.key);\n\n                localStorage.removeItem('api-key');\n            }\n\n            route.go('landing');\n\n        }).catch(function(err) {\n\n            if (err.toString().match(/Invalid auth credentials/)) {\n\n                model.errors.username.push('Invalid auth credentials.');\n                model.errors.password.push('Invalid auth credentials.');\n\n            } else {\n\n                message.error(err);\n            }\n        });\n    };\n\n    view.show(template, model);\n\n    return Promise.resolve();\n};\n",
    "\nvar api = require('../api');\nvar post = require('../vm/post');\nvar view = require('../view');\nvar resolveObject = require('../resolve_object');\n\nvar template = \"<!-- ko with: post -->\\n    <h2 data-bind=\\\"text: title\\\"></h2>\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"...\\\">\\n        <button data-bind=\\\"click: save\\\" type=\\\"button\\\"\\n            class=\\\"btn btn-default\\\" title=\\\"Save and leave\\\">\\n            <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n        </button>\\n        <button data-bind=\\\"click: submit\\\" type=\\\"button\\\"\\n            class=\\\"btn btn-default\\\" title=\\\"Save and continue\\\">\\n            <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span>\\n        </button>\\n        <button data-bind=\\\"click: $root.toggleInfo, css: { active: $root.info() }\\\"\\n            type=\\\"button\\\" class=\\\"btn btn-default\\\" title=\\\"Show/hide info\\\">\\n            <span class=\\\"glyphicon glyphicon-info-sign\\\"></span>\\n        </button>\\n        <button data-bind=\\\"click: $root.toggleFiles, css: { active: $root.files() }\\\"\\n            type=\\\"button\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-paperclip\\\"></span>\\n        </button>\\n        <!-- ko if: preview -->\\n            <button data-bind=\\\"click: saveAndPreview\\\" class=\\\"btn btn-default\\\">\\n                <span class=\\\"glyphicon glyphicon-eye-open\\\"></span>\\n            </button>\\n        <!-- /ko -->\\n    </div>\\n    <hr>\\n    <form data-bind=\\\"submit: submit\\\" autocomplete=\\\"off\\\" id=\\\"post\\\">\\n        <!-- ko if: $root.info() -->\\n            <div class=\\\"bc-info\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4\\\">\\n                        <div data-bind=\\\"errors: errors.title\\\" class=\\\"form-group\\\">\\n                            <label for=\\\"post-title\\\">Title</label>\\n                            <input data-bind=\\\"textInput: title\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-title\\\"\\n                                placeholder=\\\"Title\\\">\\n                            <p class=\\\"help-block\\\">Slug is autogenerated from the title.</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <div data-bind=\\\"errors: errors.slug\\\" class=\\\"form-group\\\">\\n                            <label for=\\\"post-slug\\\">Slug</label>\\n                            <input data-bind=\\\"textInput: slug\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-slug\\\"\\n                                placeholder=\\\"Slug\\\">\\n                            <p class=\\\"help-block\\\">Modifying the slug after publishing will break links.</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-tags\\\">Tags</label>\\n                            <input data-bind=\\\"textInput: tags\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-tags\\\"\\n                                placeholder=\\\"Tags\\\">\\n                            <p class=\\\"help-block\\\">Separate multiple tags with commas.</p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-type\\\">Type</label>\\n                            <select data-bind=\\\"value: type, options: types,\\n                                optionsText: 'label', optionsValue: 'name',\\n                                attr: { disabled: !can_change_type }\\\"\\n                                class=\\\"form-control input-sm\\\" id=\\\"post-type\\\"></select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-content-type\\\">Content type</label>\\n                            <select data-bind=\\\"value: content_type\\\"\\n                                class=\\\"form-control input-sm\\\" id=\\\"post-content-type\\\">\\n                                <option value=\\\"markdown\\\">Markdown</option>\\n                                <option value=\\\"raw\\\">Raw</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-author\\\">Author</label>\\n                            <select data-bind=\\\"value: author, options: authors,\\n                                optionsText: 'fullname', optionsValue: '$id',\\n                                attr: { disabled: !can_change_author }\\\"\\n                                class=\\\"form-control input-sm\\\" id=\\\"post-author\\\"></select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-language\\\">Language</label>\\n                            <select data-bind=\\\"value: language, options: languages,\\n                                optionsText: 'name', optionsValue: 'code'\\\"\\n                                class=\\\"form-control input-sm\\\" id=\\\"post-language\\\"></select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div data-bind=\\\"errors: errors.date\\\" class=\\\"form-group\\\">\\n                            <label for=\\\"post-date\\\">Publish date</label>\\n                            <input data-bind=\\\"textInput: date\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-date\\\"\\n                                placeholder=\\\"YYYY-MM-DD\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div data-bind=\\\"errors: errors.update\\\" class=\\\"form-group\\\">\\n                            <label for=\\\"post-update\\\">Update date</label>\\n                            <input data-bind=\\\"textInput: update\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-update\\\"\\n                                placeholder=\\\"YYYY-MM-DD\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-8\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-description\\\">Description</label>\\n                            <textarea\\n                                data-bind=\\\"textInput: description\\\"\\n                                class=\\\"form-control input-sm\\\" rows=\\\"2\\\" id=\\\"post-description\\\" placeholder=\\\"Description\\\"></textarea>\\n                            <p class=\\\"help-block\\\">Description is used by search engines to show the page snippet.\\n                                It must not contain HTML.</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"checkbox\\\">\\n                            <label><input data-bind=\\\"checked: published,\\n                                attr: { disabled: !can_publish }\\\"\\n                                type=\\\"checkbox\\\" id=\\\"post-published\\\"> Published</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"checkbox\\\">\\n                            <label><input data-bind=\\\"checked: commenting\\\"\\n                                type=\\\"checkbox\\\"> Commenting</label>\\n                        </div>\\n                    </div>\\n                </div>\\n                <hr>\\n            </div>\\n        <!-- /ko -->\\n        <!-- ko if: $root.files() -->\\n            <!-- ko if: can_manage_files -->\\n                <!-- ko if: !$id() -->\\n                    <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                        To upload files you need to save the entry first.\\n                    </div>\\n                <!-- /ko -->\\n                <!-- ko if: $id() -->\\n                    <!-- ko if: slug_changed() -->\\n                        <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                            You have changed the entry slug. File management is\\n                            re-enabled after saving the entry.\\n                        </div>\\n                    <!-- /ko -->\\n                    <!-- ko if: !slug_changed() -->\\n                        <!-- ko if: files().length === 0 -->\\n                            <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                                This entry has no files.\\n                            </div>\\n                        <!-- /ko -->\\n                        <div data-bind=\\\"foreach: files\\\" class=\\\"list-group\\\">\\n                            <li class=\\\"list-group-item post-item\\\">\\n                                <div data-bind=\\\"click: expand\\\" class=\\\"list-group-item-heading\\\">\\n                                    <span class=\\\"glyphicon glyphicon-file\\\"></span> <!-- ko text: name --><!-- /ko -->\\n                                </div>\\n                                <!-- ko if: expanded() -->\\n                                    URL: <!-- ko text: url --><!-- /ko -->\\n                                    <div class=\\\"post-controls\\\">\\n                                        <a data-bind=\\\"click: $parent.removeFile\\\"\\n                                            class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                                            <span class=\\\"glyphicon glyphicon-edit\\\"></span> Remove</a>\\n                                        <a data-bind=\\\"attr: { href: url }\\\" target=\\\"_blank\\\"\\n                                            class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\"> View (in new tab)</a>\\n                                    </div>\\n                                <!-- /ko -->\\n                            </li>\\n                        </div>\\n                        <div class=\\\"row bc-controls\\\">\\n                            <div class=\\\"col-sm-6\\\">\\n                                <div id=\\\"entry-file-wrap\\\">\\n                                    <input type=\\\"file\\\" id=\\\"entry-file\\\" class=\\\"form-control\\\" placeholder=\\\"Your file\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-6\\\">\\n                                <a data-bind=\\\"click: uploadFile\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n                                    <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\n                                </a>\\n                            </div>\\n                        </div>\\n                    <!-- /ko -->\\n                <!-- /ko -->\\n            <!-- /ko -->\\n            <!-- ko if: !can_manage_files -->\\n                <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                    To upload files you need file management permissions.\\n                </div>\\n            <!-- /ko -->\\n            <hr>\\n        <!-- /ko -->\\n        <div id=\\\"editor-wrap\\\">\\n            <div id=\\\"editor\\\"></div>\\n        </div>\\n        <!--div data-bind=\\\"errors: errors.content\\\" class=\\\"form-group\\\">\\n            <label for=\\\"post-content\\\">Content</label>\\n            <textarea\\n                data-bind=\\\"textInput: content\\\"\\n                class=\\\"form-control content\\\" rows=\\\"20\\\" id=\\\"post-content\\\"\\n                placeholder=\\\"Content\\\"></textarea>\\n        </div-->\\n    </form>\\n<!-- /ko -->\\n\";\n\n// The post edit page.\n\nexports.create = function(type, id) {\n\n    var model = {\n\n        post: ko.observable(),\n\n        info: ko.observable(false),\n\n        files: ko.observable(false)\n    };\n\n    // Shows/hides the info section.\n\n    model.toggleInfo = function() {\n\n        model.info(!model.info());\n    };\n\n    // Shows/hides the files section.\n\n    model.toggleFiles = function() {\n\n        model.files(!model.files());\n    };\n\n    return postData(id).then(function(data) {\n\n        // data.post will be undefined when id is not set.\n\n        model.post(post.create(data.userInfo, type, data.types, data.users, data.files, data.post));\n\n        // Save handler.\n        // http://stackoverflow.com/questions/4446987/overriding-controls-save-functionality-in-browser\n\n        function saveHandler(e) {\n\n            if (e.keyCode == 83 && (navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey)) {\n\n                e.preventDefault();\n\n                model.post().submit();\n            }\n        }\n\n        document.addEventListener('keydown', saveHandler, false);\n\n        // Remove save handler when\n        // view changes.\n\n        model.dispose = function() {\n\n            console.log('Dispose');\n\n            document.removeEventListener('keydown', saveHandler, false);\n        };\n\n        view.show(template, model);\n\n        // Setup Ace\n\n        var editor = ace.edit('editor');\n\n        editor.container.style.lineHeight = 1.5\n\n        editor.setOptions({\n\n            maxLines: Infinity,\n\n            showLineNumbers: false,\n\n            wrap: true,\n\n            showPrintMargin: false,\n\n            showFoldWidgets: false,\n\n            showGutter: false,\n\n            displayIndentGuides: false,\n\n            fontSize: 14,\n\n            fontFamily: 'monospace',\n\n            useSoftTabs: true,\n\n            tabSize: 2\n        });\n\n        // Theme\n\n        editor.setTheme('ace/theme/github');\n\n        // Mode\n\n        editor.getSession().setMode('ace/mode/markdown');\n\n        if (id) {\n\n            editor.setValue(data.post.content);\n\n            // Go to last line\n\n            editor.focus();\n\n            editor.gotoLine(1);\n\n        } else {\n\n            model.info(true);\n\n            // Set focus to title.\n\n            var title = document.querySelector('#post-title');\n\n            title.focus();\n\n            if (typeof title.setSelectionRange === 'function') {\n\n                title.setSelectionRange(0, title.value.length);\n            }\n        }\n\n        // Associate into the post.\n\n        model.post().editor = editor;\n\n        // Associate current model as well.\n\n        model.post().parent = model;\n    });\n};\n\n// Retrieves data relevant to\n// the post. When id is not set\n// then retrieves data needed for the\n// new post.\n\nfunction postData(id) {\n\n    return api.userInfo().then(function(userInfo) {\n\n        var requests = {\n\n            types: api.types(),\n\n            users: authors(userInfo),\n\n            userInfo: Promise.resolve(userInfo)\n        };\n\n        if (id) {\n\n            requests.post = api.post(id);\n\n            // The entry files.\n\n            requests.files = api.files(id);\n\n        } else {\n\n            requests.files = Promise.resolve([]);\n        }\n\n        return resolveObject(requests);\n    });\n}\n\n// Retrieves selectable authors.\n// userInfo - the current user info data.\n\nfunction authors(userInfo) {\n\n    if (userInfo.type === 'admin') {\n\n        return api.users();\n\n    } else {\n\n        // Non-admin can only select\n        // itself as the author.\n\n        return Promise.resolve([{\n\n            $id: userInfo.$id,\n\n            fullname: userInfo.fullname\n\n        }]);\n    }\n}\n",
    "\nvar api = require('../api');\nvar view = require('../view');\nvar postsItem = require('../vm/posts_item');\nvar resolveObject = require('../resolve_object');\n\nvar template = \"<h2 data-bind=\\\"text: title\\\"></h2>\\n\\n<ul data-bind=\\\"foreach: posts\\\" class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item post-item\\\">\\n        <h4 data-bind=\\\"click: expand, text: title\\\" class=\\\"list-group-item-heading\\\"></h4>\\n        <div class=\\\"list-group-item-text\\\">\\n            Update date: <span data-bind=\\\"text: formatDate(date_updated)\\\"></span>\\n            <!-- ko if: $parent.comments() -->\\n                comments: <span data-bind=\\\"text: comments\\\"></span>\\n            <!-- /ko -->\\n            <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls bc-margin-bottom-sm\\\">\\n                <!-- ko if: editable -->\\n                    <a data-bind=\\\"attr: { href: editLink }\\\" class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit\\n                    </a>\\n                <!-- /ko -->\\n                <!-- ko if: $parent.comments() -->\\n                    <a data-bind=\\\"attr: { href: commentsLink }, css: { disabled: comments === 0 }\\\"\\n                        class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-comment\\\"></span> Comments\\n                    </a>\\n                <!-- /ko -->\\n                <!-- ko if: removable -->\\n                    <a data-bind=\\\"click: remove\\\"\\n                        class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-edit\\\"></span> Remove\\n                    </a>\\n                <!-- /ko -->\\n            </div>\\n            <!-- ko if: !published -->\\n                <div>\\n                    <span class=\\\"label label-danger\\\">Not published</span>\\n                </div>\\n            <!-- /ko -->\\n        </div>\\n    </li>\\n</ul>\\n\\n<!-- ko if: posts().length === 0 -->\\n    <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n        This entry type has no entries with access.\\n    </div>\\n<!-- /ko -->\\n\\n<div class=\\\"bc-controls\\\">\\n    <a data-bind=\\\"click: showMore, css: { disabled: !hasMore() }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n        <span class=\\\"glyphicon glyphicon-list-alt\\\"></span> Show more\\n    </a>\\n    <a data-bind=\\\"click: showAll, css: { disabled: !hasMore() }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n        <span class=\\\"glyphicon glyphicon-list-alt\\\"></span> Show all\\n    </a>\\n    <a data-bind=\\\"attr: { href: '#new/' + type }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n        <span class=\\\"glyphicon glyphicon-plus\\\"></span> Add\\n    </a>\\n</div>\\n\";\n\n// Page for displaying a post list.\n\nexports.create = function(type) {\n\n    var model = {\n\n        type: type,\n\n        all: ko.observable([]),\n\n        count: ko.observable(5),\n\n        step: ko.observable(5),\n\n        comments: ko.observable(false),\n\n        create: ko.observable(false),\n\n        title: ko.observable(),\n\n        loaded: ko.observable(false)\n    };\n\n    // Shows whether there are more\n    // pager pages.\n\n    model.hasMore = ko.pureComputed(function() {\n\n        return model.count() < model.all().length;\n    });\n\n    // Shows new pager page with posts.\n\n    model.showMore = function() {\n\n        model.count(model.count() + model.step());\n\n        setTimeout(function() {\n\n            // Scrolls to the bottom.\n\n            window.scrollTo(0, document.body.scrollHeight);\n\n        }, 50);\n    };\n\n    // Shows all posts.\n\n    model.showAll = function() {\n\n        model.count(model.all().length);\n    };\n\n    // Posts array considering the current\n    // pager state.\n\n    model.posts = ko.pureComputed(function() {\n\n        var all = model.all();\n\n        return all.slice(0, model.count());\n    });\n\n    // Finds data from API and updates\n    // the view.\n\n    var requests = {\n\n        typeInfo: api.typeInfo(type),\n\n        userInfo: api.userInfo(),\n\n        posts: api.posts(type)\n\n    };\n\n    return resolveObject(requests).then(function(data) {\n\n        model.title(data.typeInfo.menu_label);\n\n        model.comments(data.typeInfo.comments);\n\n        var create = false;\n\n        // Finds if the user can create entries.\n\n        if (data.userInfo.type === 'admin') {\n\n            create = true;\n        }\n\n        if (data.typeInfo.grants.indexOf('create') >= 0) {\n\n            create = true;\n        }\n\n        model.create(create);\n\n        data.posts.sort(function(post1, post2) {\n\n            return post2.date_updated - post1.date_updated;\n\n        });\n\n        model.all(data.posts.map(function(postData) {\n\n            return postsItem.create(postData, data.typeInfo, data.userInfo);\n\n        }));\n\n        view.show(template, model);\n\n    });\n};\n",
    "\nvar api = require('../api');\nvar view = require('../view');\nvar user = require('../vm/user');\nvar resolveObject = require('../resolve_object');\n\nvar template = \"<!-- ko with: user -->\\n    <h2 data-bind=\\\"text: fullname\\\"></h2>\\n\\n    <form data-bind=\\\"submit: save\\\" autocomplete=\\\"off\\\">\\n        <div data-bind=\\\"errors: errors.fullname\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-fullname\\\">Full name</label>\\n            <input data-bind=\\\"value: fullname\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-fullname\\\"\\n                placeholder=\\\"Full name\\\">\\n        </div>\\n        <div data-bind=\\\"errors: errors.username\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-username\\\">Username</label>\\n            <input data-bind=\\\"value: username\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-username\\\"\\n                placeholder=\\\"Username\\\">\\n        </div>\\n        <div data-bind=\\\"errors: errors.type\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-type\\\">Type</label>\\n            <select data-bind=\\\"value: type, options: roles,\\n                optionsText: 'label', optionsValue: 'name'\\\"\\n                class=\\\"form-control\\\" id=\\\"user-type\\\"></select>\\n        </div>\\n        <div data-bind=\\\"errors: errors.link\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-link\\\">Link</label>\\n            <input data-bind=\\\"value: link\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-link\\\"\\n                placeholder=\\\"Link\\\">\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n            <label><input data-bind=\\\"checked: password_edit, disable: creating\\\" type=\\\"checkbox\\\">\\n                Edit password</label>\\n        </div>\\n        <div data-bind=\\\"visible: password_edit, errors: errors.password\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-password\\\">New password</label>\\n            <input data-bind=\\\"value: password\\\"\\n                type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"user-password\\\"\\n                placeholder=\\\"Password\\\">\\n            <div class=\\\"checkbox\\\">\\n                <label><input data-bind=\\\"checked: password_text\\\" type=\\\"checkbox\\\">\\n                    Show text</label>\\n            </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save\\n        </button>\\n        <a class=\\\"btn btn-default\\\" href=\\\"#users\\\">\\n            <span class=\\\"glyphicon glyphicon-arrow-left\\\"></span> Cancel\\n        </a>\\n    </form>\\n<!-- /ko -->\\n\";\n\n// Page for editing an user.\n\nexports.create = function(id) {\n\n    var model = {\n\n        user: ko.observable()\n    };\n\n    var requests = { roles: api.roles() };\n\n    if (id) {\n\n        requests.user = api.user(id);\n    }\n\n    return resolveObject(requests).then(function(data) {\n\n        model.user(user.create(data.roles, data.user));\n\n        view.show(template, model);\n\n        if (id) {\n\n            var fullname = document.querySelector('#user-fullname');\n\n            fullname.focus();\n\n            if (typeof fullname.setSelectionRange === 'function') {\n\n                fullname.setSelectionRange(0, fullname.value.length);\n            }\n        }\n    });\n};\n",
    "\nvar api = require('../api');\nvar view = require('../view');\nvar users_item = require('../vm/users_item');\n\nvar template = \"<h2>Users</h2>\\n<!-- ko if: !permission() -->\\n    <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n        You do not have permissions to manage users.\\n    </div>\\n<!-- /ko -->\\n<!-- ko if: permission() -->\\n    <ul data-bind=\\\"foreach: users\\\" class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item post-item\\\">\\n            <h4 data-bind=\\\"click: expand, text: fullname\\\" class=\\\"list-group-item-heading\\\"></h4>\\n            <div class=\\\"list-group-item-text\\\">\\n                Type: <span data-bind=\\\"text: type\\\"></span>,\\n                username: <span data-bind=\\\"text: username\\\"></span>\\n                <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls\\\">\\n                    <a data-bind=\\\"attr: { href: '#user/' + $id }, css: { disabled: !editable }\\\"\\n                        class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit\\n                    </a>\\n                    <a data-bind=\\\"click: remove, css: { disabled: !editable }\\\"\\n                        class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-remove\\\"></span> Remove\\n                    </a>\\n                </div>\\n            </div>\\n        </li>\\n    </ul>\\n    <a class=\\\"btn btn-default\\\" href=\\\"#user/new\\\">\\n        <span class=\\\"glyphicon glyphicon-plus\\\"></span> Add\\n    </a>\\n<!-- /ko -->\\n\";\n\n// Page for displaying the users list.\n\nexports.create = function() {\n\n    var model = {\n\n        users: ko.observableArray([]),\n\n        permission: ko.observable(false)\n    };\n\n    return api.userInfo().then(function(info) {\n\n        if (info.type !== 'admin') {\n\n            view.show(template, model);\n\n        } else {\n\n            return api.users().then(function(users) {\n\n                model.users(users.map(function(data) {\n\n                    var user = users_item.create(data);\n\n                    user.editable = info.type === 'admin' || user.$id === info.$id;\n\n                    return user;\n\n                }));\n\n                model.permission(true);\n\n                view.show(template, model);\n            });\n        }\n    });\n};\n",
    "// Resolves object properties\n// as promises.\n\nmodule.exports = function(obj) {\n\n    var tasks = [], map = [];\n\n    Object.keys(obj).forEach(function(key) {\n\n        tasks.push(obj[key]);\n\n        map.push(key);\n    });\n\n    return Promise.all(tasks).then(function(data) {\n\n        var resolved = {};\n\n        data.forEach(function(value, i) {\n\n            resolved[map[i]] = value;\n        });\n\n        return resolved;\n    });\n};\n",
    "exports.show = function() {\n\n    document.getElementById('spinner').style.display = 'block';\n};\n\nexports.hide = function() {\n\n    document.getElementById('spinner').style.display = 'none';\n};\n",
    "exports.show = kontainer.create('#content');\n",
    "var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// View Model for a comment.\n\nexports.create = function(data, userInfo, entryInfo, typeInfo) {\n\n    var comment = {};\n\n    // Make it expandable.\n\n    expandable.mixin(comment);\n\n    // Copies data attributes.\n\n    assign(comment, data);\n\n    comment.removable = false;\n\n    if (userInfo.type === 'admin') {\n\n        comment.removable = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_any') >= 0) {\n\n        comment.removable = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_own') >= 0) {\n\n        if (entryInfo.author === userInfo.$id) {\n\n            comment.removable = true;\n        }\n    }\n\n    comment.remove = function() {\n\n        if (confirm('Remove the comment?')) {\n\n            api.removeComment(entryInfo.$id, comment.$id).then(function() {\n\n                message.info('The comment has been removed.');\n\n                route.refresh();\n\n            }).catch(message.error);\n        }\n    };\n\n    return comment;\n};\n",
    "// Mixin for expandable view models.\n\nexports.mixin = function(obj) {\n\n    obj.expanded = ko.observable(false);\n\n    obj.expand = function() {\n\n        if (obj.expanded()) {\n\n            obj.expanded(false);\n\n        } else {\n\n            obj.expanded(true);\n        }\n    };\n};\n",
    "var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('../vm/expandable');\n\n// Creates file view model for\n// the files list view.\n\nexports.create = function(slug, data) {\n\n    var file = {};\n\n    // Copies data attributes.\n\n    assign(file, data);\n\n    expandable.mixin(file);\n\n    file.url = ko.pureComputed(function() {\n\n        return '/' + slug + '/' + file.name;\n    });\n\n    return file;\n};\n",
    "var api = require('../api');\nvar message = require('../message');\nvar languages = require('../languages');\nvar files_item = require('./files_item');\n\n// Creates post view model for already\n// existing post or a new post. For new\n// post, data must be unset. The authors\n// argument must contain the list of all\n// users.\n\nexports.create = function(userInfo, type, types, authors, files, data) {\n\n    var post = {\n\n        $id: ko.observable(),\n\n        // List of authors. Used by the\n        // author list dropdown.\n\n        authors: authors,\n\n        // The post title. When this is\n        // the new post then initial slug\n        // is generated by it.\n\n        title: ko.observable('Untitled'),\n\n        // The post slug. Can contain\n        // \"safe\" characters only.\n\n        slug: ko.observable('untitled'),\n\n        // The post description. Can\n        // be left blank.\n\n        description: ko.observable(''),\n\n        // The post content. Can be either\n        // Markdown or raw HTML.\n\n        content: ko.observable(''),\n\n        types: types,\n\n        // The post type. Currently\n        // available types are post,\n        // page and block.\n\n        type: ko.observable(type),\n\n        // Type of the post content.\n        // Will be processed by the\n        // Markdown formatter when set\n        // to 'markdown''\n\n        content_type: ko.observable('markdown'),\n\n        // Flag to set whether the post\n        // is published or not.\n\n        published: ko.observable(false),\n\n        // Flag to set whether commenting\n        // is allowed or not.\n\n        commenting: ko.observable(true),\n\n        // List of tags. Tags are separated\n        // by commas.\n\n        tags: ko.observable(''),\n\n        // The count of comments.\n        // Currently not used.\n\n        comments: ko.observable(0),\n\n        // Selected user. Only admins\n        // can select author other than\n        // themself.\n\n        author: ko.observable(),\n\n        // Publish date as a string in\n        // the format YYYY-MM-DD. Might be\n        // unset when published flag is not set.\n\n        date: ko.observable(''),\n\n        // Update date as a string in\n        // the format YYYY-MM-DD.\n\n        update: ko.observable(''),\n\n        // Validates the post data.\n        // Saves or updates it using the API.\n\n        submit: function() {\n\n            submitPost(post, 'edit');\n        },\n\n        // Similar to submit but leaves\n        // the form.\n\n        save: function() {\n\n            submitPost(post, 'leave');\n        },\n\n        // Similar to submit but opens preview\n        // in another window.\n\n        saveAndPreview: function() {\n\n            submitPost(post, 'preview');\n        },\n\n        // The post language code. See\n        // languages.js for the list of codes.\n\n        language: ko.observable(bcLanguage),\n\n        // List of available languages.\n\n        languages: languages,\n\n        // Indicator for files component.\n\n        slug_changed: ko.observable(false),\n\n        // Only admin can change the type.\n\n        can_change_type: userInfo.type === 'admin',\n\n        // Only admin can change the author.\n\n        can_change_author: userInfo.type === 'admin',\n\n        // Array of entry files.\n\n        files: ko.observableArray(files),\n\n        // Input errors for the errors\n        // binding.\n\n        errors: {\n\n            title: ko.observableArray([]),\n            slug: ko.observableArray([]),\n            content: ko.observableArray([]),\n            date: ko.observableArray([]),\n            update: ko.observableArray([])\n        },\n\n        // Returns the plain data object\n        // to send to the backend.\n\n        toJS: function() {\n\n            var tags = post.tags().trim();\n\n            var date = post.date();\n\n            // date_published will be undefined when\n            // no date has been entered.\n\n            var date_published;\n\n            if (date !== '') {\n\n                date_published = isoDateToUnix(date);\n            }\n\n            var date_updated = isoDateToUnix(post.update());\n\n            return {\n\n                author: post.author(),\n                title: post.title(),\n                slug: post.slug(),\n                description: post.description(),\n                content: post.editor.getValue(),\n                type: post.type(),\n                date_published: date_published,\n                date_updated: date_updated,\n                commenting: post.commenting(),\n                published: post.published(),\n                content_type: post.content_type(),\n                tags: tags === '' ? [] : tags.split(/\\, */),\n                language: post.language()\n            };\n        }\n    };\n\n    var typeInfo;\n\n    types.forEach(function(info) {\n\n        if (info.name === type) {\n\n            typeInfo = info;\n        }\n    });\n\n    if (!typeInfo) {\n\n        throw new Error('Invalid type ' + type);\n    }\n\n    // Use the preview URL pattern from\n    // type info.\n\n    post.preview = typeInfo.preview;\n\n    // Sets the view model values by the\n    // actual data object.\n\n    if (data) {\n\n        // When the publish date is set then\n        // set the date field to formatted string.\n\n        if (typeof data.date_published !== 'undefined') {\n\n            var d = new Date(data.date_published * 1000);\n\n            post.date(d.toISOString().substring(0, 10));\n        }\n\n        post.$id(data.$id);\n        post.author(data.author);\n        post.title(data.title);\n        post.slug(data.slug);\n        post.description(data.description || '');\n        post.content(data.content);\n        post.type(data.type);\n        post.content_type(data.content_type);\n        post.published(data.published);\n        post.commenting(data.commenting);\n        post.tags(data.tags.join(', '));\n        post.comments(data.comments);\n        post.language(data.language);\n\n        // Set up the existing files list.\n\n        files.sort(function(left, right) {\n\n            return left.name === right.name ? 0 : (left.name < right.name ? -1 : 1);\n        });\n\n        post.files(files.map(function(file) {\n\n            return files_item.create(data.slug, file);\n\n        }));\n\n    } else {\n\n        // Only when for new post.\n        // Add automatic slug generation.\n\n        post.title.subscribe(function(value) {\n\n            post.slug(getSlug(value));\n        });\n\n        // Select user as post author.\n\n        post.author(userInfo.$id);\n\n        // Default publish date.\n\n        post.date(new Date().toISOString().substring(0, 10));\n    }\n\n    // Set publishing permission flag.\n\n    post.can_publish = false;\n\n    if (userInfo.type === 'admin') {\n\n        post.can_publish = true;\n    }\n\n    if (typeInfo.grants.indexOf('publish_any') >= 0) {\n\n        post.can_publish = true;\n    }\n\n    if (typeInfo.grants.indexOf('publish_own') >= 0) {\n\n        if (post.author() === userInfo.$id) {\n\n            post.can_publish = true;\n        }\n    }\n\n    // Sets file management flag.\n\n    post.can_manage_files = false;\n\n    if (userInfo.type === 'admin') {\n\n        post.can_manage_files = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_any') >= 0) {\n\n        if (typeInfo.grants.indexOf('files') >= 0) {\n\n            post.can_manage_files = true;\n        }\n    }\n\n    if (typeInfo.grants.indexOf('update_own') >= 0) {\n\n        if (post.author() === userInfo.$id) {\n\n            if (typeInfo.grants.indexOf('files') >= 0) {\n\n                post.can_manage_files = true;\n            }\n        }\n    }\n\n    // Default update date is the current date.\n\n    post.update(new Date().toISOString().substring(0, 10));\n\n    post.published.subscribe(function(value) {\n\n        // Set publish date when post is published.\n        // Applies only when no publish date is set.\n\n        if (value && post.date() === '') {\n\n            post.date(new Date().toISOString().substring(0, 10));\n        }\n    });\n\n    // Indicated that slug has been changed\n    // and file management does not work before\n    // saving.\n\n    post.slug.subscribe(function(value) {\n\n        post.slug_changed(true);\n    });\n\n    // Submits the file upload form and\n    // performs the file upload process.\n\n    post.uploadFile = function() {\n\n        var file = document.getElementById('entry-file').files[0];\n\n        if (!file || !post.$id()) {\n\n            return;\n        }\n\n        api.upload(post.$id(), file).then(function(response) {\n\n            message.info('File \"' + file.name + '\" has been uploaded.');\n\n            post.files.push(files_item.create(post.slug(), { name: file.name }));\n\n            // This resets the file input.\n\n            var wrap = document.getElementById('entry-file-wrap');\n\n            wrap.innerHTML = '';\n            wrap.innerHTML = '<input type=\"file\" id=\"entry-file\" class=\"form-control\" placeholder=\"Your file\">';\n\n        }).catch(message.error);\n    };\n\n    // Removes the file.\n    // Asks confirmation.\n\n    post.removeFile = function(file) {\n\n        if (confirm('Remove the file \"' + file.name + '\"?')) {\n\n            api.removeFile(post.$id(), file.name).then(function() {\n\n                message.info('File \"' + file.name + '\" has been removed.');\n\n                post.files.remove(file);\n\n            }).catch(message.error);\n        }\n    };\n\n    return post;\n};\n\n// Converts ISO8601 date part into\n// an Unix timestamp.\n\nfunction isoDateToUnix(string) {\n\n    var match = string.match(/^(\\d{4})\\-(\\d{2})\\-(\\d{2})$/);\n\n    if (!match) {\n\n        throw new Error('Date does not match pattern: ' + string);\n    }\n\n    var date = new Date();\n\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCFullYear(parseInt(match[1], 10), parseInt(match[2], 10) - 1, parseInt(match[3], 10));\n\n    return Math.floor(date.getTime() / 1000);\n}\n\n// Validates the given post.\n// Adds errors using the validate module.\n\nfunction validatePost(post) {\n\n    if (post.title() === '') {\n\n        post.errors.title.push('Title is not entered.');\n    }\n\n    var slug = post.slug();\n\n    if (slug === '') {\n\n        post.errors.slug.push('Slug is not entered.');\n\n    } else {\n\n        if (!slug.match(/^[a-z0-9\\-_]+$/)) {\n\n            post.errors.slug.push('Use lowercase letters, numbers, hyphen and underscore.');\n        }\n    }\n\n    if (post.content() === '') {\n\n        post.errors.content.push('Content is not entered.');\n    }\n\n    var date = post.date();\n\n    if (date === '') {\n\n        if (post.published()) {\n\n            post.errors.date.push('Publish date is not entered.');\n        }\n\n    } else if (!date.match(/^\\d{4}\\-\\d{2}\\-\\d{2}$/)) {\n\n        post.errors.date.push('Date must be in the YYYY-MM-DD format.');\n    }\n\n    var update = post.update();\n\n    if (update === '') {\n\n        post.errors.update.push('Update date is not entered.');\n\n    } else if (!update.match(/^\\d{4}\\-\\d{2}\\-\\d{2}$/)) {\n\n        post.errors.update.push('Update date must be in the YYYY-MM-DD format.');\n    }\n}\n\n// Handles save and\n// save-with-continue actions.\n\nfunction submitPost(post, action) {\n\n    var form = document.getElementById('post');\n\n    // Clear errors.\n\n    Object.keys(post.errors).forEach(function(key) {\n\n        post.errors[key]([]);\n    });\n\n    validatePost(post);\n\n    var input = form.querySelector(\n        '.has-error input, .has-error textarea, .has-error checkbox');\n\n    if (input) {\n\n        // Open the info section when\n        // it contains errors.\n\n        if (form.querySelector('.bc-info .has-error input,' +\n            ' .bc-info .has-error textarea, .bc-info .has-error checkbox')) {\n\n            post.parent.info(true);\n        }\n\n        input.focus();\n\n        return false;\n    }\n\n    // When post has '$id' property\n    // then it's an existing post.\n\n    if (post.$id()) {\n\n        updatePost(form, post, action);\n\n    } else {\n\n        savePost(form, post, action);\n    }\n}\n\n// Updates the already existing\n// post. Assumes that the post\n// is validated.\n\nfunction updatePost(form, post, action) {\n\n    api.updatePost(post.$id(), post.toJS()).then(function() {\n\n        message.info('The entry \"' + post.title() + '\" has been updated.');\n\n        if (action === 'edit' || action === 'preview') {\n\n            post.slug_changed(false);\n\n            if (action === 'preview') {\n\n                openPreview(post);\n            }\n\n        } else {\n\n            route.go('entries/' + post.type());\n        }\n\n    }).catch(saveError.bind(null, post));\n}\n\n// Saves the new post.\n\nfunction savePost(form, post, action) {\n\n    api.savePost(post.toJS()).then(function(res) {\n\n        message.info('The entry \"' + post.title() + '\" has been saved.');\n\n        // Redirect to post page when we\n        // want to keep editing the post.\n        // Otherwise go back to listing page.\n\n        if (action === 'edit' || action === 'preview') {\n\n            route.go('entry/' + post.type() + '/' + res);\n\n            if (action === 'preview') {\n\n                openPreview(post);\n            }\n\n        } else {\n\n            route.go('entries/' + post.type());\n        }\n\n    }).catch(saveError.bind(null, post));\n}\n\nfunction saveError(post, err) {\n\n    if (err.toString().match(/entry with the same slug exists/)) {\n\n        post.errors.slug.push('Entry with the same slug exists.');\n\n        // Open info section.\n\n        post.parent.info(true);\n\n        document.querySelector('.has-error input').focus();\n\n    } else {\n\n        message.error(err);\n    }\n}\n\n// Opens the preview window/tab for the post.\n\nfunction openPreview(post) {\n\n    var url = post.preview.replace(/<slug>/g, post.slug());\n\n    var opened = window.open(url, 'entry-' + post.slug());\n\n    if (opened) {\n\n        // Could have been blocked by a\n        // popup blocker.\n\n        opened.focus();\n    }\n}\n",
    "var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// Creates posts view model for\n// the users list view.\n\nexports.create = function(data, typeInfo, userInfo) {\n\n    var post = {};\n\n    // Make it expandable.\n\n    expandable.mixin(post);\n\n    // Copies data attributes.\n\n    assign(post, data);\n\n    post.removable = false;\n\n    // Find if the entry can be removed.\n\n    if (userInfo.type === 'admin') {\n\n        post.removable = true;\n\n    }\n\n    if (typeInfo.grants.indexOf('remove_any') >= 0) {\n\n        post.removable = true;\n\n    }\n\n    if (typeInfo.grants.indexOf('remove_own') >= 0) {\n\n        if (userInfo.$id === post.author) {\n\n            post.removable = true;\n        }\n    }\n\n    post.editable = false;\n\n    if (userInfo.type === 'admin') {\n\n        post.editable = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_any') >= 0) {\n\n        post.editable = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_own') >= 0) {\n\n        if (userInfo.$id === post.author) {\n\n            post.editable = true;\n        }\n    }\n\n    post.editLink = '#entry/' + typeInfo.name + '/' + post.$id;\n\n    post.commentsLink = '#comments/' + typeInfo.name + '/' + post.$id;\n\n    // Removes the post.\n    // Asks confirmation.\n\n    post.remove = function() {\n\n        if (confirm('Remove the post \"' + post.title + '\"?')) {\n\n            api.removePost(post.$id).then(function() {\n\n                message.info('The post \"' + post.title + '\" has been removed.');\n\n                route.refresh();\n\n            }).catch(message.error);\n        }\n    };\n\n    return post;\n};\n",
    "var api = require('../api');\nvar message = require('../message');\n\nexports.create = function(roles, data) {\n\n    var user = {\n\n        username: ko.observable(''),\n        fullname: ko.observable(''),\n        type: ko.observable('author'),\n        link: ko.observable(''),\n        password: ko.observable(''),\n        password_edit: ko.observable(true),\n        password_text: ko.observable(false),\n        error: ko.observable(''),\n        creating: true,\n        roles: roles,\n\n        errors: {\n\n            username: ko.observableArray([]),\n            fullname: ko.observableArray([]),\n            password: ko.observableArray([]),\n            link: ko.observableArray([]),\n            type: ko.observableArray([])\n        },\n\n        save: function(form) {\n\n            // Clear errors.\n\n            Object.keys(user.errors).forEach(function(key) {\n\n                user.errors[key]([]);\n            });\n\n            if (user.password_edit()) {\n\n                var password = user.password();\n\n                if (password === '') {\n\n                    user.errors.password.push('Password is not set.');\n\n                } else if (password.length < 6) {\n\n                    user.errors.password.push('Password length must be at least 6.');\n                }\n            }\n\n            var username = user.username();\n\n            if (username === '') {\n\n                user.errors.username.push('Username is not set.');\n\n            } else {\n\n                if (!username.match(/^[^@]+@[^@]+$/)) {\n\n                    user.errors.username.push('Username must be an email address.');\n                }\n            }\n\n            var fullname = user.fullname();\n\n            if (fullname === '') {\n\n                user.errors.fullname.push('Full name is not set.');\n            }\n\n            var link = user.link();\n\n            if (link !== '') {\n\n                if (!link.match(/https?:\\/\\//)) {\n\n                    user.errors.link.push('Link must start with http:// or https:// prefix.');\n                }\n            }\n\n            var input = form.querySelector(\n                '.has-error input, .has-error textarea,' +\n                ' .has-error checkbox, .has-error select');\n\n            if (input) {\n\n                input.focus();\n\n                return false;\n            }\n\n            if (user.$id) {\n\n                api.updateUser(user.$id, user.toJS()).then(function() {\n\n                    message.info('User \"' + user.username() + '\" has been updated.');\n\n                    route.go('users');\n\n                }).catch(handleSaveError.bind(null, user));\n\n            } else {\n\n                api.saveUser(user.toJS()).then(function() {\n\n                    message.info('User \"' + user.username() + '\" has been added.');\n\n                    route.go('users');\n\n                }).catch(handleSaveError.bind(null, user));\n            }\n\n            return false;\n        },\n\n        toJS: function() {\n\n            var js = {\n\n                username: user.username(),\n                fullname: user.fullname(),\n                type: user.type(),\n                link: user.link()\n            };\n\n            if (user.password_edit()) {\n\n                js.password = user.password();\n            }\n\n            return js;\n        }\n    };\n\n    user.password_text.subscribe(function(value) {\n\n        if (value) {\n\n            document.getElementById('user-password').type = 'text';\n\n        } else {\n\n            document.getElementById('user-password').type = 'password';\n        }\n    });\n\n    if (data) {\n\n        user.$id = data.$id;\n        user.creating = false;\n        user.username(data.username);\n        user.fullname(data.fullname);\n        user.type(data.type);\n        user.link(data.link);\n        user.password_edit(false);\n\n    } else {\n\n        user.fullname('Unnamed');\n    }\n\n    return user;\n};\n\nfunction handleSaveError(user, err) {\n\n    var string = err.toString();\n\n    if (string.match(/Cannot remove the last admin/)) {\n\n        user.errors.type.push('Cannot remove the last admin.');\n\n    } else if (string.match(/username exists/)) {\n\n        user.errors.username.push('The username exists.');\n\n    } else {\n\n        message.error(err);\n    }\n}\n",
    "var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// Creates user view model for\n// the users list view.\n\nexports.create = function(data) {\n\n    var user = {\n\n        editable: false\n    };\n\n    // Make it expandable.\n\n    expandable.mixin(user);\n\n    // Copies data attributes.\n\n    assign(user, data);\n\n    // Removes the user.\n    // Asks confirmation.\n\n    user.remove = function() {\n\n        if (confirm('Remove the user?')) {\n\n            api.removeUser(user.$id).then(function() {\n\n                message.info('User \"' + user.username + '\" has been removed.');\n\n                route.refresh();\n\n            }).catch(message.error);\n        }\n    };\n\n    return user;\n};\n"
  ]
}