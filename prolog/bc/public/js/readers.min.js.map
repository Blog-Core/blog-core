{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./analytics/readers.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","startTimestamp","Date","now","pageviewId","document","cookie","match","cb","userId","postJSON","url","data","XMLHttpRequest","JSON","xmlhttp","open","setRequestHeader","send","stringify","onreadystatechange","readyState","status","parse","responseText","doWithSession","sessionId","user_id","agent","navigator","userAgent","platform","response","reportPageviewLoop","timeout","elapsed","Math","floor","pageview_id","session_id","location","window","toString","referrer","entry_id","bcEntryId","title","doWithPageview","setTimeout","expires","setFullYear","getFullYear","toUTCString"],"mappings":"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","file":"readers.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","(() => {\n    const startTimestamp = Date.now();\n    let pageviewId = null;\n\n    // Helper to check whether the current visitor is the\n    // blog administrator.\n    const isAdmin = () => {\n        return document.cookie.match(/blog_core_admin\\s*=\\s*1/);\n    };\n\n    // Don't run the remainder of the script for the admin.\n    if (isAdmin()) {\n        return;\n    }\n\n    // Reads the previously stored user id.\n    const readUserId = () => {\n        const match = document.cookie.match(/readers_user\\s*=\\s*([a-z0-9\\-]+)/);\n        return match ? match[1] : null;\n    };\n\n    // User ids use permanent cookies.\n    const writeUserId = (userId) => {\n        const expires = new Date();\n        expires.setFullYear(expires.getFullYear() + 1);\n        document.cookie = 'readers_user=' + userId + '; path=/; expires=' + expires.toUTCString();\n    };\n\n    const readSessionId = () => {\n        const match = document.cookie.match(/readers_session\\s*=\\s*([a-z0-9\\-]+)/);\n        return match ? match[1] : null;\n    };\n\n    const writeSessionId = (sessionId) => {\n        document.cookie = 'readers_session=' + sessionId + '; path=/';\n    };\n\n    // Helper to run HTTP POST request to the backend.\n    const postJSON = (url, data, cb) => {\n        const supported = typeof XMLHttpRequest !== 'undefined' &&\n            typeof JSON !== 'undefined';\n        if (supported) {\n            const xmlhttp = new XMLHttpRequest();\n            xmlhttp.open('POST', url);\n            xmlhttp.setRequestHeader('Content-Type', 'application/json');\n            xmlhttp.send(JSON.stringify(data));\n            xmlhttp.onreadystatechange = () => {\n                if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {\n                    cb(JSON.parse(xmlhttp.responseText));\n                }\n            };\n        }\n    };\n\n    // Tries to use either the stored user id\n    // or generates a new one on the server.\n    const doWithUser = (cb) => {\n        const userId = readUserId();\n        if (userId) {\n            // Use the stored user id.\n            cb(userId);\n        } else {\n            // Record the new user.\n            postJSON('/api/readers/user', {}, (response) => {\n                if (response.status === 'success') {\n                    const userId = response.data;\n                    // Remember for later.\n                    writeUserId(userId);\n                    // Use the generated user id.\n                    cb(userId);\n                }\n            });\n        }\n    };\n\n    // Tries to use either the stored session id\n    // or generates a new one on the server.\n    const doWithSession = (userId, cb) => {\n        const sessionId = readSessionId();\n        if (sessionId) {\n            // Use the stored session id.\n            cb(userId, sessionId);\n        } else {\n            // Record the new session.\n            const data = {\n                user_id: userId,\n                agent: navigator.userAgent || null,\n                platform: navigator.platform || null\n            };\n            postJSON('/api/readers/session', data, (response) => {\n                if (response.status === 'success') {\n                    const sessionId = response.data;\n                    // Remember for later.\n                    writeSessionId(sessionId);\n                    // Use the generated id.\n                    cb(userId, sessionId);\n                }\n            });\n        }\n    };\n\n    // Starts reporting the current page.\n    const doWithPageview = (userId, sessionId, cb) => {\n        const elapsed = Math.floor((Date.now() - startTimestamp) / 1000);\n        if (pageviewId) {\n            // Repeated pageview. Just send elapsed time.\n            const data = {\n                pageview_id: pageviewId,\n                elapsed: elapsed\n            }\n            postJSON('/api/readers/pageview_extend', data, (response) => {\n                if (response.status === 'success') {\n                    cb(userId, sessionId);\n                }\n            });\n        } else {\n            const data = {\n                session_id: sessionId,\n                location: window.location.toString(),\n                referrer: document.referrer || null,\n                elapsed: elapsed,\n                entry_id: window.bcEntryId || null,\n                title: document.title\n            };\n            // First pageview record.\n            postJSON('/api/readers/pageview', data, (response) => {\n                if (response.status === 'success') {\n                    // Update the current pageview id.\n                    pageviewId = response.data;\n                    cb(userId, sessionId);\n                }\n            });\n        }\n    };\n\n    // Reports the current page periodically with\n    // exponential interval.\n    const reportPageviewLoop = (userId, sessionId, timeout) => {\n        doWithPageview(sessionId, sessionId, () =>\n            setTimeout(() =>\n                reportPageviewLoop(userId, sessionId, 2 * timeout), timeout));\n    };\n\n    doWithUser((userId) => {\n        doWithSession(userId, (userId, sessionId) => {\n            reportPageviewLoop(userId, sessionId, 1000);\n        });\n    });    \n})();\n"],"sourceRoot":""}