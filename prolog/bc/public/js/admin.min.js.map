{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./admin/lib/api.js","webpack:///./admin/lib/message.js","webpack:///./admin/lib/view.js","webpack:///./admin/lib/resolve_object.js","webpack:///./admin/lib/assign.js","webpack:///./admin/lib/vm/expandable.js","webpack:///./admin/admin.js","webpack:///./admin/lib/spinner.js","webpack:///./admin/lib/pages/login.js","webpack:///./admin/lib/pages/login.html","webpack:///./admin/lib/pages/posts.js","webpack:///./admin/lib/vm/posts_item.js","webpack:///./admin/lib/pages/posts.html","webpack:///./admin/lib/pages/post.js","webpack:///./admin/lib/vm/post.js","webpack:///./admin/lib/languages.js","webpack:///./admin/lib/vm/files_item.js","webpack:///./admin/lib/editor.js","webpack:///./admin/lib/preview.js","webpack:///./admin/lib/pages/post.html","webpack:///./admin/lib/pages/users.js","webpack:///./admin/lib/vm/users_item.js","webpack:///./admin/lib/pages/users.html","webpack:///./admin/lib/pages/user.js","webpack:///./admin/lib/vm/user.js","webpack:///./admin/lib/pages/user.html","webpack:///./admin/lib/pages/email.js","webpack:///./admin/lib/pages/email.html","webpack:///./admin/lib/pages/comments.js","webpack:///./admin/lib/vm/comments_item.js","webpack:///./admin/lib/pages/comments.html","webpack:///./admin/lib/pages/trash.js","webpack:///./admin/lib/vm/trash_item.js","webpack:///./admin/lib/pages/trash.html","webpack:///./admin/lib/pages/config.js","webpack:///./admin/lib/pages/config.html","webpack:///./admin/lib/form_error.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","spinner","require","showCount","spinnerShow","show","spinnerHide","hide","fetchGet","url","fetch","headers","Accept","X-Key","apiKey","catch","err","then","handleResponse","fetchDelete","method","fetchPost","data","noauth","Content-Type","body","JSON","stringify","fetchUpdate","response","json","status","Error","message","jsendMessage","upload","id","file","X-File-Name","fetchUploadFile","encodeURIComponent","login","username","password","posts","type","post","entryInfo","comments","removeComment","entryId","updatePost","savePost","removePost","files","removeFile","users","user","userInfo","updateUser","saveUser","removeUser","types","typeInfo","roles","trash","removeFromTrash","purge","restore","config","updateConfig","array","testMail","settings","tags","imageSize","actions","execute","action","hasKey","sessionStorage","getItem","localStorage","info","text","messages","document","getElementById","createElement","className","innerHTML","appendChild","setTimeout","removeChild","error","button","toString","addEventListener","console","stack","kontainer","obj","tasks","map","keys","forEach","push","Promise","all","resolved","to","from","mixin","expanded","ko","observable","expand","api","email","window","formatDate","ts","Date","toISOString","substring","recovered","menu","active","load","resolve","authenticated","route","go","recovery","autosave","parse","removeItem","confirm","title","applyBindings","$id","undefined","location","length","e","target","href","match","stopPropagation","preventDefault","style","display","view","template","model","remember","errors","observableArray","form","input","querySelector","focus","res","setItem","postsItem","resolveObject","count","step","loaded","tag","filtered","pureComputed","entry","tagMatch","indexOf","statusMatch","published","hasMore","showMore","scrollTo","scrollHeight","showAll","slice","requests","menu_label","grants","label","sort","t1","t2","post1","post2","date_updated","postData","assign","expandable","removable","author","editable","editLink","commentsLink","remove","refresh","editor","preview","authors","fullname","modified","hasPreview","previewNotice","actionNotice","softWrap","help","fontSize","toggleInfo","toggleFiles","toggleSettings","toggleHelp","previewUrl","slug","replace","callback","submitUpdate","leave","saveHandler","keyCode","navigator","platform","metaKey","ctrlKey","submit","beforeUnload","event","returnValue","icon","textLabel","toUpperCase","toJS","autosaveTimer","setInterval","clearAutosave","dispose","removeEventListener","clearTimeout","enable","setSoftWrap","parseInt","setFontSize","subscribe","begin","content","setSelectionRange","change","parent","datalist","firstChild","options","lwMatch","prefix","last","option","elem","languages","files_item","isoDateToUnix","string","date","setUTCHours","setUTCFullYear","Math","floor","getTime","submitPost","update","validatePost","slug_changed","saveError","description","content_type","commenting","save","language","bcLanguage","can_change_type","can_change_author","date_published","trim","split","fromJS","join","left","right","getSlug","can_publish","can_manage_files","uploadFile","wrap","insertImage","size","insert","width","height","insertLink","changeCallback","code","image","ace","edit","$blockScrolling","Infinity","container","lineHeight","setOptions","maxLines","showLineNumbers","showPrintMargin","showFoldWidgets","showGutter","displayIndentGuides","fontFamily","useSoftTabs","tabSize","setTheme","getSession","setMode","setWrapLimitRange","setOption","setValue","setUndoManager","UndoManager","gotoLine","on","getValue","destroy","editorScrollTop","viewScrollTop","holder","cb","iframe","contentWindow","reload","src","scrollTop","main","controls","resize","contentDocument","clientHeight","users_item","permission","handleSaveError","link","password_edit","password_text","creating","comment_notifications","js","toSmtp","smtp","editing","enabled","host","auth","security","subject","clearErrors","validateParams","checkError","toList","test","validateTest","cancel","smtp_enabled","smtp_host","smtp_user","smtp_password","smtp_auth","smtp_security","smtp_from","extract","toForm","comments_item","flatten","flat","flattenRec","list","depth","comment","replies","trash_item","items","item","site","toConfig","setErrors","element","valueAccessor","unwrap","span","parentNode","bindingHandlers","init","allBindings"],"mappings":"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","file":"admin.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","var spinner = require('./spinner');\n\nvar showCount = 0;\n\nfunction spinnerShow() {\n    if (showCount === 0) {\n        spinner.show();\n    }\n    showCount += 1;\n}\n\nfunction spinnerHide() {\n    showCount -= 1;\n    if (showCount === 0) {\n        spinner.hide();\n    }\n}\n\nfunction fetchGet(url) {\n    spinnerShow();\n    return fetch(url, {\n        headers: {\n            'Accept': 'application/json',\n            'X-Key': apiKey()\n        }\n    }).catch(function(err) {\n        spinnerHide();\n        throw err;\n    }).then(handleResponse);\n}\n\nfunction fetchDelete(url) {\n    spinnerShow();\n    return fetch(url, {\n        method: 'DELETE',\n        headers: {\n            'Accept': 'application/json',\n            'X-Key': apiKey()\n        }\n    }).catch(function(err) {\n        spinnerHide();\n        throw err;\n    }).then(handleResponse);\n}\n\nfunction fetchPost(url, data, noauth) {\n    spinnerShow();\n    var headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    };\n    if (!noauth) {\n        headers['X-Key'] = apiKey();\n    }\n    return fetch(url, {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(data)\n    }).catch(function(err) {\n        spinnerHide();\n        throw err;\n    }).then(handleResponse);\n}\n\nfunction fetchUpdate(url, data) {\n    spinnerShow();\n    return fetch(url, {\n        method: 'PUT',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-Key': apiKey()\n        },\n        body: JSON.stringify(data)\n    }).catch(function(err) {\n        spinnerHide();\n        throw err;\n    }).then(handleResponse);\n}\n\nfunction fetchUploadFile(url, file) {\n    spinnerShow();\n    return fetch(url, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/octet-stream',\n            'X-Key': apiKey(),\n            'X-File-Name': file.name\n        },\n        body: file\n    }).catch(function(err) {\n        spinnerHide();\n        throw err;\n    }).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    spinnerHide();\n    return response.json().then(function(json) {\n        if (json.status === 'success') {\n            return json.data;\n        } else {\n            var err = new Error('API response is not success: ' + json.message);\n            err.jsendMessage = json.message;\n            throw err;\n        }\n    });\n}\n\n// Uploads entry file.\nexports.upload = function(id, file) {\n    return fetchUploadFile('/api/upload/' + encodeURIComponent(id), file);\n};\n\n// Login with credentials.\nexports.login = function(username, password) {\n    return fetchPost('/api/auth', {\n        username: username, password: password }, true);\n};\n\n// List of entries.\nexports.posts = function(type) {\n    return fetchGet('/api/entries/' + encodeURIComponent(type));\n};\n\n// The given entry.\nexports.post = function(id) {\n    return fetchGet('/api/entry/' + encodeURIComponent(id));\n};\n\n// The entry info.\nexports.entryInfo = function(id) {\n    return fetchGet('/api/entry/' + encodeURIComponent(id) + '/info');\n};\n\n// Retrieves the given entry comments.\nexports.comments = function(id) {\n    return fetchGet('/api/post/' + encodeURIComponent(id) + '/comments');\n};\n\n// Removes the given comment.\nexports.removeComment = function(entryId, id) {\n    return fetchDelete('/api/comment/' + encodeURIComponent(entryId) +\n            '/' + encodeURIComponent(id));\n};\n\n// Updates the given post.\nexports.updatePost = function(id, data) {\n    return fetchUpdate('/api/entry/' + encodeURIComponent(id), data);\n};\n\n// Saves the given post.\nexports.savePost = function(data) {\n    return fetchPost('/api/entry', data);\n};\n\n// Removes the given post.\nexports.removePost = function(id) {\n    return fetchDelete('/api/entry/' + encodeURIComponent(id));\n};\n\n// Finds entry files.\nexports.files = function(entryId) {\n    return fetchGet('/api/files/' + encodeURIComponent(entryId));\n};\n\n// Removes the given entry file.\nexports.removeFile = function(entryId, file) {\n    return fetchDelete('/api/file/' + encodeURIComponent(entryId) +\n            '/' + encodeURIComponent(file));\n};\n\n// Retrieves all users.\nexports.users = function() {\n    return fetchGet('/api/users');\n};\n\n// Retrieves the given user.\nexports.user = function(id) {\n    return fetchGet('/api/user/' + encodeURIComponent(id));\n};\n\n// Retrieves the current user info.\nexports.userInfo = function() {\n    return fetchGet('/api/user/info');\n};\n\n// Updates the given user.\nexports.updateUser = function(id, data) {\n    return fetchUpdate('/api/user/' + encodeURIComponent(id), data);\n};\n\n// Saves the new user.\nexports.saveUser = function(data) {\n    return fetchPost('/api/user', data);\n};\n\n// Removes the given user.\nexports.removeUser = function(id) {\n    return fetchDelete('/api/user/' + encodeURIComponent(id));\n};\n\n// Finds entry types.\nexports.types = function() {\n    return fetchGet('/api/types');\n};\n\n// Finds entry type info.\nexports.typeInfo = function(type) {\n    return fetchGet('/api/type/' + encodeURIComponent(type));\n};\n\n// Finds user roles.\nexports.roles = function() {\n    return fetchGet('/api/roles');\n};\n\n// Finds trash items.\nexports.trash = function() {\n    return fetchGet('/api/trash');\n};\n\n// Removes the given entry from trash.\nexports.removeFromTrash = function(id) {\n    return fetchDelete('/api/trash/' + encodeURIComponent(id));\n};\n\n// Purges the whole trash.\nexports.purge = function() {\n    return fetchDelete('/api/trash');\n};\n\n// Restores item in trash.\nexports.restore = function(id) {\n    return fetchUpdate('/api/restore/' + encodeURIComponent(id));\n};\n\n// Finds configuration entries.\nexports.config = function() {\n    return fetchGet('/api/configs');\n};\n\n// Updates configuration entries.\n// Takes array of objects with name and\n// value properties.\nexports.updateConfig = function(array) {\n    return fetchUpdate('/api/configs', array);\n};\n\n// Tests the given mail settings.\nexports.testMail = function(settings) {\n    return fetchPost('/api/mail/test', settings);\n};\n\n// List of all tags for the type.\nexports.tags = function(type) {\n    return fetchGet('/api/tags/' + encodeURIComponent(type) + '/all');\n};\n\n// Retrieves image size for the file.\nexports.imageSize = function(entryId, file) {\n    return fetchGet('/api/image/size/' + encodeURIComponent(entryId) +\n        '/' + encodeURIComponent(file));\n};\n\n// Actions associated with the post.\nexports.actions = function(id) {\n    return fetchGet('/api/actions/' + encodeURIComponent(id));\n};\n\nexports.execute = function(id, action) {\n    var url = '/api/action/' + encodeURIComponent(id) + '/' +\n        encodeURIComponent(action);\n    return fetchUpdate(url);\n};\n\n// Checks whether the API key has been set.\nexports.hasKey = function() {\n    return !!(sessionStorage.getItem('api-key') ||\n        localStorage.getItem('api-key'));\n};\n\nvar apiKey = exports.apiKey = function() {\n    var key = sessionStorage.getItem('api-key') ||\n        localStorage.getItem('api-key');\n    if (!key) {\n        throw new Error('API key is not set');\n    }\n    return key;\n};\n","// Shows informational message.\nexports.info = function(text) {\n    var messages = document.getElementById('messages');\n    var message = document.createElement('div');\n    message.className = 'alert alert-success message';\n    message.innerHTML = text;\n    messages.appendChild(message);\n    setTimeout(function() {\n        messages.removeChild(message);\n    }, 2000);\n};\n\n// Shows error message.\nexports.error = function(err) {\n    var button = document.createElement('button');\n    button.className = 'close';\n    button.innerHTML = '&times;';\n    var text = document.createElement('span');\n    text.innerHTML = err.toString();\n    var messages = document.getElementById('messages');\n    var message = document.createElement('div');\n    message.className = 'alert alert-danger message';\n    message.appendChild(button);\n    message.appendChild(text);\n    button.addEventListener('click', function() {\n        messages.removeChild(message);\n    }, false);\n    messages.appendChild(message);\n    if (err instanceof Error) {\n        console.error(err.stack);\n    }\n};\n","exports.show = kontainer.create('#content');\n","// Resolves object properties\n// as promises.\nmodule.exports = function(obj) {\n    var tasks = [], map = [];\n    Object.keys(obj).forEach(function(key) {\n        tasks.push(obj[key]);\n        map.push(key);\n    });\n    return Promise.all(tasks).then(function(data) {\n        var resolved = {};\n        data.forEach(function(value, i) {\n            resolved[map[i]] = value;\n        });\n        return resolved;\n    });\n};\n","// Copies properties from one object to another.\nmodule.exports = function(to, from) {\n    Object.keys(from).forEach(function(key) {\n        to[key] = from[key];\n    });\n};\n","// Mixin for expandable view models.\nexports.mixin = function(obj) {\n    obj.expanded = ko.observable(false);\n    obj.expand = function() {\n        if (obj.expanded()) {\n            obj.expanded(false);\n        } else {\n            obj.expanded(true);\n        }\n    };\n};\n","var api = require('./lib/api');\nvar message = require('./lib/message');\nvar login = require('./lib/pages/login');\nvar posts = require('./lib/pages/posts');\nvar post = require('./lib/pages/post');\nvar users = require('./lib/pages/users');\nvar user = require('./lib/pages/user');\nvar email = require('./lib/pages/email');\nvar comments = require('./lib/pages/comments');\nvar trash = require('./lib/pages/trash');\nvar config = require('./lib/pages/config');\n\n// Errors binding.\nrequire('./lib/form_error');\n\n// Global to format dates.\nwindow.formatDate = function(ts) {\n    return new Date(1000 * ts).toISOString().substring(0, 10);\n};\n\n// The page menu.\nvar menu = {\n    active: ko.observable(),\n    types: ko.observable(),\n    load: function() {\n        if (menu.types()) {\n            // Menu updated.\n            return Promise.resolve(menu.types());\n        }\n\n        return api.types().then(function(types) {\n            menu.types(types);\n            return types;\n        });\n    }\n};\n\n// Binds menu.\nko.applyBindings(menu,\n    document.getElementById('menu'));\n\n// Returns true when user is authenticated.\n// Redirects user if he/she is not\n// authenticated.\nfunction authenticated() {\n    if (api.hasKey()) {\n        // If user is authenticated then\n        // check if custom menu entries need\n        // reloading.\n        menu.load().catch(message.error);\n        return true;\n    } else {\n        route.go('login');\n    }\n    return false;\n}\n\nvar recovered;\n\n// Offers recovery option and returns\n// true when user accepts it.\nfunction recovery() {\n    // Offer recover option to the user.\n    var autosave = localStorage.getItem('autosave');\n    if (autosave) {\n        var data = JSON.parse(autosave);\n        // Remove entry from localStorage.\n        localStorage.removeItem('autosave');\n        // Ask confirmation.\n        if (confirm('You have unsaved entry \"' + data.title + '\",' +\n            ' would you like to recover it?')) {\n            // Assign global data that is used for\n            // actual recovery.\n            recovered = data;\n            // Redirect to transient route.\n            route.go('recover');\n            return true;\n        }\n    }\n    return false;\n}\n\n// Transient route for recovering\n// an entry.\nroute(/^recover$/, function() {\n    if (authenticated() && !recovery()) {\n        if (recovered) {\n            if (recovered.$id) {\n                // Recover existing post.\n                route.go('entry/' + recovered.type +\n                    '/' + recovered.$id);\n            } else {\n                // Recover new post.\n                route.go('new/' + recovered.type);\n            }\n        } else {\n            route.go('landing');\n        }\n    }\n});\n\nroute(/^config$/, function() {\n    if (authenticated() && !recovery()) {\n        menu.active('config');\n        config.create().catch(message.error);\n    }\n});\n\nroute(/^entries\\/([^\\/]+)/, function(type) {\n    if (authenticated() && !recovery()) {\n        menu.active(type);\n        posts.create(type).catch(message.error);\n    }\n});\n\nroute(/^entry\\/([^\\/]+)\\/([^\\/]+)/, function(type, id) {\n    if (authenticated() && !recovery()) {\n        menu.active(type);\n        // Include recovery data (can be undefined).\n        post.create(type, id, recovered).catch(message.error);\n        recovered = undefined;\n    }\n});\n\nroute(/^new\\/([^\\/]+)/, function(type) {\n    if (authenticated() && !recovery()) {\n        menu.active(type);\n        // Include recovery data (can be undefined).\n        post.create(type, null, recovered).catch(message.error);\n        recovered = undefined;\n    }\n});\n\nroute(/^comments\\/([^\\/]+)\\/([^\\/]+)/, function(type, id) {\n    if (authenticated() && !recovery()) {\n        menu.active(type);\n        comments.create(type, id).catch(message.error);\n    }\n});\n\nroute(/^trash/, function() {\n    if (authenticated() && !recovery()) {\n        menu.active('trash');\n        trash.create().catch(message.error);\n    }\n});\n\nroute(/^users/, function() {\n    if (authenticated() && !recovery()) {\n        menu.active('users');\n        users.create().catch(message.error);\n    }\n});\n\nroute(/^user\\/new/, function() {\n    if (authenticated() && !recovery()) {\n        menu.active('users');\n        user.create().catch(message.error);\n    }\n});\n\nroute(/^user\\/([^\\/]+)/, function(id) {\n    if (authenticated() && !recovery()) {\n        menu.active('users');\n        user.create(id).catch(message.error);\n    }\n});\n\nroute(/^login/, function() {\n    menu.active(null);\n    login.create().catch(message.error);\n});\n\nroute(/^email/, function() {\n    if (authenticated() && !recovery()) {\n        menu.active('email');\n        email.create().catch(message.error);\n    }\n});\n\nroute(/^logout/, function() {\n    sessionStorage.removeItem('api-key');\n    localStorage.removeItem('api-key');\n    window.location = '/admin';\n});\n\n// Temporary route that decides\n// where to go.\nroute(/^landing/, function() {\n    menu.active(null);\n    menu.load().then(function(types) {\n        if (types.length > 0) {\n            // Select first type.\n            route.go('entries/' + types[0].name);\n        }\n    }).catch(message.error);\n});\n\nroute(/.*/, function() {\n    route.go(api.hasKey() ? 'landing' : 'login');\n});\n\ndocument.body.addEventListener('click', function(e) {\n    if (e.target.href && e.target.href.match(/#logout$/)) {\n        if (confirm('Do you want to log out?')) {\n            return true;\n        } else {\n            e.stopPropagation();\n            e.preventDefault();\n            return false;\n        }\n    }\n}, false);\n","exports.show = function() {\n    document.getElementById('spinner').style.display = 'block';\n};\n\nexports.hide = function() {\n    document.getElementById('spinner').style.display = 'none';\n};\n","var api = require('../api');\nvar view = require('../view');\nvar message = require('../message');\nvar template = require('./login.html');\n\n// The login page.\nexports.create = function() {\n\n    var model = {\n        username: ko.observable(''),\n        password: ko.observable(''),\n        remember: ko.observable(false),\n        errors: {\n            username: ko.observableArray([]),\n            password: ko.observableArray([])\n        }\n    };\n\n    model.login = function(form) {\n        // Clear errors.\n        Object.keys(model.errors).forEach(function(key) {\n            model.errors[key]([]);\n        });\n        var username = model.username();\n        var password = model.password();\n        if (username === '') {\n            model.errors.username.push('Username is not entered.');\n        } else if (!username.match(/^[^@]+@[^@]+$/)) {\n            model.errors.username.push('Username must be an email.');\n        }\n        if (password === '') {\n            model.errors.password.push('Password is not entered.');\n        }\n        var input = form.querySelector(\n            '.has-error input, .has-error textarea, .has-error checkbox');\n        if (input) {\n            input.focus();\n            return false;\n        }\n        api.login(username, password).then(function(res) {\n            if (model.remember()) {\n                localStorage.setItem('api-key', res.key);\n                sessionStorage.removeItem('api-key');\n            } else {\n                sessionStorage.setItem('api-key', res.key);\n                localStorage.removeItem('api-key');\n            }\n            route.go('landing');\n        }).catch(function(err) {\n            if (err.toString().match(/Invalid auth credentials/)) {\n                model.errors.username.push('Invalid auth credentials.');\n                model.errors.password.push('Invalid auth credentials.');\n            } else {\n                message.error(err);\n            }\n        });\n    };\n\n    view.show(template, model);\n    return Promise.resolve();\n};\n","module.exports = \"<h2>Login</h2>\\n\\n<form data-bind=\\\"submit: login\\\">\\n    <div data-bind=\\\"errors: errors.username\\\" class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"username\\\">Username</label>\\n        <input data-bind=\\\"textInput: username\\\"\\n            type=\\\"text\\\" name=\\\"username\\\" title=\\\"Username\\\"\\n            placeholder=\\\"Username\\\" class=\\\"form-control\\\" id=\\\"username\\\">\\n    </div>\\n    <div data-bind=\\\"errors: errors.password\\\" class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"password\\\">Password</label>\\n        <input data-bind=\\\"textInput: password\\\"\\n            type=\\\"password\\\" name=\\\"password\\\" title=\\\"Password\\\"\\n            placeholder=\\\"Password\\\" class=\\\"form-control\\\" id=\\\"password\\\">\\n    </div>\\n    <div class=\\\"checkbox\\\">\\n        <label><input data-bind=\\\"checked: remember\\\" type=\\\"checkbox\\\"\\n            name=\\\"remember\\\" id=\\\"remember\\\">\\n            Remember me</label>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n        <span class=\\\"glyphicon glyphicon-log-in\\\"></span> Login</button>\\n</form>\\n\"","var api = require('../api');\nvar view = require('../view');\nvar postsItem = require('../vm/posts_item');\nvar resolveObject = require('../resolve_object');\nvar template = require('./posts.html');\n\n// Page for displaying a post list.\nexports.create = function(type) {\n\n    var model = {\n        type: type,\n        all: ko.observable([]),\n        count: ko.observable(10),\n        step: ko.observable(10),\n        comments: ko.observable(false),\n        create: ko.observable(false),\n        title: ko.observable(),\n        loaded: ko.observable(false),\n        tags: ko.observable([]),\n        tag: ko.observable(),\n        status: ko.observable('all')\n    };\n\n    // List of filtered posts.\n    model.filtered = ko.pureComputed(function() {\n        var tag = model.tag();\n        var status = model.status();\n        var filtered = [];\n        model.all().forEach(function(entry) {\n            var tagMatch = !tag || entry.tags.indexOf(tag) > -1;\n            var statusMatch = status === 'all' || (\n                status === 'published' && entry.published) || (\n                status === 'unpublished' && !entry.published);\n            if (tagMatch && statusMatch) {\n                filtered.push(entry);\n            }\n        });\n        return filtered;\n    });\n\n    // Shows whether there are more\n    // pager pages.\n    model.hasMore = ko.pureComputed(function() {\n        return model.count() < model.filtered().length;\n    });\n\n    // Shows new pager page with posts.\n    model.showMore = function() {\n        model.count(model.count() + model.step());\n        setTimeout(function() {\n            // Scrolls to the bottom.\n            window.scrollTo(0, document.body.scrollHeight);\n        }, 50);\n    };\n\n    // Shows all posts.\n    model.showAll = function() {\n        model.count(model.filtered().length);\n    };\n\n    // Posts array considering the current\n    // pager state.\n    model.posts = ko.pureComputed(function() {\n        var all = model.filtered();\n        return all.slice(0, model.count());\n    });\n\n    // Finds data from API and updates\n    // the view.\n    var requests = {\n        typeInfo: api.typeInfo(type),\n        userInfo: api.userInfo(),\n        posts: api.posts(type),\n        tags: api.tags(type)\n    };\n\n    return resolveObject(requests).then(function(data) {\n        model.title(data.typeInfo.menu_label);\n        model.comments(data.typeInfo.comments);\n        var create = false;\n        // Finds if the user can create entries.\n        if (data.userInfo.type === 'admin') {\n            create = true;\n        }\n        if (data.typeInfo.grants.indexOf('create') >= 0) {\n            create = true;\n        }\n        model.create(create);\n        data.tags.forEach(function(tag) {\n            tag.label = tag.tag + ' (' + tag.count + ')';\n        });\n        data.tags.sort(function(t1, t2) {\n            return t1.tag === t2.tag ? 0 : (t1.tag < t2.tag ? -1 : 1);\n        });\n        model.tags(data.tags);\n        data.posts.sort(function(post1, post2) {\n            return post2.date_updated - post1.date_updated;\n        });\n        model.all(data.posts.map(function(postData) {\n            return postsItem.create(postData, data.typeInfo, data.userInfo);\n\n        }));\n        view.show(template, model);\n    });\n};\n","var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// Creates posts view model for\n// the users list view.\n\nexports.create = function(data, typeInfo, userInfo) {\n\n    var post = {};\n\n    // Make it expandable.\n    expandable.mixin(post);\n\n    // Copies data attributes.\n    assign(post, data);\n\n    post.removable = false;\n\n    // Find if the entry can be removed.\n    if (userInfo.type === 'admin') {\n        post.removable = true;\n    }\n    if (typeInfo.grants.indexOf('remove_any') >= 0) {\n        post.removable = true;\n    }\n    if (typeInfo.grants.indexOf('remove_own') >= 0) {\n        if (userInfo.$id === post.author) {\n            post.removable = true;\n        }\n    }\n\n    post.editable = false;\n    if (userInfo.type === 'admin') {\n        post.editable = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_any') >= 0) {\n        post.editable = true;\n    }\n\n    if (typeInfo.grants.indexOf('update_own') >= 0) {\n        if (userInfo.$id === post.author) {\n            post.editable = true;\n        }\n    }\n\n    post.editLink = '#entry/' + typeInfo.name + '/' + post.$id;\n    post.commentsLink = '#comments/' + typeInfo.name + '/' + post.$id;\n\n    // Removes the post.\n    // Asks confirmation.\n    post.remove = function() {\n        if (confirm('Remove the post \"' + post.title + '\"?')) {\n            api.removePost(post.$id).then(function() {\n                message.info('The post \"' + post.title + '\" has been removed.');\n                route.refresh();\n            }).catch(message.error);\n        }\n    };\n\n    return post;\n};\n","module.exports = \"<h2 data-bind=\\\"text: title\\\"></h2>\\n\\n<div class=\\\"bc-margin-bottom\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"filter-tag\\\">Tag filter</label>\\n                <select data-bind=\\\"value: tag, options: tags,\\n                    optionsText: 'label', optionsValue: 'tag',\\n                    optionsCaption: 'All tags'\\\"\\n                    class=\\\"form-control input-sm\\\"></select>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"filter-status\\\">Status filter</label>\\n                <select data-bind=\\\"value: status\\\"\\n                    class=\\\"form-control input-sm\\\">\\n                    <option value=\\\"all\\\">All</option>\\n                    <option value=\\\"published\\\">Published</option>\\n                    <option value=\\\"unpublished\\\">Not published</option>\\n                </select>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<ul data-bind=\\\"foreach: posts\\\" class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item post-item\\\">\\n        <h4 data-bind=\\\"click: expand, text: title\\\" class=\\\"list-group-item-heading\\\"></h4>\\n        <div class=\\\"list-group-item-text\\\">\\n            Update date: <span data-bind=\\\"text: formatDate(date_updated)\\\"></span>\\n            <!-- ko if: $parent.comments() -->\\n                comments: <span data-bind=\\\"text: comments\\\"></span><br>\\n            <!-- /ko -->\\n            <!-- ko if: tags.length > 0 -->\\n                <span data-bind=\\\"text: tags.join(', ')\\\" class=\\\"bc-entries-tag\\\"></span>\\n            <!-- /ko -->\\n            <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls bc-margin-bottom-sm\\\">\\n                <!-- ko if: editable -->\\n                    <a data-bind=\\\"attr: { href: editLink }\\\" class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit\\n                    </a>\\n                <!-- /ko -->\\n                <!-- ko if: $parent.comments() -->\\n                    <a data-bind=\\\"attr: { href: commentsLink }, css: { disabled: comments === 0 }\\\"\\n                        class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-comment\\\"></span> Comments\\n                    </a>\\n                <!-- /ko -->\\n                <!-- ko if: removable -->\\n                    <a data-bind=\\\"click: remove\\\"\\n                        class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-remove\\\"></span> Remove\\n                    </a>\\n                <!-- /ko -->\\n            </div>\\n            <!-- ko if: !published -->\\n                <div>\\n                    <span class=\\\"label label-warning\\\">Not published</span>\\n                </div>\\n            <!-- /ko -->\\n        </div>\\n    </li>\\n</ul>\\n\\n<!-- ko if: posts().length === 0 -->\\n    <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n        No entries to show.\\n    </div>\\n<!-- /ko -->\\n\\n<div class=\\\"bc-controls\\\">\\n    <a data-bind=\\\"click: showMore, css: { disabled: !hasMore() }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n        <span class=\\\"glyphicon glyphicon-list-alt\\\"></span> Show more\\n    </a>\\n    <a data-bind=\\\"click: showAll, css: { disabled: !hasMore() }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n        <span class=\\\"glyphicon glyphicon-list-alt\\\"></span> Show all\\n    </a>\\n    <a data-bind=\\\"attr: { href: '#new/' + type }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n        <span class=\\\"glyphicon glyphicon-plus\\\"></span> Add\\n    </a>\\n</div>\\n\"","var api = require('../api');\nvar post = require('../vm/post');\nvar view = require('../view');\nvar editor = require('../editor');\nvar message = require('../message');\nvar preview = require('../preview');\nvar resolveObject = require('../resolve_object');\nvar template = require('./post.html');\n\n// The post edit page.\nexports.create = function(type, id, recovered) {\n\n    var model = {\n        post: ko.observable(),\n        info: ko.observable(false),\n        files: ko.observable(false),\n        modified: ko.observable(false),\n        hasPreview: ko.observable(false),\n        previewNotice: ko.observable(false),\n        actionNotice: ko.observable(false),\n        softWrap: ko.observable('100'),\n        settings: ko.observable(false),\n        help: ko.observable(false),\n        actions: ko.observable([]),\n        fontSize: ko.observable('14')\n    };\n\n    // Use stored softwrap value.\n    var softWrap = localStorage.getItem('softwrap');\n    if (softWrap) {\n        model.softWrap(softWrap);\n    }\n\n    // Use stored font size value.\n    var fontSize = localStorage.getItem('fontsize');\n    if (fontSize) {\n        model.fontSize(fontSize);\n    }\n\n    // Shows/hides the info section.\n    model.toggleInfo = function() {\n        model.info(!model.info());\n    };\n\n    // Shows/hides the files section.\n    model.toggleFiles = function() {\n        model.files(!model.files());\n    };\n\n    // Shows/hides the settings section.\n    model.toggleSettings = function() {\n        model.settings(!model.settings());\n    };\n\n    // Shows/hides the help section.\n    model.toggleHelp = function() {\n        model.help(!model.help());\n    };\n\n    // Gives preview URL. Returns\n    // undefined when previews are not\n    // enabled.\n    model.previewUrl = ko.pureComputed(function() {\n        var slug = model.post().slug();\n        if (model.post().preview) {\n            return model.post().preview.replace(/<slug>/g, slug);\n        }\n    });\n\n    // Shows preview when possible.\n    model.preview = function(callback) {\n        if (id) {\n            // Preview is shown only for saved posts.\n            model.post().submitUpdate().then(function() {\n                var slug = model.post().slug();\n                var url = model.previewUrl();\n                preview.show(url, function() {\n                    editor.focus();\n                });\n            }).catch(message.error);\n        } else {\n            model.previewNotice(true);\n        }\n    };\n\n    // Executes the given action.\n    model.execute = function(action) {\n        if (id) {\n            if (confirm('Do you want to run: ' + action.label + '?')) {\n                model.post().submitUpdate().then(function() {\n                    return api.execute(id, action.name);\n                }).then(function() {\n                    message.info('Executed on the post: ' + action.label + '.');\n                }).catch(message.error);\n            }\n        } else {\n            model.actionNotice(true);\n        }\n    };\n\n    // Leaves from the editing page.\n    model.leave = function() {\n        route.go('entries/' + model.post().type());\n    };\n\n    return postData(type, id).then(function(data) {\n\n        // data.post will be undefined when id is not set.\n        model.post(post.create(data.userInfo, type,\n            data.types, data.users, data.files, data.post, recovered));\n\n        // Custom actions for the entry.\n        if (data.actions) {\n            data.actions.forEach(function(action) {\n                var icon = action.icon;\n                action.textLabel = icon.length > 0 && icon[0] === icon[0].toUpperCase();\n            });\n            model.actions(data.actions);\n        }\n\n        // Save handler.\n        // http://stackoverflow.com/questions/4446987/overriding-controls-save-functionality-in-browser\n        function saveHandler(e) {\n            if (e.keyCode === 83 && (navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey)) {\n                e.preventDefault();\n                model.post().submit();\n            }\n            if (e.keyCode === 73 && (navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey)) {\n                e.preventDefault();\n                // Only show when previews are defined.\n                if (model.post().preview) {\n                    model.preview();\n                }\n            }\n        }\n\n        document.addEventListener('keydown', saveHandler, false);\n\n        // Saves entry contents to\n        // localStorage. Prevents data loss\n        // after server/browser crash.\n        model.autosave = function() {\n            var obj = model.post().toJS();\n            obj.$id = model.post().$id();\n            localStorage.setItem('autosave', JSON.stringify(obj));\n        };\n\n        // Starts timer that automatically saves\n        // post to localStorage.\n        model.autosaveTimer = setInterval(function() {\n            // Save only when modified.\n            if (model.modified()) {\n                model.autosave();\n            }\n        }, 15000);\n\n        // Clears possible autosave.\n        model.clearAutosave = function() {\n            localStorage.removeItem('autosave');\n        };\n\n        // Add browser window/tab close handler.\n        function beforeUnload(e) {\n            if (model.modified()) {\n                var message = 'You have modifications. Leave without saving?';\n                e = e || window.event;\n                if (e) {\n                    e.returnValue = message;\n                }\n                return message;\n            }\n        }\n\n        window.addEventListener('beforeunload', beforeUnload, false);\n\n        // Remove save handler when\n        // view changes.\n        model.dispose = function() {\n            document.removeEventListener('keydown', saveHandler, false);\n            window.removeEventListener('beforeunload', beforeUnload, false);\n            preview.dispose();\n            editor.dispose();\n            // Stop autosave timer.\n            clearTimeout(model.autosaveTimer);\n        };\n\n        // Ask leave confirmation.\n        route.leave = function() {\n            if (model.modified()) {\n                if (confirm('You have modifications. Leave without saving?')) {\n                    model.clearAutosave();\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return true;\n            }\n        };\n\n        view.show(template, model);\n\n        // Enable editor for the\n        // current page.\n        editor.enable();\n\n        // Set soft wrap on the editor.\n        editor.setSoftWrap(parseInt(model.softWrap(), 10));\n\n        // Set font size in the editor.\n        editor.setFontSize(parseInt(model.fontSize(), 10));\n\n        // Automatically set soft wrap when changed\n        // in the UI controls.\n        model.softWrap.subscribe(function(value) {\n            localStorage.setItem('softwrap', value);\n            editor.setSoftWrap(parseInt(value, 10));\n        });\n\n        // Same as above for the editor font size.\n        model.fontSize.subscribe(function(value) {\n            localStorage.setItem('fontsize', value);\n            editor.setFontSize(parseInt(value, 10));\n        });\n\n        if (id) {\n            // Set initial editor content.\n            if (recovered) {\n                editor.begin(recovered.content);\n                model.modified(true);\n            } else {\n                editor.begin(data.post.content);\n            }\n            // Enable preview\n            if (model.post().preview) {\n                model.hasPreview(true);\n            }\n        } else {\n            if (recovered) {\n                editor.begin(recovered.content);\n                model.modified(true);\n            }\n            model.info(true);\n            // Set focus to title.\n            var title = document.querySelector('#post-title');\n            title.focus();\n            if (typeof title.setSelectionRange === 'function') {\n                title.setSelectionRange(0, title.value.length);\n            }\n        }\n\n        // Set up modification detection.\n        editor.change(function() {\n            model.modified(true);\n        });\n\n        model.post().change(function() {\n            model.modified(true);\n        });\n\n        // Associate into the post.\n        model.post().editor = editor;\n\n        // Associate current model as well.\n        model.post().parent = model;\n\n        // Automatically update tags input.\n        model.post().tags.subscribe(function(value) {\n            var datalist = document.getElementById('taglist');\n            while (datalist.firstChild) {\n                datalist.removeChild(datalist.firstChild);\n            }\n            var options = [], length;\n            // Find matches.\n            var lwMatch = value.match(/^(.+\\,\\s*)(\\w+)$/);\n            if (lwMatch) {\n                var prefix = lwMatch[1];\n                var last = lwMatch[2];\n                length = last.length;\n                data.tags.forEach(function(entry) {\n                    if (entry.tag.substring(0, length) === last) {\n                        options.push(prefix + entry.tag);\n                    }\n                });\n            } else {\n                var fMatch = value.match(/^\\w+$/);\n                if (fMatch) {\n                    length = value.length;\n                    data.tags.forEach(function(entry) {\n                        if (entry.tag.substring(0, length) === value) {\n                            options.push(entry.tag);\n                        }\n                    });\n                }\n            }\n\n            // Repopulate the datalist.\n            options.forEach(function(option) {\n                var elem = document.createElement('option');\n                elem.value = option;\n                datalist.appendChild(elem);\n            });\n        });\n    });\n};\n\n// Retrieves data relevant to\n// the post. When id is not set\n// then retrieves data needed for the\n// new post.\nfunction postData(type, id) {\n    return api.userInfo().then(function(userInfo) {\n        var requests = {\n            types: api.types(),\n            users: authors(userInfo),\n            userInfo: Promise.resolve(userInfo),\n            tags: api.tags(type)            \n        };\n        if (id) {\n            requests.post = api.post(id);\n            // The entry files.\n            requests.files = api.files(id);\n            // Actions.\n            requests.actions = api.actions(id);\n        } else {\n            requests.files = Promise.resolve([]);\n        }\n        return resolveObject(requests);\n    });\n}\n\n// Retrieves selectable authors.\n// userInfo - the current user info data.\nfunction authors(userInfo) {\n    if (userInfo.type === 'admin') {\n        return api.users();\n    } else {\n        // Non-admin can only select\n        // itself as the author.\n        return Promise.resolve([{\n            $id: userInfo.$id,\n            fullname: userInfo.fullname\n        }]);\n    }\n}\n","var api = require('../api');\nvar message = require('../message');\nvar languages = require('../languages');\nvar files_item = require('./files_item');\n\n// Creates post view model for already\n// existing post or a new post. For new\n// post, data must be unset. The authors\n// argument must contain the list of all\n// users.\nexports.create = function(userInfo, type, types, authors, files, data, recovered) {\n\n    var post = {\n        $id: ko.observable(),\n        // List of authors. Used by the\n        // author list dropdown.\n        authors: authors,\n        // The post title. When this is\n        // the new post then initial slug\n        // is generated by it.\n        title: ko.observable('Untitled'),\n        // The post slug. Can contain\n        // \"safe\" characters only.\n        slug: ko.observable('untitled'),\n        // The post description. Can\n        // be left blank.\n        description: ko.observable(''),\n        types: types,\n        // The post type. Currently\n        // available types are post,\n        // page and block.\n        type: ko.observable(type),\n        // Type of the post content.\n        // Will be processed by the\n        // Markdown formatter when set\n        // to 'markdown''\n        content_type: ko.observable('markdown'),\n        // Flag to set whether the post\n        // is published or not.\n        published: ko.observable(false),\n        // Flag to set whether commenting\n        // is allowed or not.\n        commenting: ko.observable(true),\n        // List of tags. Tags are separated\n        // by commas.\n        tags: ko.observable(''),\n        // The count of comments.\n        // Currently not used.\n        comments: ko.observable(0),\n        // Selected user. Only admins\n        // can select author other than\n        // themself.\n        author: ko.observable(),\n        // Publish date as a string in\n        // the format YYYY-MM-DD. Might be\n        // unset when published flag is not set.\n        date: ko.observable(''),\n        // Update date as a string in\n        // the format YYYY-MM-DD.\n        update: ko.observable(''),\n        // Validates the post data.\n        // Saves or updates it using the API.\n        submit: function() {\n            submitPost(post, 'edit');\n        },\n        // Similar to submit but leaves\n        // the form.\n        save: function() {\n            submitPost(post, 'leave');\n        },\n        // The post language code. See\n        // languages.js for the list of codes.\n        language: ko.observable(bcLanguage),\n        // List of available languages.\n        languages: languages,\n        // Indicator for files component.\n        slug_changed: ko.observable(false),\n        // Only admin can change the type.\n        can_change_type: userInfo.type === 'admin',\n        // Only admin can change the author.\n        can_change_author: userInfo.type === 'admin',\n        // Array of entry files.\n        files: ko.observableArray(files),\n        // Input errors for the errors\n        // binding.\n        errors: {\n            title: ko.observableArray([]),\n            slug: ko.observableArray([]),\n            content: ko.observableArray([]),\n            date: ko.observableArray([]),\n            update: ko.observableArray([])\n        },\n\n        // Returns the plain data object\n        // to send to the backend.\n        toJS: function() {\n            var tags = post.tags().trim();\n            var date = post.date();\n            // date_published will be undefined when\n            // no date has been entered.\n            var date_published;\n            if (date !== '') {\n                date_published = isoDateToUnix(date);\n            }\n            var date_updated = isoDateToUnix(post.update());\n            return {\n                author: post.author(),\n                title: post.title(),\n                slug: post.slug(),\n                description: post.description(),\n                content: post.editor.content(),\n                type: post.type(),\n                date_published: date_published,\n                date_updated: date_updated,\n                commenting: post.commenting(),\n                published: post.published(),\n                content_type: post.content_type(),\n                tags: tags === '' ? [] : tags.split(/\\, */),\n                language: post.language()\n            };\n        },\n\n        // Updates values from a plain\n        // data object.\n        fromJS: function(data) {\n            // When the publish date is set then\n            // set the date field to formatted string.\n            if (typeof data.date_published !== 'undefined') {\n                var d = new Date(data.date_published * 1000);\n                post.date(d.toISOString().substring(0, 10));\n            }\n            post.$id(data.$id);\n            post.author(data.author);\n            post.title(data.title);\n            post.slug(data.slug);\n            post.description(data.description || '');\n            post.type(data.type);\n            post.content_type(data.content_type);\n            post.published(data.published);\n            post.commenting(data.commenting);\n            post.tags(data.tags.join(', '));\n            post.comments(data.comments);\n            post.language(data.language);\n            // Set up the existing files list.\n            files.sort(function(left, right) {\n                return left.name === right.name ? 0 : (left.name < right.name ? -1 : 1);\n            });\n            post.files(files.map(function(file) {\n                return files_item.create(post.slug, file);\n            }));\n        }\n    };\n\n    var typeInfo;\n    types.forEach(function(info) {\n        if (info.name === type) {\n            typeInfo = info;\n        }\n    });\n    if (!typeInfo) {\n        throw new Error('Invalid type ' + type);\n    }\n\n    // Use the preview URL pattern from\n    // type info.\n    post.preview = typeInfo.preview;\n\n    // Sets the view model values by the\n    // actual data object.\n    if (data) {\n        // Uses recovered data when set.\n        if (recovered) {\n            post.fromJS(recovered);\n            // Creates autosave from current state immediately.\n            setTimeout(function() {\n                post.parent.autosave();\n            }, 100);\n        } else {\n            post.fromJS(data);\n        }\n    } else {\n        // Uses recovered data.\n        if (recovered) {\n            post.fromJS(recovered);\n            // Creates autosave from current state immediately.\n            setTimeout(function() {\n                post.parent.autosave();\n            }, 100);\n        }\n        // Only when for new post.\n        // Add automatic slug generation.\n        post.title.subscribe(function(value) {\n            post.slug(getSlug(value));\n        });\n        // Select user as post author.\n        post.author(userInfo.$id);\n        // Default publish date.\n        post.date(new Date().toISOString().substring(0, 10));\n    }\n\n    // Set publishing permission flag.\n    post.can_publish = false;\n    if (userInfo.type === 'admin') {\n        post.can_publish = true;\n    }\n    if (typeInfo.grants.indexOf('publish_any') >= 0) {\n        post.can_publish = true;\n    }\n    if (typeInfo.grants.indexOf('publish_own') >= 0) {\n        if (post.author() === userInfo.$id) {\n            post.can_publish = true;\n        }\n    }\n\n    // Sets file management flag.\n    post.can_manage_files = false;\n    if (userInfo.type === 'admin') {\n        post.can_manage_files = true;\n    }\n    if (typeInfo.grants.indexOf('update_any') >= 0) {\n        if (typeInfo.grants.indexOf('files') >= 0) {\n            post.can_manage_files = true;\n        }\n    }\n    if (typeInfo.grants.indexOf('update_own') >= 0) {\n        if (post.author() === userInfo.$id) {\n            if (typeInfo.grants.indexOf('files') >= 0) {\n                post.can_manage_files = true;\n            }\n        }\n    }\n\n    // Default update date is the current date.\n    post.update(new Date().toISOString().substring(0, 10));\n\n    post.published.subscribe(function(value) {\n        // Set publish date when post is published.\n        // Applies only when no publish date is set.\n        if (value && post.date() === '') {\n            post.date(new Date().toISOString().substring(0, 10));\n        }\n    });\n\n    // Indicated that slug has been changed\n    // and file management does not work before\n    // saving.\n    post.slug.subscribe(function(value) {\n        post.slug_changed(true);\n    });\n\n    // Submits the file upload form and\n    // performs the file upload process.\n    post.uploadFile = function() {\n        var file = document.getElementById('entry-file').files[0];\n        if (!file || !post.$id()) {\n            return;\n        }\n        api.upload(post.$id(), file).then(function(response) {\n            message.info('File \"' + file.name + '\" has been uploaded.');\n            post.files.push(files_item.create(post.slug, { name: file.name }));\n            // This resets the file input.\n            var wrap = document.getElementById('entry-file-wrap');\n            wrap.innerHTML = '';\n            wrap.innerHTML = '<input type=\"file\" id=\"entry-file\" class=\"form-control\" placeholder=\"Your file\">';\n        }).catch(message.error);\n    };\n\n    // Removes the file.\n    // Asks confirmation.\n    post.removeFile = function(file) {\n        if (confirm('Remove the file \"' + file.name + '\"?')) {\n            api.removeFile(post.$id(), file.name).then(function() {\n                message.info('File \"' + file.name + '\" has been removed.');\n                post.files.remove(file);\n            }).catch(message.error);\n        }\n    };\n\n    // Adds as image.\n    post.insertImage = function(file) {\n        api.imageSize(post.$id(), file.name).then(function(size) {\n            post.editor.insert('<img src=\"' + file.url() +\n                '\" width=\"' +size.width + '\" height=\"' + size.height + '\">');\n            post.editor.focus();\n        }, function() {\n            // Ignores dimensions API error.\n            post.editor.insert('<img src=\"' + file.url() + '\">');\n            post.editor.focus();\n        }).catch(message.error);\n    };\n\n    // Adds as link.\n    post.insertLink = function(file) {\n        post.editor.insert('[' + file.name + '](' + file.url() + ')');\n        post.editor.focus();\n    };\n\n    // FIXME refactor\n    post.submitUpdate = function() {\n        return submitPost(post, 'edit');\n    };\n\n    // Sets change callback.\n    post.change = function(callback) {\n        post.changeCallback = callback;\n    };\n\n    // Set up change detection.\n\n    ['author', 'title', 'slug', 'description', 'type',\n        'content_type', 'published', 'commenting', 'tags',\n        'language', 'date', 'update'].forEach(function(input) {\n\n        post[input].subscribe(function() {\n            if (typeof post.changeCallback === 'function') {\n                post.changeCallback();\n            }\n        });\n    });\n\n    return post;\n};\n\n// Converts ISO8601 date part into\n// an Unix timestamp.\nfunction isoDateToUnix(string) {\n    var match = string.match(/^(\\d{4})\\-(\\d{2})\\-(\\d{2})$/);\n    if (!match) {\n        throw new Error('Date does not match pattern: ' + string);\n    }\n    var date = new Date();\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCFullYear(parseInt(match[1], 10), parseInt(match[2], 10) - 1, parseInt(match[3], 10));\n    return Math.floor(date.getTime() / 1000);\n}\n\n// Validates the given post.\n// Adds errors using the validate module.\nfunction validatePost(post) {\n    if (post.title() === '') {\n        post.errors.title.push('Title is not entered.');\n    }\n    var slug = post.slug();\n    if (slug === '') {\n        post.errors.slug.push('Slug is not entered.');\n    } else {\n        if (!slug.match(/^[a-z0-9\\-_]+$/)) {\n            post.errors.slug.push('Use lowercase letters, numbers, hyphen and underscore.');\n        }\n    }\n    var date = post.date();\n    if (date === '') {\n        if (post.published()) {\n            post.errors.date.push('Publish date is not entered.');\n        }\n    } else if (!date.match(/^\\d{4}\\-\\d{2}\\-\\d{2}$/)) {\n        post.errors.date.push('Date must be in the YYYY-MM-DD format.');\n    }\n    var update = post.update();\n    if (update === '') {\n        post.errors.update.push('Update date is not entered.');\n    } else if (!update.match(/^\\d{4}\\-\\d{2}\\-\\d{2}$/)) {\n        post.errors.update.push('Update date must be in the YYYY-MM-DD format.');\n    }\n}\n\n// Handles save and\n// save-with-continue actions.\nfunction submitPost(post, action) {\n    var form = document.getElementById('post');\n    // Clear errors.\n    Object.keys(post.errors).forEach(function(key) {\n        post.errors[key]([]);\n    });\n    validatePost(post);\n    var input = form.querySelector(\n        '.has-error input, .has-error textarea, .has-error checkbox');\n    if (input) {\n        // Open the info section when\n        // it contains errors.\n        if (form.querySelector('.bc-info .has-error input,' +\n            ' .bc-info .has-error textarea, .bc-info .has-error checkbox')) {\n            post.parent.info(true);\n        }\n        input.focus();\n        return Promise.resolve(false);\n    }\n\n    // When post has '$id' property\n    // then it's an existing post.\n    if (post.$id()) {\n        return updatePost(form, post, action);\n    } else {\n        return savePost(form, post, action);\n    }\n}\n\n// Updates the already existing\n// post. Assumes that the post\n// is validated.\nfunction updatePost(form, post, action) {\n    return api.updatePost(post.$id(), post.toJS()).then(function() {\n        message.info('The entry \"' + post.title() + '\" has been updated.');\n        // Clear autosave.\n        post.parent.clearAutosave();\n        if (action === 'edit') {\n            post.slug_changed(false);\n            // Reload possibly changed post content.\n            api.post(post.$id()).then(function(data) {\n                if (post.editor.content() !== data.content) {\n                    post.editor.begin(data.content);\n                }\n                post.parent.modified(false);\n            }).catch(message.error);\n        } else {\n            route.go('entries/' + post.type());\n        }\n    }).catch(saveError.bind(null, post));\n}\n\n// Saves the new post.\nfunction savePost(form, post, action) {\n    return api.savePost(post.toJS()).then(function(res) {\n        message.info('The entry \"' + post.title() + '\" has been saved.');\n        post.parent.modified(false);\n        // Clear autosave.\n        post.parent.clearAutosave();\n        // Redirect to post page when we\n        // want to keep editing the post.\n        // Otherwise go back to listing page.\n        if (action === 'edit') {\n            route.go('entry/' + post.type() + '/' + res);\n        } else {\n            route.go('entries/' + post.type());\n        }\n    }).catch(saveError.bind(null, post));\n}\n\nfunction saveError(post, err) {\n    if (err.toString().match(/entry with the same slug exists/)) {\n        post.errors.slug.push('Entry with the same slug exists.');\n        // Open info section.\n        post.parent.info(true);\n        document.querySelector('.has-error input').focus();\n    } else {\n        message.error(err);\n    }\n    throw err;\n}\n","// http://stackoverflow.com/questions/3217492/list-of-language-codes-in-yaml-or-json\n// @author Phil Teare\n// using Wikipedia data\nmodule.exports = [\n    {\n        'code': 'ab',\n        'name': 'Abkhaz'\n    },\n    {\n        'code': 'aa',\n        'name': 'Afar'\n    },\n    {\n        'code': 'af',\n        'name': 'Afrikaans'\n    },\n    {\n        'code': 'ak',\n        'name': 'Akan'\n    },\n    {\n        'code': 'sq',\n        'name': 'Albanian'\n    },\n    {\n        'code': 'am',\n        'name': 'Amharic'\n    },\n    {\n        'code': 'ar',\n        'name': 'Arabic'\n    },\n    {\n        'code': 'an',\n        'name': 'Aragonese'\n    },\n    {\n        'code': 'hy',\n        'name': 'Armenian'\n    },\n    {\n        'code': 'as',\n        'name': 'Assamese'\n    },\n    {\n        'code': 'av',\n        'name': 'Avaric'\n    },\n    {\n        'code': 'ae',\n        'name': 'Avestan'\n    },\n    {\n        'code': 'ay',\n        'name': 'Aymara'\n    },\n    {\n        'code': 'az',\n        'name': 'Azerbaijani'\n    },\n    {\n        'code': 'bm',\n        'name': 'Bambara'\n    },\n    {\n        'code': 'ba',\n        'name': 'Bashkir'\n    },\n    {\n        'code': 'eu',\n        'name': 'Basque'\n    },\n    {\n        'code': 'be',\n        'name': 'Belarusian'\n    },\n    {\n        'code': 'bn',\n        'name': 'Bengali'\n    },\n    {\n        'code': 'bh',\n        'name': 'Bihari'\n    },\n    {\n        'code': 'bi',\n        'name': 'Bislama'\n    },\n    {\n        'code': 'bs',\n        'name': 'Bosnian'\n    },\n    {\n        'code': 'br',\n        'name': 'Breton'\n    },\n    {\n        'code': 'bg',\n        'name': 'Bulgarian'\n    },\n    {\n        'code': 'my',\n        'name': 'Burmese'\n    },\n    {\n        'code': 'ca',\n        'name': 'Catalan; Valencian'\n    },\n    {\n        'code': 'ch',\n        'name': 'Chamorro'\n    },\n    {\n        'code': 'ce',\n        'name': 'Chechen'\n    },\n    {\n        'code': 'ny',\n        'name': 'Chichewa; Chewa; Nyanja'\n    },\n    {\n        'code': 'zh',\n        'name': 'Chinese'\n    },\n    {\n        'code': 'cv',\n        'name': 'Chuvash'\n    },\n    {\n        'code': 'kw',\n        'name': 'Cornish'\n    },\n    {\n        'code': 'co',\n        'name': 'Corsican'\n    },\n    {\n        'code': 'cr',\n        'name': 'Cree'\n    },\n    {\n        'code': 'hr',\n        'name': 'Croatian'\n    },\n    {\n        'code': 'cs',\n        'name': 'Czech'\n    },\n    {\n        'code': 'da',\n        'name': 'Danish'\n    },\n    {\n        'code': 'dv',\n        'name': 'Divehi; Dhivehi; Maldivian;'\n    },\n    {\n        'code': 'nl',\n        'name': 'Dutch'\n    },\n    {\n        'code': 'en',\n        'name': 'English'\n    },\n    {\n        'code': 'eo',\n        'name': 'Esperanto'\n    },\n    {\n        'code': 'et',\n        'name': 'Estonian'\n    },\n    {\n        'code': 'ee',\n        'name': 'Ewe'\n    },\n    {\n        'code': 'fo',\n        'name': 'Faroese'\n    },\n    {\n        'code': 'fj',\n        'name': 'Fijian'\n    },\n    {\n        'code': 'fi',\n        'name': 'Finnish'\n    },\n    {\n        'code': 'fr',\n        'name': 'French'\n    },\n    {\n        'code': 'ff',\n        'name': 'Fula; Fulah; Pulaar; Pular'\n    },\n    {\n        'code': 'gl',\n        'name': 'Galician'\n    },\n    {\n        'code': 'ka',\n        'name': 'Georgian'\n    },\n    {\n        'code': 'de',\n        'name': 'German'\n    },\n    {\n        'code': 'el',\n        'name': 'Greek, Modern'\n    },\n    {\n        'code': 'gn',\n        'name': 'Guaraní'\n    },\n    {\n        'code': 'gu',\n        'name': 'Gujarati'\n    },\n    {\n        'code': 'ht',\n        'name': 'Haitian; Haitian Creole'\n    },\n    {\n        'code': 'ha',\n        'name': 'Hausa'\n    },\n    {\n        'code': 'he',\n        'name': 'Hebrew (modern)'\n    },\n    {\n        'code': 'hz',\n        'name': 'Herero'\n    },\n    {\n        'code': 'hi',\n        'name': 'Hindi'\n    },\n    {\n        'code': 'ho',\n        'name': 'Hiri Motu'\n    },\n    {\n        'code': 'hu',\n        'name': 'Hungarian'\n    },\n    {\n        'code': 'is',\n        'name': 'Icelandic'\n    },\n    {\n        'code': 'io',\n        'name': 'Ido'\n    },\n    {\n        'code': 'ig',\n        'name': 'Igbo'\n    },\n    {\n        'code': 'id',\n        'name': 'Indonesian'\n    },\n    {\n        'code': 'ia',\n        'name': 'Interlingua'\n    },\n    {\n        'code': 'ie',\n        'name': 'Interlingue'\n    },\n    {\n        'code': 'iu',\n        'name': 'Inuktitut'\n    },\n    {\n        'code': 'ik',\n        'name': 'Inupiaq'\n    },\n    {\n        'code': 'ga',\n        'name': 'Irish'\n    },\n    {\n        'code': 'it',\n        'name': 'Italian'\n    },\n    {\n        'code': 'ja',\n        'name': 'Japanese'\n    },\n    {\n        'code': 'jv',\n        'name': 'Javanese'\n    },\n    {\n        'code': 'kl',\n        'name': 'Kalaallisut, Greenlandic'\n    },\n    {\n        'code': 'kn',\n        'name': 'Kannada'\n    },\n    {\n        'code': 'kr',\n        'name': 'Kanuri'\n    },\n    {\n        'code': 'ks',\n        'name': 'Kashmiri'\n    },\n    {\n        'code': 'kk',\n        'name': 'Kazakh'\n    },\n    {\n        'code': 'km',\n        'name': 'Khmer'\n    },\n    {\n        'code': 'ki',\n        'name': 'Kikuyu, Gikuyu'\n    },\n    {\n        'code': 'rw',\n        'name': 'Kinyarwanda'\n    },\n    {\n        'code': 'ky',\n        'name': 'Kirghiz, Kyrgyz'\n    },\n    {\n        'code': 'rn',\n        'name': 'Kirundi'\n    },\n    {\n        'code': 'kv',\n        'name': 'Komi'\n    },\n    {\n        'code': 'kg',\n        'name': 'Kongo'\n    },\n    {\n        'code': 'ko',\n        'name': 'Korean'\n    },\n    {\n        'code': 'ku',\n        'name': 'Kurdish'\n    },\n    {\n        'code': 'kj',\n        'name': 'Kwanyama, Kuanyama'\n    },\n    {\n        'code': 'lo',\n        'name': 'Lao'\n    },\n    {\n        'code': 'la',\n        'name': 'Latin'\n    },\n    {\n        'code': 'lv',\n        'name': 'Latvian'\n    },\n    {\n        'code': 'li',\n        'name': 'Limburgish, Limburgan, Limburger'\n    },\n    {\n        'code': 'ln',\n        'name': 'Lingala'\n    },\n    {\n        'code': 'lt',\n        'name': 'Lithuanian'\n    },\n    {\n        'code': 'lu',\n        'name': 'Luba-Katanga'\n    },\n    {\n        'code': 'lg',\n        'name': 'Luganda'\n    },\n    {\n        'code': 'lb',\n        'name': 'Luxembourgish, Letzeburgesch'\n    },\n    {\n        'code': 'mk',\n        'name': 'Macedonian'\n    },\n    {\n        'code': 'mg',\n        'name': 'Malagasy'\n    },\n    {\n        'code': 'ms',\n        'name': 'Malay'\n    },\n    {\n        'code': 'ml',\n        'name': 'Malayalam'\n    },\n    {\n        'code': 'mt',\n        'name': 'Maltese'\n    },\n    {\n        'code': 'gv',\n        'name': 'Manx'\n    },\n    {\n        'code': 'mr',\n        'name': 'Marathi (Marāṭhī)'\n    },\n    {\n        'code': 'mh',\n        'name': 'Marshallese'\n    },\n    {\n        'code': 'mn',\n        'name': 'Mongolian'\n    },\n    {\n        'code': 'mi',\n        'name': 'Māori'\n    },\n    {\n        'code': 'na',\n        'name': 'Nauru'\n    },\n    {\n        'code': 'nv',\n        'name': 'Navajo, Navaho'\n    },\n    {\n        'code': 'ng',\n        'name': 'Ndonga'\n    },\n    {\n        'code': 'ne',\n        'name': 'Nepali'\n    },\n    {\n        'code': 'nd',\n        'name': 'North Ndebele'\n    },\n    {\n        'code': 'se',\n        'name': 'Northern Sami'\n    },\n    {\n        'code': 'no',\n        'name': 'Norwegian'\n    },\n    {\n        'code': 'nb',\n        'name': 'Norwegian Bokmål'\n    },\n    {\n        'code': 'nn',\n        'name': 'Norwegian Nynorsk'\n    },\n    {\n        'code': 'ii',\n        'name': 'Nuosu'\n    },\n    {\n        'code': 'oc',\n        'name': 'Occitan'\n    },\n    {\n        'code': 'oj',\n        'name': 'Ojibwe, Ojibwa'\n    },\n    {\n        'code': 'cu',\n        'name': 'Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic'\n    },\n    {\n        'code': 'or',\n        'name': 'Oriya'\n    },\n    {\n        'code': 'om',\n        'name': 'Oromo'\n    },\n    {\n        'code': 'os',\n        'name': 'Ossetian, Ossetic'\n    },\n    {\n        'code': 'pa',\n        'name': 'Panjabi, Punjabi'\n    },\n    {\n        'code': 'ps',\n        'name': 'Pashto, Pushto'\n    },\n    {\n        'code': 'fa',\n        'name': 'Persian'\n    },\n    {\n        'code': 'pl',\n        'name': 'Polish'\n    },\n    {\n        'code': 'pt',\n        'name': 'Portuguese'\n    },\n    {\n        'code': 'pi',\n        'name': 'Pāli'\n    },\n    {\n        'code': 'qu',\n        'name': 'Quechua'\n    },\n    {\n        'code': 'ro',\n        'name': 'Romanian, Moldavian, Moldovan'\n    },\n    {\n        'code': 'rm',\n        'name': 'Romansh'\n    },\n    {\n        'code': 'ru',\n        'name': 'Russian'\n    },\n    {\n        'code': 'sm',\n        'name': 'Samoan'\n    },\n    {\n        'code': 'sg',\n        'name': 'Sango'\n    },\n    {\n        'code': 'sa',\n        'name': 'Sanskrit (Saṁskṛta)'\n    },\n    {\n        'code': 'sc',\n        'name': 'Sardinian'\n    },\n    {\n        'code': 'gd',\n        'name': 'Scottish Gaelic; Gaelic'\n    },\n    {\n        'code': 'sr',\n        'name': 'Serbian'\n    },\n    {\n        'code': 'sn',\n        'name': 'Shona'\n    },\n    {\n        'code': 'sd',\n        'name': 'Sindhi'\n    },\n    {\n        'code': 'si',\n        'name': 'Sinhala, Sinhalese'\n    },\n    {\n        'code': 'sk',\n        'name': 'Slovak'\n    },\n    {\n        'code': 'sl',\n        'name': 'Slovene'\n    },\n    {\n        'code': 'so',\n        'name': 'Somali'\n    },\n    {\n        'code': 'nr',\n        'name': 'South Ndebele'\n    },\n    {\n        'code': 'st',\n        'name': 'Southern Sotho'\n    },\n    {\n        'code': 'es',\n        'name': 'Spanish; Castilian'\n    },\n    {\n        'code': 'su',\n        'name': 'Sundanese'\n    },\n    {\n        'code': 'sw',\n        'name': 'Swahili'\n    },\n    {\n        'code': 'ss',\n        'name': 'Swati'\n    },\n    {\n        'code': 'sv',\n        'name': 'Swedish'\n    },\n    {\n        'code': 'tl',\n        'name': 'Tagalog'\n    },\n    {\n        'code': 'ty',\n        'name': 'Tahitian'\n    },\n    {\n        'code': 'tg',\n        'name': 'Tajik'\n    },\n    {\n        'code': 'ta',\n        'name': 'Tamil'\n    },\n    {\n        'code': 'tt',\n        'name': 'Tatar'\n    },\n    {\n        'code': 'te',\n        'name': 'Telugu'\n    },\n    {\n        'code': 'th',\n        'name': 'Thai'\n    },\n    {\n        'code': 'bo',\n        'name': 'Tibetan Standard, Tibetan, Central'\n    },\n    {\n        'code': 'ti',\n        'name': 'Tigrinya'\n    },\n    {\n        'code': 'to',\n        'name': 'Tonga (Tonga Islands)'\n    },\n    {\n        'code': 'ts',\n        'name': 'Tsonga'\n    },\n    {\n        'code': 'tn',\n        'name': 'Tswana'\n    },\n    {\n        'code': 'tr',\n        'name': 'Turkish'\n    },\n    {\n        'code': 'tk',\n        'name': 'Turkmen'\n    },\n    {\n        'code': 'tw',\n        'name': 'Twi'\n    },\n    {\n        'code': 'ug',\n        'name': 'Uighur, Uyghur'\n    },\n    {\n        'code': 'uk',\n        'name': 'Ukrainian'\n    },\n    {\n        'code': 'ur',\n        'name': 'Urdu'\n    },\n    {\n        'code': 'uz',\n        'name': 'Uzbek'\n    },\n    {\n        'code': 've',\n        'name': 'Venda'\n    },\n    {\n        'code': 'vi',\n        'name': 'Vietnamese'\n    },\n    {\n        'code': 'vo',\n        'name': 'Volapük'\n    },\n    {\n        'code': 'wa',\n        'name': 'Walloon'\n    },\n    {\n        'code': 'cy',\n        'name': 'Welsh'\n    },\n    {\n        'code': 'fy',\n        'name': 'Western Frisian'\n    },\n    {\n        'code': 'wo',\n        'name': 'Wolof'\n    },\n    {\n        'code': 'xh',\n        'name': 'Xhosa'\n    },\n    {\n        'code': 'yi',\n        'name': 'Yiddish'\n    },\n    {\n        'code': 'yo',\n        'name': 'Yoruba'\n    },\n    {\n        'code': 'za',\n        'name': 'Zhuang, Chuang'\n    }\n];\n","var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('../vm/expandable');\n\n// Creates file view model for\n// the files list view.\nexports.create = function(slug, data) {\n    var file = {};\n    // Copies data attributes.\n    assign(file, data);\n    expandable.mixin(file);\n    file.url = ko.pureComputed(function() {\n        return '/' + encodeURIComponent(slug()) + '/' +\n            encodeURIComponent(file.name);\n    });\n    file.image = !!file.name.match(/\\.(gif|jpg|jpeg|tiff|png)$/i);\n    return file;\n};\n","var editor;\n\n// Enables editor for the current page.\nexports.enable = function() {\n    // Setup Ace\n    editor = ace.edit('editor');\n    editor.$blockScrolling = Infinity;\n    editor.container.style.lineHeight = 1.5;\n    editor.setOptions({\n        maxLines: Infinity,\n        showLineNumbers: false,\n        wrap: true,\n        showPrintMargin: false,\n        showFoldWidgets: false,\n        showGutter: false,\n        displayIndentGuides: false,\n        fontSize: 14,\n        fontFamily: 'monospace',\n        useSoftTabs: true,\n        tabSize: 2\n    });\n    // Theme\n    editor.setTheme('ace/theme/github');\n    // Mode\n    editor.getSession().setMode('ace/mode/markdown');\n};\n\n// Sets the softWrap property for the editor.\nexports.setSoftWrap = function(softWrap) {\n    if (editor) {\n        editor.getSession().setWrapLimitRange(softWrap, softWrap);\n    }\n};\n\n// Sets the font size used by the editor.\nexports.setFontSize = function(size) {\n    if (editor) {\n        editor.setOption('fontSize', size);\n    }\n};\n\n// Sets the editor content\n// and initial cursor position.\nexports.begin = function(content) {\n    editor.setValue(content);\n    // Remove editor's undo log.\n    editor.getSession().setUndoManager(new ace.UndoManager());\n    // Go to first line\n    editor.focus();\n    editor.gotoLine(1);\n};\n\n// Sets callback to be called\n// when editor contents is modified.\nexports.change = function(callback) {\n    editor.on('change', callback);\n};\n\n// Focuses on the editor.\nexports.focus = function() {\n    editor.focus();\n};\n\n// Returns the current editor\n// content.\nexports.content = function() {\n    return editor.getValue();\n};\n\n// Inserts into current ACE editor\n// at the cursor.\nexports.insert = function(text) {\n    if (editor) {\n        editor.insert(text);\n    }\n};\n\n// Sets editor content.\nexports.setValue = function(text) {\n    if (editor) {\n        editor.setValue(text);\n    }\n};\n\n// Cleans up the current editor.\n// FIXME remove change callback\nexports.dispose = function() {\n    if (editor) {\n        editor.destroy();\n        editor = null;\n    }\n};\n","// Shows preview for the given URL.\nvar last, callback, editorScrollTop, viewScrollTop = -1;\n\n// Callback is called when preview is closed.\nexports.show = function(url, cb) {\n    var iframe = holder();\n    if (iframe) {\n        if (last === url) {\n            // Just refresh.\n            iframe.contentWindow.location.reload(true);\n        } else {\n            iframe.src = url;\n            viewScrollTop = -1;\n        }\n    } else {\n        iframe = document.createElement('iframe');\n        iframe.src = url;\n        preview.appendChild(iframe);\n        viewScrollTop = -1;\n    }\n    // Store scroll position.\n    editorScrollTop = document.body.scrollTop;\n    // Show preview.\n    main.style.display = 'none';\n    preview.style.display = 'block';\n    controls.style.display = 'block';\n    if (viewScrollTop > 0) {\n        // Restore preview scroll position when set.\n        document.body.scrollTop = viewScrollTop;\n    }\n    last = url;\n    callback = cb;\n};\n\nexports.dispose = function() {\n    // Clean preview element.\n    preview.innerHTML = '';\n    callback = null;\n};\n\nfunction holder() {\n    return preview.querySelector('iframe');\n}\n\n// Main and preview elements.\nvar main = document.getElementById('main');\nvar preview = document.getElementById('preview');\nvar controls = document.getElementById('preview-controls');\n\n// Control button to close the preview.\nvar close = controls.querySelector('[data-control=\"close\"]');\n\nclose.addEventListener('click', function(e) {\n    e.preventDefault();\n    hide();\n}, false);\n\n// Preview hide handler.\nfunction hideHandler(e) {\n    if (e.keyCode === 27) {\n        hide();\n    }\n}\n\nfunction hide() {\n    // Store preview scroll position.\n    viewScrollTop = document.body.scrollTop;\n    main.style.display = 'block';\n    preview.style.display = 'none';\n    controls.style.display = 'none';\n    if (typeof callback === 'function') {\n        callback();\n    }\n    // Restore editor scroll position.\n    document.body.scrollTop = editorScrollTop;\n}\n\ndocument.addEventListener('keydown', hideHandler, false);\n\n// Starts resize timer.\nvar timer;\nfunction resize() {\n    var iframe = holder();\n    if (iframe) {\n        var contentDocument = iframe.contentDocument;\n        if (contentDocument.body) {\n            var scrollHeight = contentDocument.body.scrollHeight;\n            var iframeHeight = iframe.clientHeight;\n            if (scrollHeight > iframeHeight) {\n                iframe.style.height = (scrollHeight + 50) + 'px';\n            }\n        }\n    }\n    timer = setTimeout(resize, 100);\n}\ntimer = resize();\n","module.exports = \"<!-- ko with: post -->\\n    <h2 data-bind=\\\"text: title\\\"></h2>\\n    <div class=\\\"bc-margin-bottom\\\">\\n        <button data-bind=\\\"click: $root.leave\\\" type=\\\"button\\\"\\n            class=\\\"btn btn-default\\\" title=\\\"Leave the editor\\\">\\n            <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n        </button>\\n        <button data-bind=\\\"click: submit, css: { 'bc-red': $root.modified() },\\n            disable: !$root.modified()\\\" type=\\\"button\\\"\\n            class=\\\"btn btn-default\\\" title=\\\"Save and continue\\\">\\n            <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span>\\n        </button>\\n        <button data-bind=\\\"click: $root.toggleInfo, css: { active: $root.info() }\\\"\\n            type=\\\"button\\\" class=\\\"btn btn-default\\\" title=\\\"Show/hide info\\\">\\n            <span class=\\\"glyphicon glyphicon-info-sign\\\"></span>\\n        </button>\\n        <button data-bind=\\\"click: $root.toggleFiles, css: { active: $root.files() }\\\"\\n            type=\\\"button\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-paperclip\\\"></span>\\n        </button>\\n        <button data-bind=\\\"click: $root.toggleSettings, css: { active: $root.settings() }\\\"\\n            type=\\\"button\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-cog\\\"></span>\\n        </button>\\n        <button data-bind=\\\"click: $root.toggleHelp, css: { active: $root.help() }\\\"\\n            type=\\\"button\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-question-sign\\\"></span>\\n        </button>\\n        <!-- ko if: $root.hasPreview() -->\\n            <button data-bind=\\\"click: $root.preview\\\" class=\\\"btn btn-default\\\">\\n                <span class=\\\"glyphicon glyphicon-eye-open\\\"></span>\\n            </button>\\n        <!-- /ko -->\\n        <!-- ko foreach: $root.actions -->\\n            <button data-bind=\\\"click: function() { $root.execute($data) }, attr: { title: $data.label }\\\" class=\\\"btn btn-default\\\">\\n                <!-- ko if: $data.textLabel -->\\n                    <strong data-bind=\\\"text: $data.icon\\\"></strong>\\n                <!-- /ko -->\\n                <!-- ko if: !$data.textLabel -->\\n                    <span data-bind=\\\"attr: { 'class': 'glyphicon glyphicon-' + $data.icon }\\\"></span>\\n                <!-- /ko -->\\n            </button>\\n        <!-- /ko -->\\n    </div>\\n    <!-- ko if: published() -->\\n        <div class=\\\"bc-margin-bottom\\\">\\n            <div>\\n                <span class=\\\"label label-danger\\\">Published</span>\\n                <!-- ko if: $root.hasPreview() -->\\n                    &nbsp;&nbsp;<a data-bind=\\\"attr: { href: $root.previewUrl }\\\" href=\\\"#\\\" target=\\\"_blank\\\">Preview\\n                        <span class=\\\"glyphicon glyphicon-new-window\\\"></span></a>\\n                <!-- /ko -->\\n            </div>\\n        </div>\\n    <!-- /ko -->\\n    <!-- ko if: !published() -->\\n        <div class=\\\"bc-margin-bottom\\\">\\n            <div>\\n                <span class=\\\"label label-warning\\\">Not published</span>\\n                <!-- ko if: $root.hasPreview() -->\\n                    &nbsp;&nbsp;<a data-bind=\\\"attr: { href: $root.previewUrl }\\\" href=\\\"#\\\" target=\\\"_blank\\\">Preview\\n                        <span class=\\\"glyphicon glyphicon-new-window\\\"></span></a>\\n                <!-- /ko -->\\n            </div>\\n        </div>\\n    <!-- /ko -->\\n    <!-- ko if: $root.previewNotice() -->\\n        <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n            Previews are not available for new entries.\\n            Save the entry at least once before.\\n        </div>\\n    <!-- /ko -->\\n    <!-- ko if: $root.actionNotice() -->\\n        <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n            Actions are not available for new entries.\\n            Save the entry at least once before using an action.\\n        </div>\\n    <!-- /ko -->\\n    <hr>\\n    <!-- ko if: $root.settings() -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\">\\n                <select data-bind=\\\"value: $root.softWrap\\\"\\n                    class=\\\"form-control bc-margin-top-sm\\\">\\n                    <option value=\\\"60\\\">Soft wrap 60</option>\\n                    <option value=\\\"70\\\">Soft wrap 70</option>\\n                    <option value=\\\"80\\\">Soft wrap 80</option>\\n                    <option value=\\\"90\\\">Soft wrap 90</option>\\n                    <option value=\\\"100\\\">Soft wrap 100</option>\\n                    <option value=\\\"110\\\">Soft wrap 110</option>\\n                    <option value=\\\"120\\\">Soft wrap 120</option>\\n                    <option value=\\\"130\\\">Soft wrap 130</option>\\n                    <option value=\\\"140\\\">Soft wrap 140</option>\\n                </select>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n                <select data-bind=\\\"value: $root.fontSize\\\"\\n                    class=\\\"form-control bc-margin-top-sm\\\">\\n                    <option value=\\\"12\\\">12</option>\\n                    <option value=\\\"13\\\">13</option>\\n                    <option value=\\\"14\\\">14</option>\\n                    <option value=\\\"15\\\">15</option>\\n                    <option value=\\\"16\\\">16</option>\\n                    <option value=\\\"17\\\">17</option>\\n                    <option value=\\\"18\\\">18</option>\\n                    <option value=\\\"19\\\">19</option>\\n                    <option value=\\\"20\\\">20</option>\\n                    <option value=\\\"21\\\">21</option>\\n                    <option value=\\\"22\\\">22</option>\\n                    <option value=\\\"23\\\">23</option>\\n                    <option value=\\\"24\\\">24</option>                    \\n                </select>\\n            </div>\\n        </div>\\n        <hr>\\n    <!-- /ko -->\\n    <!-- ko if: $root.help() -->\\n        <h3>Shorcuts</h3>\\n        <ul>\\n            <li>CTRL+S - save</li>\\n            <li>CTRL+I - preview (if preview is configured)</li>\\n        </ul>\\n        <h3>Markdown</h3>\\n\\n        <h4>Headings</h4>\\n<pre># Heading 1\\n## Heading 2\\n### Heading 3\\n#### Heading 4\\n##### Heading 5\\n###### Heading 6</pre>\\n\\n        <h4>Bulleted list</h4>\\n\\n<pre> + item1\\n + item2\\n + item3</pre>\\n\\n        <h4>Numbered list</h4>\\n\\n<pre> 1. item1\\n 2. item2\\n 3. item3</pre>\\n\\n<h4>Link</h4>\\n\\n<pre>[Text](http://example.com) or\\n&lt;http://example.com&gt;</pre>\\n\\n<h4>Reference link</h4>\\n\\n<pre>[Text][link]\\n[link]:http://example.com</pre>\\n\\n<h4>Styling</h4>\\n\\n<pre>*italic*\\n**bold**\\n~~strike-through~~</pre>\\n\\n<h4>Code block</h4>\\n\\nCode blocks use 4-space indent.\\n\\n<pre>    var x = 1;</pre>\\n\\nAlternative syntax:\\n\\n<pre>```language\\nvar x = 1;</pre>\\n\\n<p>\\nMore info: <a href=\\\"https://daringfireball.net/projects/markdown/syntax\\\"\\n    target=\\\"_blank\\\">Gruber's Markdown <span class=\\\"glyphicon glyphicon-new-window\\\"></span></a>\\n</p>\\n\\n        <div>\\n            <a href=\\\"#\\\" data-bind=\\\"click: $root.toggleHelp\\\"\\n                class=\\\"btn btn-default\\\">Close help</a>\\n        </div>\\n        <hr>\\n    <!-- /ko -->\\n    <form data-bind=\\\"submit: submit\\\" autocomplete=\\\"off\\\" id=\\\"post\\\">\\n        <!-- ko if: $root.info() -->\\n            <div class=\\\"bc-info\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4\\\">\\n                        <div data-bind=\\\"errors: errors.title\\\" class=\\\"form-group\\\">\\n                            <label for=\\\"post-title\\\">Title</label>\\n                            <input data-bind=\\\"textInput: title\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-title\\\"\\n                                placeholder=\\\"Title\\\">\\n                            <p class=\\\"help-block\\\">Slug is autogenerated from the title.</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <div data-bind=\\\"errors: errors.slug\\\" class=\\\"form-group\\\">\\n                            <label for=\\\"post-slug\\\">Slug</label>\\n                            <input data-bind=\\\"textInput: slug\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-slug\\\"\\n                                placeholder=\\\"Slug\\\">\\n                            <p class=\\\"help-block\\\">Modifying the slug after publishing will break links.</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-tags\\\">Tags</label>\\n                            <input data-bind=\\\"textInput: tags\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-tags\\\"\\n                                placeholder=\\\"Tags\\\" list=\\\"taglist\\\">\\n                            <datalist id=\\\"taglist\\\">\\n                                <option value=\\\"node.js\\\">\\n                                <option value=\\\"javascript\\\">\\n                            </datalist>\\n                            <p class=\\\"help-block\\\">Separate multiple tags with commas.</p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-type\\\">Type</label>\\n                            <select data-bind=\\\"value: type, options: types,\\n                                optionsText: 'label', optionsValue: 'name',\\n                                attr: { disabled: !can_change_type }\\\"\\n                                class=\\\"form-control input-sm\\\" id=\\\"post-type\\\"></select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-content-type\\\">Content type</label>\\n                            <select data-bind=\\\"value: content_type\\\"\\n                                class=\\\"form-control input-sm\\\" id=\\\"post-content-type\\\">\\n                                <option value=\\\"markdown\\\">Markdown</option>\\n                                <option value=\\\"raw\\\">Raw</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-author\\\">Author</label>\\n                            <select data-bind=\\\"value: author, options: authors,\\n                                optionsText: 'fullname', optionsValue: '$id',\\n                                attr: { disabled: !can_change_author }\\\"\\n                                class=\\\"form-control input-sm\\\" id=\\\"post-author\\\"></select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-language\\\">Language</label>\\n                            <select data-bind=\\\"value: language, options: languages,\\n                                optionsText: 'name', optionsValue: 'code'\\\"\\n                                class=\\\"form-control input-sm\\\" id=\\\"post-language\\\"></select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div data-bind=\\\"errors: errors.date\\\" class=\\\"form-group\\\">\\n                            <label for=\\\"post-date\\\">Publish date</label>\\n                            <input data-bind=\\\"textInput: date\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-date\\\"\\n                                placeholder=\\\"YYYY-MM-DD\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div data-bind=\\\"errors: errors.update\\\" class=\\\"form-group\\\">\\n                            <label for=\\\"post-update\\\">Update date</label>\\n                            <input data-bind=\\\"textInput: update\\\"\\n                                type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"post-update\\\"\\n                                placeholder=\\\"YYYY-MM-DD\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-8\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"post-description\\\">Description</label>\\n                            <textarea\\n                                data-bind=\\\"textInput: description\\\"\\n                                class=\\\"form-control input-sm\\\" rows=\\\"2\\\" id=\\\"post-description\\\" placeholder=\\\"Description\\\"></textarea>\\n                            <p class=\\\"help-block\\\">Description is used by search engines to show the page snippet.\\n                                It must not contain HTML.</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"checkbox\\\">\\n                            <label><input data-bind=\\\"checked: published,\\n                                attr: { disabled: !can_publish }\\\"\\n                                type=\\\"checkbox\\\" id=\\\"post-published\\\"> Published</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                        <div class=\\\"checkbox\\\">\\n                            <label><input data-bind=\\\"checked: commenting\\\"\\n                                type=\\\"checkbox\\\"> Commenting</label>\\n                        </div>\\n                    </div>\\n                </div>\\n                <hr>\\n            </div>\\n        <!-- /ko -->\\n        <!-- ko if: $root.files() -->\\n            <!-- ko if: can_manage_files -->\\n                <!-- ko if: !$id() -->\\n                    <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                        To upload files you need to save the entry first.\\n                    </div>\\n                <!-- /ko -->\\n                <!-- ko if: $id() -->\\n                    <!-- ko if: slug_changed() -->\\n                        <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                            You have changed the entry slug. File management is\\n                            re-enabled after saving the entry.\\n                        </div>\\n                    <!-- /ko -->\\n                    <!-- ko if: !slug_changed() -->\\n                        <!-- ko if: files().length === 0 -->\\n                            <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                                This entry has no files.\\n                            </div>\\n                        <!-- /ko -->\\n                        <div data-bind=\\\"foreach: files\\\" class=\\\"list-group\\\">\\n                            <li class=\\\"list-group-item post-item\\\">\\n                                <div data-bind=\\\"click: expand\\\" class=\\\"list-group-item-heading\\\">\\n                                    <span class=\\\"glyphicon glyphicon-file\\\"></span> <!-- ko text: name --><!-- /ko -->\\n                                </div>\\n                                <!-- ko if: expanded() -->\\n                                    URL: <!-- ko text: url --><!-- /ko -->\\n                                    <div class=\\\"post-controls\\\">\\n                                        <a data-bind=\\\"click: $parent.removeFile\\\"\\n                                            class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                                            <span class=\\\"glyphicon glyphicon-edit\\\"></span> Remove</a>\\n                                        <a data-bind=\\\"attr: { href: url }\\\" target=\\\"_blank\\\"\\n                                            class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                                            <span class=\\\"glyphicon glyphicon-eye-open\\\"></span> View (in new tab)</a>\\n                                        <a data-bind=\\\"click: $parent.insertLink\\\"\\n                                            class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                                            <span class=\\\"glyphicon glyphicon-pencil\\\"></span> Insert as link</a>\\n                                        <!-- ko if: image -->\\n                                            <a data-bind=\\\"click: $parent.insertImage\\\"\\n                                                class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                                                <span class=\\\"glyphicon glyphicon-pencil\\\"></span> Insert as image</a>\\n                                        <!-- /ko -->\\n                                    </div>\\n                                <!-- /ko -->\\n                            </li>\\n                        </div>\\n                        <div class=\\\"row bc-controls\\\">\\n                            <div class=\\\"col-sm-6\\\">\\n                                <div id=\\\"entry-file-wrap\\\">\\n                                    <input type=\\\"file\\\" id=\\\"entry-file\\\" class=\\\"form-control\\\" placeholder=\\\"Your file\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-6\\\">\\n                                <a data-bind=\\\"click: uploadFile\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n                                    <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\n                                </a>\\n                            </div>\\n                        </div>\\n                    <!-- /ko -->\\n                <!-- /ko -->\\n            <!-- /ko -->\\n            <!-- ko if: !can_manage_files -->\\n                <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                    To upload files you need file management permissions.\\n                </div>\\n            <!-- /ko -->\\n            <hr>\\n        <!-- /ko -->\\n        <!-- ko if: slug_changed() && $id() -->\\n            <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n                You must save the entry after modifying the slug. This will\\n                automatically fix images and links to files in the content.\\n            </div>\\n        <!-- /ko -->\\n        <div id=\\\"editor-wrap\\\">\\n            <div id=\\\"editor\\\"></div>\\n        </div>\\n    </form>\\n<!-- /ko -->\\n\"","var api = require('../api');\nvar view = require('../view');\nvar users_item = require('../vm/users_item');\nvar template = require('./users.html');\n\n// Page for displaying the users list.\nexports.create = function() {\n\n    var model = {\n        users: ko.observableArray([]),\n        permission: ko.observable(false)\n    };\n\n    return api.userInfo().then(function(info) {\n        if (info.type !== 'admin') {\n            view.show(template, model);\n        } else {\n            return api.users().then(function(users) {\n                model.users(users.map(function(data) {\n                    var user = users_item.create(data);\n                    user.editable = info.type === 'admin' || user.$id === info.$id;\n                    return user;\n                }));\n                model.permission(true);\n                view.show(template, model);\n            });\n        }\n    });\n};\n","var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// Creates user view model for\n// the users list view.\n\nexports.create = function(data) {\n\n    var user = {\n        editable: false\n    };\n\n    // Make it expandable.\n    expandable.mixin(user);\n\n    // Copies data attributes.\n    assign(user, data);\n\n    // Removes the user.\n    // Asks confirmation.\n    user.remove = function() {\n        if (confirm('Remove the user?')) {\n            api.userInfo().then(function(userInfo) {\n                return api.removeUser(user.$id).then(function() {\n                    message.info('User \"' + user.username + '\" has been removed.');\n                    if (userInfo.$id === user.$id) {\n                        // User removed itself.\n                        sessionStorage.removeItem('api-key');\n                        localStorage.removeItem('api-key');\n                        window.location = '/admin';\n                    } else {\n                        route.refresh();\n                    }\n                });\n            }).catch(message.error);\n        }\n    };\n\n    return user;\n};\n","module.exports = \"<h2>Users</h2>\\n<!-- ko if: !permission() -->\\n    <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n        You do not have permissions to manage users.\\n    </div>\\n<!-- /ko -->\\n<!-- ko if: permission() -->\\n    <ul data-bind=\\\"foreach: users\\\" class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item post-item\\\">\\n            <h4 data-bind=\\\"click: expand, text: fullname\\\" class=\\\"list-group-item-heading\\\"></h4>\\n            <div class=\\\"list-group-item-text\\\">\\n                Type: <span data-bind=\\\"text: type\\\"></span>,\\n                username: <span data-bind=\\\"text: username\\\"></span>\\n                <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls\\\">\\n                    <a data-bind=\\\"attr: { href: '#user/' + $id }, css: { disabled: !editable }\\\"\\n                        class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit\\n                    </a>\\n                    <a data-bind=\\\"click: remove, css: { disabled: !editable }\\\"\\n                        class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-remove\\\"></span> Remove\\n                    </a>\\n                </div>\\n            </div>\\n        </li>\\n    </ul>\\n    <a class=\\\"btn btn-default\\\" href=\\\"#user/new\\\">\\n        <span class=\\\"glyphicon glyphicon-plus\\\"></span> Add\\n    </a>\\n<!-- /ko -->\\n\"","var api = require('../api');\nvar view = require('../view');\nvar user = require('../vm/user');\nvar resolveObject = require('../resolve_object');\nvar template = require('./user.html');\n\n// Page for editing an user.\nexports.create = function(id) {\n\n    var model = {\n        user: ko.observable()\n    };\n\n    var requests = { roles: api.roles() };\n    if (id) {\n        requests.user = api.user(id);\n    }\n\n    return resolveObject(requests).then(function(data) {\n        model.user(user.create(data.roles, data.user));\n        view.show(template, model);\n        if (id) {\n            var fullname = document.querySelector('#user-fullname');\n            fullname.focus();\n            if (typeof fullname.setSelectionRange === 'function') {\n                fullname.setSelectionRange(0, fullname.value.length);\n            }\n        }\n    });\n};\n","var api = require('../api');\nvar message = require('../message');\n\nexports.create = function(roles, data) {\n\n    var user = {\n        username: ko.observable(''),\n        fullname: ko.observable(''),\n        type: ko.observable('author'),\n        link: ko.observable(''),\n        password: ko.observable(''),\n        password_edit: ko.observable(true),\n        password_text: ko.observable(false),\n        error: ko.observable(''),\n        creating: true,\n        roles: roles,\n        comment_notifications: ko.observable(false),\n        errors: {\n            username: ko.observableArray([]),\n            fullname: ko.observableArray([]),\n            password: ko.observableArray([]),\n            link: ko.observableArray([]),\n            type: ko.observableArray([])\n        },\n\n        save: function(form) {\n            // Clear errors.\n            Object.keys(user.errors).forEach(function(key) {\n                user.errors[key]([]);\n            });\n            if (user.password_edit()) {\n                var password = user.password();\n                if (password === '') {\n                    user.errors.password.push('Password is not set.');\n                } else if (password.length < 6) {\n                    user.errors.password.push('Password length must be at least 6.');\n                }\n            }\n            var username = user.username();\n            if (username === '') {\n                user.errors.username.push('Username is not set.');\n            } else {\n                if (!username.match(/^[^@]+@[^@]+$/)) {\n                    user.errors.username.push('Username must be an email address.');\n                }\n            }\n            var fullname = user.fullname();\n            if (fullname === '') {\n                user.errors.fullname.push('Full name is not set.');\n            }\n\n            var link = user.link();\n            if (link !== '') {\n                if (!link.match(/https?:\\/\\//)) {\n                    user.errors.link.push('Link must start with http:// or https:// prefix.');\n                }\n            }\n            var input = form.querySelector(\n                '.has-error input, .has-error textarea,' +\n                ' .has-error checkbox, .has-error select');\n            if (input) {\n                input.focus();\n                return false;\n            }\n            if (user.$id) {\n                api.updateUser(user.$id, user.toJS()).then(function() {\n                    message.info('User \"' + user.username() + '\" has been updated.');\n                    route.go('users');\n                }).catch(handleSaveError.bind(null, user));\n            } else {\n                api.saveUser(user.toJS()).then(function() {\n                    message.info('User \"' + user.username() + '\" has been added.');\n                    route.go('users');\n                }).catch(handleSaveError.bind(null, user));\n            }\n            return false;\n        },\n\n        toJS: function() {\n            var js = {\n                username: user.username(),\n                fullname: user.fullname(),\n                type: user.type(),\n                link: user.link(),\n                comment_notifications: user.comment_notifications()\n            };\n            if (user.password_edit()) {\n                js.password = user.password();\n            }\n            return js;\n        }\n    };\n\n    user.password_text.subscribe(function(value) {\n        if (value) {\n            document.getElementById('user-password').type = 'text';\n        } else {\n            document.getElementById('user-password').type = 'password';\n        }\n    });\n\n    if (data) {\n        user.$id = data.$id;\n        user.creating = false;\n        user.username(data.username);\n        user.fullname(data.fullname);\n        user.type(data.type);\n        user.link(data.link);\n        user.password_edit(false);\n        user.comment_notifications(data.comment_notifications);\n    } else {\n        user.fullname('Unnamed');\n    }\n\n    return user;\n};\n\nfunction handleSaveError(user, err) {\n    var string = err.toString();\n    if (string.match(/Cannot remove the last admin/)) {\n        user.errors.type.push('Cannot remove the last admin.');\n    } else if (string.match(/username exists/)) {\n        user.errors.username.push('The username exists.');\n    } else {\n        message.error(err);\n    }\n}\n","module.exports = \"<!-- ko with: user -->\\n    <h2 data-bind=\\\"text: fullname\\\"></h2>\\n\\n    <form data-bind=\\\"submit: save\\\" autocomplete=\\\"off\\\">\\n        <div data-bind=\\\"errors: errors.fullname\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-fullname\\\">Full name</label>\\n            <input data-bind=\\\"value: fullname\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-fullname\\\"\\n                placeholder=\\\"Full name\\\">\\n        </div>\\n        <div data-bind=\\\"errors: errors.username\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-username\\\">Username</label>\\n            <input data-bind=\\\"value: username\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-username\\\"\\n                placeholder=\\\"Username\\\">\\n        </div>\\n        <div data-bind=\\\"errors: errors.type\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-type\\\">Type</label>\\n            <select data-bind=\\\"value: type, options: roles,\\n                optionsText: 'label', optionsValue: 'name'\\\"\\n                class=\\\"form-control\\\" id=\\\"user-type\\\"></select>\\n        </div>\\n        <div data-bind=\\\"errors: errors.link\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-link\\\">Link</label>\\n            <input data-bind=\\\"value: link\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-link\\\"\\n                placeholder=\\\"Link\\\">\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n            <label><input data-bind=\\\"checked: comment_notifications\\\" type=\\\"checkbox\\\">\\n                Comment notifications</label>\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n            <label><input data-bind=\\\"checked: password_edit, disable: creating\\\" type=\\\"checkbox\\\">\\n                Edit password</label>\\n        </div>\\n        <div data-bind=\\\"visible: password_edit, errors: errors.password\\\" class=\\\"form-group\\\">\\n            <label for=\\\"user-password\\\">New password</label>\\n            <input data-bind=\\\"value: password\\\"\\n                type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"user-password\\\"\\n                placeholder=\\\"Password\\\">\\n            <div class=\\\"checkbox\\\">\\n                <label><input data-bind=\\\"checked: password_text\\\" type=\\\"checkbox\\\">\\n                    Show text</label>\\n            </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n            <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save\\n        </button>\\n        <a class=\\\"btn btn-default\\\" href=\\\"#users\\\">\\n            <span class=\\\"glyphicon glyphicon-arrow-left\\\"></span> Cancel\\n        </a>\\n    </form>\\n<!-- /ko -->\\n\"","var api = require('../api');\nvar view = require('../view');\nvar message = require('../message');\nvar resolveObject = require('../resolve_object');\nvar template = require('./email.html');\n\n// Page for editing email settings.\nexports.create = function(id) {\n\n    var model = {\n        email: ko.observable(),\n        permission: ko.observable(false),\n        editing: ko.observable(false),\n        smtp: ko.observable({}),\n        form: {\n            enabled: ko.observable(false),\n            host: ko.observable(''),\n            user: ko.observable(''),\n            password: ko.observable(''),\n            auth: ko.observable('login'),\n            security: ko.observable('none'),\n            from: ko.observable('admin@example.com'),\n            subject: ko.observable('Test mail'),\n            body: ko.observable('Test mail body')\n        },\n        errors: {\n            host: ko.observableArray([]),\n            user: ko.observableArray([]),\n            password: ko.observableArray([]),\n            from: ko.observableArray([]),\n            subject: ko.observableArray([]),\n            body: ko.observableArray([])\n        },\n        // Test error.\n        error: ko.observable(),\n        // Test info message.\n        info: ko.observable(),\n        // Flag to show password unmasked.\n        password_text: ko.observable(false)\n    };\n\n    // Saves settings and updates the\n    // read-only views of options.\n    model.save = function(form) {\n        clearErrors();\n        validateParams();\n        // Checks whether some input\n        // has error set.\n        if (!checkError(form)) {\n            return false;\n        }\n        var smtp = toSmtp(model.form);\n        api.updateConfig(toList(smtp)).then(function() {\n            model.smtp(smtp);\n            message.info('Mailing system parameters have been updated.');\n            route.refresh();\n        }).catch(message.error);\n    };\n\n    model.edit = function() {\n        model.editing(true);\n    };\n\n    // Tests the settings that are currently\n    // set in the editing form.\n    model.test = function() {\n        model.info(undefined);\n        model.error(undefined);\n        clearErrors();\n        validateParams();\n        validateTest();\n        var form = document.getElementById('smtp-config');\n        // Checks whether some input\n        // has error set.\n        if (!checkError(form)) {\n            return false;\n        }\n        var smtp = toSmtp(model.form);\n        api.testMail(smtp).then(function() {\n            model.info('Test mail sent successfully.');\n        }).catch(function(err) {\n            model.error('Mail testing failed: ' +\n                (err.jsendMessage ? err.jsendMessage : err.toString()));\n        });\n    };\n\n    // Cancels editing. Refreshes current page.\n    model.cancel = function() {\n        route.refresh();\n    };\n\n    // Clears current form errors.\n    function clearErrors() {\n        Object.keys(model.errors).forEach(function(key) {\n            model.errors[key]([]);\n        });\n    }\n\n    // Validates SMTP parameters.\n    function validateParams() {\n        var form = model.form;\n        if (form.host().match(/^\\s*$/)) {\n            model.errors.host.push('SMTP host name must be set.');\n        }\n        if (form.auth() === 'login') {\n            if (form.user().match(/^\\s*$/)) {\n                model.errors.user.push('SMTP user must be set for SMTP auth.');\n            }\n            if (form.password().match(/^\\s*$/)) {\n                model.errors.password.push('SMTP password must be set for SMTP auth.');\n            }\n        }\n        if (form.from().match(/^\\s*$/)) {\n            model.errors.from.push('Notification sender mail must be set.');\n        } else {\n            if (!form.from().match(/^[^@]+@[^@]+$/)) {\n                model.errors.from.push('Notification sender mail must be a valid mail address.');\n            }\n        }\n    }\n\n    // Validates test parameters.\n    function validateTest() {\n        var form = model.form;\n        if (form.subject().match(/^\\s*$/)) {\n            model.errors.subject.push('Test mail subject must be set.');\n        }\n        if (form.body().match(/^\\s*$/)) {\n            model.errors.body.push('Test mail body must be set.');\n        }\n    }\n\n    // Checks for errors on the form\n    // elements. Focuses on the first\n    // input with an error.\n    function checkError(form) {\n        var input = form.querySelector(\n            '.has-error input, .has-error textarea,' +\n            ' .has-error checkbox, .has-error select');\n        if (input) {\n            input.focus();\n            return false;\n        }\n        return true;\n    }\n\n    return api.userInfo().then(function(info) {\n        if (info.type !== 'admin') {\n            view.show(template, model);\n        } else {\n            return api.config().then(function(config) {\n                var smtp = extract(config);\n                model.smtp(smtp);\n                toForm(smtp, model.form);\n                model.permission(true);\n                view.show(template, model);\n            });\n        }\n    });\n};\n\n// Extracts SMTP settings from\n// generic config entries.\nfunction extract(config) {\n    var obj = {};\n    config.forEach(function(entry) {\n        obj[entry.name] = entry.value;\n    });\n    return {\n        enabled: obj.smtp_enabled,\n        host: obj.smtp_host,\n        user: obj.smtp_user,\n        password: obj.smtp_password,\n        auth: obj.smtp_auth,\n        security: obj.smtp_security,\n        from: obj.smtp_from\n    };\n}\n\n// Sets form values based on\n// smtp values.\nfunction toForm(smtp, form) {\n    Object.keys(smtp).forEach(function(key) {\n        form[key](smtp[key]);\n    });\n}\n\n// Creates new object with\n// values from the form binding\n// object.\nfunction toSmtp(form) {\n    var smtp = {};\n    Object.keys(form).forEach(function(key) {\n        smtp[key] = form[key]();\n    });\n    return smtp;\n}\n\n// Turns the SMTP configuration\n// object into a list of configuration\n// entries.\nfunction toList(smtp) {\n    return [\n        { name: 'smtp_enabled', value: smtp.enabled },\n        { name: 'smtp_host', value: smtp.host },\n        { name: 'smtp_user', value: smtp.user },\n        { name: 'smtp_password', value: smtp.password },\n        { name: 'smtp_auth', value: smtp.auth },\n        { name: 'smtp_security', value: smtp.security },\n        { name: 'smtp_from', value: smtp.from }\n    ];\n}\n","module.exports = \"<h2>Email settings</h2>\\n<!-- ko if: !permission() -->\\n    <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n        You do not have permissions to edit email settings.\\n    </div>\\n<!-- /ko -->\\n<!-- ko if: permission() -->\\n    <!-- ko with: smtp -->\\n        <div class=\\\"row bc-margin-top\\\">\\n            <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                <strong>Enabled</strong></div>\\n            <div data-bind=\\\"text: (enabled ? 'yes' : 'no')\\\"\\n                class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                <strong>SMTP host</strong></div>\\n            <div data-bind=\\\"text: host\\\"\\n                class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                <strong>SMTP auth</strong></div>\\n            <div data-bind=\\\"text: auth\\\"\\n                class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n        </div>\\n        <!-- ko if: auth === 'login' -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                    <strong>SMTP user</strong></div>\\n                <div data-bind=\\\"text: (user === '' ? 'not set' : user)\\\"\\n                    class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                    <strong>SMTP password</strong></div>\\n                <div data-bind=\\\"text: (password === '' ? 'not set' : 'not shown')\\\"\\n                    class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n            </div>\\n        <!-- /ko -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                <strong>SMTP security</strong></div>\\n            <div data-bind=\\\"text: security\\\"\\n                class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                <strong>SMTP from</strong></div>\\n            <div data-bind=\\\"text: from\\\"\\n                class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n        </div>\\n    <!-- /ko -->\\n    <div class=\\\"row bc-margin-top\\\">\\n        <div class=\\\"col-md-4 col-sm-5 col-xs-8 col-md-offset-2 col-sm-offset-3 col-xs-offset-4\\\">\\n            <a href=\\\"#\\\" data-bind=\\\"click: edit\\\" class=\\\"btn btn-default\\\">\\n                <span class=\\\"glyphicon glyphicon-pencil\\\"></span> Edit</a>\\n        </div>\\n    </div>\\n    <!-- ko if: editing() -->\\n        <hr>\\n        <form data-bind=\\\"submit: save\\\" autocomplete=\\\"off\\\" id=\\\"smtp-config\\\">\\n            <div class=\\\"checkbox\\\">\\n                <label><input data-bind=\\\"checked: form.enabled\\\" type=\\\"checkbox\\\">\\n                    Mail system enabled</label>\\n            </div>\\n            <div data-bind=\\\"errors: errors.host\\\" class=\\\"form-group\\\">\\n                <label for=\\\"smtp-host\\\">SMTP host</label>\\n                <input data-bind=\\\"textInput: form.host\\\"\\n                    type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"smtp-host\\\"\\n                    placeholder=\\\"SMTP server hostname\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"smtp-auth\\\">SMTP authentication method</label>\\n                <select data-bind=\\\"value: form.auth\\\" id=\\\"smtp-auth\\\"\\n                    class=\\\"form-control\\\">\\n                    <option value=\\\"plain\\\">Plain</option>\\n                    <option value=\\\"login\\\">Login</option>\\n                </select>\\n            </div>\\n            <div data-bind=\\\"errors: errors.user\\\" class=\\\"form-group\\\">\\n                <label for=\\\"smtp-user\\\">SMTP user</label>\\n                <input data-bind=\\\"textInput: form.user,\\n                        disable: form.auth() === 'plain'\\\"\\n                    type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"smtp-user\\\"\\n                    placeholder=\\\"SMTP server user\\\">\\n            </div>\\n            <div data-bind=\\\"errors: errors.password\\\" class=\\\"form-group\\\">\\n                <label for=\\\"smtp-password\\\">SMTP password</label>\\n                <input data-bind=\\\"textInput: form.password,\\n                        disable: form.auth() === 'plain',\\n                        attr: { type: password_text() ? 'text' : 'password' }\\\"\\n                    type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"smtp-password\\\"\\n                    placeholder=\\\"SMTP server password\\\">\\n            </div>\\n            <div class=\\\"checkbox\\\">\\n                <label><input data-bind=\\\"checked: password_text\\\" type=\\\"checkbox\\\">\\n                    Show text</label>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"smtp-security\\\">SMTP security</label>\\n                <select data-bind=\\\"value: form.security\\\" id=\\\"smtp-security\\\"\\n                    class=\\\"form-control\\\">\\n                    <option value=\\\"none\\\">None</option>\\n                    <option value=\\\"ssl\\\">SSL</option>\\n                    <option value=\\\"tls\\\">TLS</option>\\n                    <option value=\\\"starttls\\\">STARTTLS</option>\\n                </select>\\n            </div>\\n            <div data-bind=\\\"errors: errors.from\\\" class=\\\"form-group\\\">\\n                <label for=\\\"smtp-from\\\">Notification sender email (From)</label>\\n                <input data-bind=\\\"textInput: form.from\\\"\\n                    type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"smtp-form\\\"\\n                    placeholder=\\\"Mail sender address\\\">\\n            </div>\\n            <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n                New SMTP settings should be tested before saving. The\\n                test email will be sent to the current user's mail address.\\n            </div>\\n            <!-- ko if: !!error() -->\\n                <div data-bind=\\\"text: error\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\"></div>\\n            <!-- /ko -->\\n            <!-- ko if: !!info() -->\\n                <div data-bind=\\\"text: info\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\"></div>\\n            <!-- /ko -->\\n            <div data-bind=\\\"errors: errors.subject\\\" class=\\\"form-group\\\">\\n                <label for=\\\"smtp-subject\\\">Test mail subject</label>\\n                <input data-bind=\\\"textInput: form.subject\\\"\\n                    type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"smtp-subject\\\"\\n                    placeholder=\\\"Test mail subject\\\">\\n            </div>\\n            <div data-bind=\\\"errors: errors.body\\\" class=\\\"form-group\\\">\\n                <label for=\\\"smtp-body\\\">Test mail body</label>\\n                <textarea data-bind=\\\"textInput: form.body\\\"\\n                    placeholder=\\\"Test mail body\\\" rows=\\\"3\\\"\\n                    class=\\\"form-control\\\" id=\\\"smtp-body\\\"></textarea>\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n                <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save\\n            </button>\\n            <a data-bind=\\\"click: test\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n                <span class=\\\"glyphicon glyphicon-envelope\\\"></span> Test</a>\\n            <a data-bind=\\\"click: cancel\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n                <span class=\\\"glyphicon glyphicon-remove\\\"></span> Cancel</a>\\n        </form>\\n    <!-- /ko -->\\n<!-- /ko -->\\n\"","var api = require('../api');\nvar view = require('../view');\nvar resolveObject = require('../resolve_object');\nvar comments_item = require('../vm/comments_item');\nvar template = require('./comments.html');\n\n// Page for the comments list.\nexports.create = function(type, id) {\n\n    var model = {\n        title: ko.observable(),\n        comments: ko.observable([])\n    };\n\n    var requests = {\n        entryInfo: api.entryInfo(id),\n        userInfo: api.userInfo(id),\n        typeInfo: api.typeInfo(type),\n        comments: api.comments(id)\n    };\n\n    function flatten(comments) {\n        var flat = [];\n        flattenRec(comments, flat, 0);\n        return flat;\n    }\n\n    function flattenRec(comments, list, depth) {\n        comments.forEach(function(comment) {\n            comment.depth = depth;\n            list.push(comment);\n            flattenRec(comment.replies, list, depth + 1);\n        });\n    }\n    \n    return resolveObject(requests).then(function(data) {\n        model.title(data.entryInfo.title);\n        model.comments(flatten(data.comments).map(function(comment) {\n            return comments_item.create(comment,\n                data.userInfo, data.entryInfo, data.typeInfo);\n        }));\n        view.show(template, model);\n    });\n};\n","var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\n\n// View Model for a comment.\n\nexports.create = function(data, userInfo, entryInfo, typeInfo) {\n    var comment = {};\n    // Copies data attributes.\n    assign(comment, data);\n    comment.removable = false;\n    if (userInfo.type === 'admin') {\n        comment.removable = true;\n    }\n    if (typeInfo.grants.indexOf('update_any') >= 0) {\n        comment.removable = true;\n    }\n    if (typeInfo.grants.indexOf('update_own') >= 0) {\n        if (entryInfo.author === userInfo.$id) {\n            comment.removable = true;\n        }\n    }\n    comment.remove = function() {\n        if (confirm('Remove the comment?')) {\n            api.removeComment(entryInfo.$id, comment.$id).then(function() {\n                message.info('The comment has been removed.');\n                route.refresh();\n            }).catch(message.error);\n        }\n    };\n    return comment;\n};\n","module.exports = \"<h2 data-bind=\\\"text: title\\\"></h2>\\n<h3>Comments</h3>\\n<ul data-bind=\\\"foreach: comments\\\" class=\\\"list-group\\\">\\n    <li data-bind=\\\"style: { 'padding-left': (15 * (depth + 1)) + 'px' }\\\"\\n        class=\\\"list-group-item post-item\\\">\\n        <h4 data-bind=\\\"text: author\\\" class=\\\"list-group-item-heading\\\"></h4>\\n        <div class=\\\"list-group-item-text\\\">\\n            Date: <span data-bind=\\\"text: formatDate(date)\\\"></span>\\n            <div class=\\\"post-controls\\\">\\n                <div class=\\\"panel panel-default\\\">\\n                    <div data-bind=\\\"text: content\\\" class=\\\"panel-body\\\"></div>\\n                </div>\\n                <!-- ko if: removable -->\\n                    <a data-bind=\\\"click: remove\\\" class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                        <span class=\\\"glyphicon glyphicon-remove\\\"></span> Remove\\n                    </a>\\n                <!-- /ko -->\\n            </div>\\n        </div>\\n    </li>\\n</ul>\\n<!-- ko if: comments().length === 0 -->\\n    <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n        This entry has no comments.\\n    </div>\\n<!-- /ko -->\\n\"","var api = require('../api');\nvar view = require('../view');\nvar message = require('../message');\nvar trash_item = require('../vm/trash_item');\nvar template = require('./trash.html');\n\n// Page for displaying the trash list.\nexports.create = function() {\n\n    var model = {\n        items: ko.observableArray([])\n    };\n\n    model.purge = function() {\n        if (confirm('Purge trash?')) {\n            api.purge().then(function() {\n                message.info('Trash is purged.');\n                route.refresh();\n            }).catch(message.error);\n        }\n    };\n    \n    return api.trash().then(function(items) {\n        model.items(items.map(function(data) {\n            return trash_item.create(data);\n        }));\n        view.show(template, model);\n    });\n};\n","var api = require('../api');\nvar assign = require('../assign');\nvar message = require('../message');\nvar expandable = require('./expandable');\n\n// Creates trash item view model.\n\nexports.create = function(data) {\n\n    var item = {};\n\n    // Make it expandable.\n    expandable.mixin(item);\n\n    // Copies data attributes.\n    assign(item, data);\n\n    // Removes from trash.\n    item.remove = function() {\n        if (confirm('Remove the entry from trash?')) {\n            api.removeFromTrash(item.$id).then(function() {\n                message.info('Item \"' + item.title + '\" has been removed.');\n                route.refresh();\n            }).catch(message.error);\n        }\n    };\n\n    // Restores the item.\n    item.restore = function() {\n        api.restore(item.$id).then(function() {\n            message.info('Item \"' + item.title + '\" has been restored.');\n            route.refresh();\n        }).catch(message.error);\n    };\n\n    return item;\n};\n","module.exports = \"<h2>Trash</h2>\\n<!-- ko if: items().length === 0 -->\\n    <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n        Trash has no entries.\\n    </div>\\n<!-- /ko -->\\n<ul data-bind=\\\"foreach: items\\\" class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item post-item\\\">\\n        <h4 data-bind=\\\"click: expand, text: title\\\" class=\\\"list-group-item-heading\\\"></h4>\\n        <div class=\\\"list-group-item-text\\\">\\n            Type: <span data-bind=\\\"text: type\\\"></span>\\n            <div data-bind=\\\"visible: expanded\\\" class=\\\"post-controls\\\">\\n                <a data-bind=\\\"click: remove\\\" class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                    <span class=\\\"glyphicon glyphicon-remove\\\"></span> Remove\\n                </a>\\n                <a data-bind=\\\"click: restore\\\" class=\\\"btn btn-default btn-sm\\\" href=\\\"#\\\">\\n                    <span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span> Restore\\n                </a>\\n            </div>\\n        </div>\\n    </li>\\n</ul>\\n<a data-bind=\\\"click: purge\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n    <span class=\\\"glyphicon glyphicon-remove\\\"></span> Purge trash\\n</a>\\n\"","var api = require('../api');\nvar view = require('../view');\nvar message = require('../message');\nvar resolveObject = require('../resolve_object');\nvar template = require('./config.html');\n\n// Page for editing email settings.\nexports.create = function(id) {\n\n    var model = {\n        permission: ko.observable(false),\n        editing: ko.observable(false),\n        config: ko.observable({}),\n        form: {\n            site: ko.observable(''),\n            title: ko.observable('')\n        },\n        errors: {\n            site: ko.observableArray([]),\n            title: ko.observableArray([])\n        }\n    };\n\n    // Saves settings and updates the\n    // read-only views of options.\n    model.save = function(form) {\n        clearErrors();\n        validateParams();\n        // Checks whether some input\n        // has error set.\n        if (!checkError(form)) {\n            return false;\n        }\n        var config = toConfig(model.form);\n        api.updateConfig(toList(config)).then(function() {\n            model.config(config);\n            message.info('Configuration updated.');\n            route.refresh();\n        }).catch(message.error);\n    };\n\n    model.edit = function() {\n        model.editing(true);\n    };\n\n    // Cancels editing. Refreshes current page.\n    model.cancel = function() {\n        route.refresh();\n    };\n\n    // Clears current form errors.\n    function clearErrors() {\n        Object.keys(model.errors).forEach(function(key) {\n            model.errors[key]([]);\n        });\n    }\n\n    // Validates parameters.\n    function validateParams() {\n        var form = model.form;\n        if (form.site() === '') {\n            model.errors.site.push('Site base URL must be set.');\n        } else {\n            if (!form.site().match(/^https?:\\/\\//)) {\n                model.errors.site.push('Site base URL must start with http:// or https://.');\n            }\n            if (form.site().match(/\\/$/)) {\n                model.errors.site.push('Site base URL must not end with /.');\n            }\n        }\n    }\n\n    // Checks for errors on the form\n    // elements. Focuses on the first\n    // input with an error.\n    function checkError(form) {\n        var input = form.querySelector(\n            '.has-error input, .has-error textarea,' +\n            ' .has-error checkbox, .has-error select');\n        if (input) {\n            input.focus();\n            return false;\n        }\n        return true;\n    }\n\n    return api.userInfo().then(function(info) {\n        if (info.type !== 'admin') {\n            view.show(template, model);\n        } else {\n            return api.config().then(function(data) {\n                var config = extract(data);\n                model.config(config);\n                toForm(config, model.form);\n                model.permission(true);\n                view.show(template, model);\n            });\n        }\n    });\n};\n\n// Extracts supported config settings from\n// generic config entries.\nfunction extract(config) {\n    var obj = {};\n    config.forEach(function(entry) {\n        obj[entry.name] = entry.value;\n    });\n    return {\n        site: obj.site,\n        title: obj.title\n    };\n}\n\n// Sets form values based on\n// config values.\nfunction toForm(config, form) {\n    Object.keys(config).forEach(function(key) {\n        form[key](config[key]);\n    });\n}\n\n// Creates new object with\n// values from the form binding\n// object.\nfunction toConfig(form) {\n    var config = {};\n    Object.keys(form).forEach(function(key) {\n        config[key] = form[key]();\n    });\n    return config;\n}\n\n// Turns the configuration\n// object into a list of configuration\n// entries.\n\nfunction toList(config) {\n    return [\n        { name: 'site', value: config.site },\n        { name: 'title', value: config.title }\n    ];\n}\n","module.exports = \"<h2>Configuration</h2>\\n<!-- ko if: !permission() -->\\n    <div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\n        You do not have permissions to edit configuration.\\n    </div>\\n<!-- /ko -->\\n<!-- ko if: permission() -->\\n    <!-- ko with: config -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                <strong>Site base URL</strong></div>\\n            <div data-bind=\\\"text: site\\\"\\n                class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 col-sm-3 col-xs-4 text-right\\\">\\n                <strong>Title</strong></div>\\n            <div data-bind=\\\"text: title\\\"\\n                class=\\\"col-md-4 col-sm-5 col-xs-8\\\"></div>\\n        </div>\\n    <!-- /ko -->\\n    <div class=\\\"row bc-margin-top\\\">\\n        <div class=\\\"col-md-4 col-sm-5 col-xs-8 col-md-offset-2 col-sm-offset-3 col-xs-offset-4\\\">\\n            <a href=\\\"#\\\" data-bind=\\\"click: edit\\\" class=\\\"btn btn-default\\\">\\n                <span class=\\\"glyphicon glyphicon-pencil\\\"></span> Edit</a>\\n        </div>\\n    </div>\\n    <!-- ko if: editing() -->\\n        <hr>\\n        <form data-bind=\\\"submit: save\\\" autocomplete=\\\"off\\\" id=\\\"config-form\\\">\\n            <div data-bind=\\\"errors: errors.site\\\" class=\\\"form-group\\\">\\n                <label for=\\\"config-site\\\">Site base URL</label>\\n                <input data-bind=\\\"textInput: form.site\\\"\\n                    type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"config-site\\\"\\n                    placeholder=\\\"Site base URL\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"config-title\\\">Title</label>\\n                <input data-bind=\\\"textInput: form.title\\\"\\n                    type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"config-title\\\"\\n                    placeholder=\\\"Site title\\\">\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n                <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save\\n            </button>\\n            <a data-bind=\\\"click: cancel\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\">\\n                <span class=\\\"glyphicon glyphicon-remove\\\"></span> Cancel</a>\\n        </form>\\n    <!-- /ko -->\\n<!-- /ko -->\\n\"","function setErrors(element, valueAccessor) {\n    var value = ko.unwrap(valueAccessor());\n    if (value.length > 0) {\n        var span = element.querySelector('.ko-input-error');\n        if (!span) {\n            // No existing error display.\n            if (!element.className.match(/has\\-error/)) {\n                element.className = element.className + ' has-error';\n            }\n            span = document.createElement('span');\n            span.className = 'help-block ko-input-error';\n            // Finds the holder element.\n            var holder = element.querySelector('.checkbox');\n            if (!holder) {\n                holder = element.querySelector('.form-control');\n            }\n            holder.parentNode.appendChild(span);\n        }\n        // Update errors display.\n        span.innerHTML = value.join(' ');\n    } else {\n        // Removes error class and messages.\n        element.className = element.className.replace(/has\\-error/, '');\n        element.className = element.className.replace(/\\s+/, ' ');\n        var error = element.querySelector('.ko-input-error');\n        if (error) {\n            error.parentNode.removeChild(error);\n        }\n    }\n}\n\n// Defines the errors binding.\nko.bindingHandlers.errors = {\n    init: function(element, valueAccessor) {\n        setErrors(element, valueAccessor);\n    },\n    update: function(element, valueAccessor, allBindings) {\n        setErrors(element, valueAccessor);\n    }\n};\n"],"sourceRoot":""}