(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
function authenticated(){return api.hasKey()?(menu.load()["catch"](message.error),!0):(route.go("login"),!1)}function recovery(){var e=localStorage.getItem("autosave");if(e){var r=JSON.parse(e);if(localStorage.removeItem("autosave"),confirm('You have unsaved entry "'+r.title+'", would you like to recover it?'))return recovered=r,route.go("recover"),!0}return!1}var api=require("./lib/api"),message=require("./lib/message"),login=require("./lib/pages/login"),posts=require("./lib/pages/posts"),post=require("./lib/pages/post"),users=require("./lib/pages/users"),user=require("./lib/pages/user"),email=require("./lib/pages/email"),comments=require("./lib/pages/comments"),trash=require("./lib/pages/trash");require("./lib/form_error"),window.formatDate=function(e){return new Date(1e3*e).toISOString().substring(0,10)};var menu={active:ko.observable(),types:ko.observable(),load:function(){return menu.types()?Promise.resolve(menu.types()):api.types().then(function(e){return menu.types(e),e})}};ko.applyBindings(menu,document.getElementById("menu"));var recovered;route(/^recover$/,function(){authenticated()&&!recovery()&&(recovered?recovered.$id?route.go("entry/"+recovered.type+"/"+recovered.$id):route.go("new/"+recovered.type):route.go("landing"))}),route(/^entries\/([^\/]+)/,function(e){authenticated()&&!recovery()&&(menu.active(e),posts.create(e)["catch"](message.error))}),route(/^entry\/([^\/]+)\/([^\/]+)/,function(e,r){authenticated()&&!recovery()&&(menu.active(e),post.create(e,r,recovered)["catch"](message.error),recovered=void 0)}),route(/^new\/([^\/]+)/,function(e){authenticated()&&!recovery()&&(menu.active(e),post.create(e,null,recovered)["catch"](message.error),recovered=void 0)}),route(/^comments\/([^\/]+)\/([^\/]+)/,function(e,r){authenticated()&&!recovery()&&(menu.active(e),comments.create(e,r)["catch"](message.error))}),route(/^trash/,function(){authenticated()&&!recovery()&&(menu.active("trash"),trash.create()["catch"](message.error))}),route(/^users/,function(){authenticated()&&!recovery()&&(menu.active("users"),users.create()["catch"](message.error))}),route(/^user\/new/,function(){authenticated()&&!recovery()&&(menu.active("users"),user.create()["catch"](message.error))}),route(/^user\/([^\/]+)/,function(e){authenticated()&&!recovery()&&(menu.active("users"),user.create(e)["catch"](message.error))}),route(/^login/,function(){menu.active(null),login.create()["catch"](message.error)}),route(/^email/,function(){authenticated()&&!recovery()&&(menu.active("email"),email.create()["catch"](message.error))}),route(/^logout/,function(){sessionStorage.removeItem("api-key"),localStorage.removeItem("api-key"),window.location="/admin"}),route(/^landing/,function(){menu.active(null),menu.load().then(function(e){e.length>0&&route.go("entries/"+e[0].name)})["catch"](message.error)}),route(/.*/,function(){route.go(api.hasKey()?"landing":"login")}),document.body.addEventListener("click",function(e){return e.target.href&&e.target.href.match(/#logout$/)?confirm("Do you want to log out?")?!0:(e.stopPropagation(),e.preventDefault(),!1):void 0},!1);


},{"./lib/api":2,"./lib/form_error":5,"./lib/message":7,"./lib/pages/comments":8,"./lib/pages/email":9,"./lib/pages/login":10,"./lib/pages/post":11,"./lib/pages/posts":12,"./lib/pages/trash":13,"./lib/pages/user":14,"./lib/pages/users":15}],2:[function(require,module,exports){
function spinnerShow(){0===showCount&&spinner.show(),showCount+=1}function spinnerHide(){showCount-=1,0===showCount&&spinner.hide()}function fetchGet(e){return spinnerShow(),fetch(e,{headers:{Accept:"application/json","X-Key":apiKey()}})["catch"](function(e){throw spinnerHide(),e}).then(handleResponse)}function fetchDelete(e){return spinnerShow(),fetch(e,{method:"DELETE",headers:{Accept:"application/json","X-Key":apiKey()}})["catch"](function(e){throw spinnerHide(),e}).then(handleResponse)}function fetchPost(e,t,n){spinnerShow();var o={Accept:"application/json","Content-Type":"application/json"};return n||(o["X-Key"]=apiKey()),fetch(e,{method:"POST",headers:o,body:JSON.stringify(t)})["catch"](function(e){throw spinnerHide(),e}).then(handleResponse)}function fetchUpdate(e,t){return spinnerShow(),fetch(e,{method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json","X-Key":apiKey()},body:JSON.stringify(t)})["catch"](function(e){throw spinnerHide(),e}).then(handleResponse)}function fetchUploadFile(e,t){return spinnerShow(),fetch(e,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/octet-stream","X-Key":apiKey(),"X-File-Name":t.name},body:t})["catch"](function(e){throw spinnerHide(),e}).then(handleResponse)}function handleResponse(e){return spinnerHide(),e.json().then(function(e){if("success"===e.status)return e.data;var t=new Error("API response is not success: "+e.message);throw t.jsendMessage=e.message,t})}var spinner=require("./spinner"),showCount=0;exports.upload=function(e,t){return fetchUploadFile("/api/upload/"+encodeURIComponent(e),t)},exports.login=function(e,t){return fetchPost("/api/auth",{username:e,password:t},!0)},exports.posts=function(e){return fetchGet("/api/entries/"+encodeURIComponent(e))},exports.post=function(e){return fetchGet("/api/entry/"+encodeURIComponent(e))},exports.entryInfo=function(e){return fetchGet("/api/entry/"+encodeURIComponent(e)+"/info")},exports.comments=function(e){return fetchGet("/api/post/"+encodeURIComponent(e)+"/comments")},exports.removeComment=function(e,t){return fetchDelete("/api/comment/"+encodeURIComponent(e)+"/"+encodeURIComponent(t))},exports.updatePost=function(e,t){return fetchUpdate("/api/entry/"+encodeURIComponent(e),t)},exports.savePost=function(e){return fetchPost("/api/entry",e)},exports.removePost=function(e){return fetchDelete("/api/entry/"+encodeURIComponent(e))},exports.files=function(e){return fetchGet("/api/files/"+encodeURIComponent(e))},exports.removeFile=function(e,t){return fetchDelete("/api/file/"+encodeURIComponent(e)+"/"+encodeURIComponent(t))},exports.users=function(){return fetchGet("/api/users")},exports.user=function(e){return fetchGet("/api/user/"+encodeURIComponent(e))},exports.userInfo=function(){return fetchGet("/api/user/info")},exports.updateUser=function(e,t){return fetchUpdate("/api/user/"+encodeURIComponent(e),t)},exports.saveUser=function(e){return fetchPost("/api/user",e)},exports.removeUser=function(e){return fetchDelete("/api/user/"+encodeURIComponent(e))},exports.types=function(){return fetchGet("/api/types")},exports.typeInfo=function(e){return fetchGet("/api/type/"+encodeURIComponent(e))},exports.roles=function(){return fetchGet("/api/roles")},exports.trash=function(){return fetchGet("/api/trash")},exports.removeFromTrash=function(e){return fetchDelete("/api/trash/"+encodeURIComponent(e))},exports.purge=function(){return fetchDelete("/api/trash")},exports.restore=function(e){return fetchUpdate("/api/restore/"+encodeURIComponent(e))},exports.config=function(){return fetchGet("/api/configs")},exports.updateConfig=function(e){return fetchUpdate("/api/configs",e)},exports.testMail=function(e){return fetchPost("/api/mail/test",e)},exports.tags=function(e){return fetchGet("/api/tags/"+encodeURIComponent(e)+"/all")},exports.imageSize=function(e,t){return fetchGet("/api/image/size/"+encodeURIComponent(e)+"/"+encodeURIComponent(t))},exports.hasKey=function(){return!(!sessionStorage.getItem("api-key")&&!localStorage.getItem("api-key"))};var apiKey=exports.apiKey=function(){var e=sessionStorage.getItem("api-key")||localStorage.getItem("api-key");if(!e)throw new Error("API key is not set");return e};


},{"./spinner":18}],3:[function(require,module,exports){
module.exports=function(o,c){Object.keys(c).forEach(function(e){o[e]=c[e]})};


},{}],4:[function(require,module,exports){
var editor;exports.enable=function(){editor=ace.edit("editor"),editor.$blockScrolling=1/0,editor.container.style.lineHeight=1.5,editor.setOptions({maxLines:1/0,showLineNumbers:!1,wrap:!0,showPrintMargin:!1,showFoldWidgets:!1,showGutter:!1,displayIndentGuides:!1,fontSize:14,fontFamily:"monospace",useSoftTabs:!0,tabSize:2}),editor.setTheme("ace/theme/github"),editor.getSession().setMode("ace/mode/markdown")},exports.setSoftWrap=function(e){editor&&editor.getSession().setWrapLimitRange(e,e)},exports.begin=function(e){editor.setValue(e),editor.getSession().setUndoManager(new ace.UndoManager),editor.focus(),editor.gotoLine(1)},exports.change=function(e){editor.on("change",e)},exports.focus=function(){editor.focus()},exports.content=function(){return editor.getValue()},exports.insert=function(e){editor&&editor.insert(e)},exports.setValue=function(e){editor&&editor.setValue(e)},exports.dispose=function(){editor&&(editor.destroy(),editor=null)};


},{}],5:[function(require,module,exports){
function setErrors(e,r){var a=ko.unwrap(r());if(a.length>0){var o=e.querySelector(".ko-input-error");if(!o){e.className.match(/has\-error/)||(e.className=e.className+" has-error"),o=document.createElement("span"),o.className="help-block ko-input-error";var s=e.querySelector(".checkbox");s||(s=e.querySelector(".form-control")),s.parentNode.appendChild(o)}o.innerHTML=a.join(" ")}else{e.className=e.className.replace(/has\-error/,""),e.className=e.className.replace(/\s+/," ");var n=e.querySelector(".ko-input-error");n&&n.parentNode.removeChild(n)}}ko.bindingHandlers.errors={init:function(e,r){setErrors(e,r)},update:function(e,r,a){setErrors(e,r)}};


},{}],6:[function(require,module,exports){
module.exports=[{code:"ab",name:"Abkhaz"},{code:"aa",name:"Afar"},{code:"af",name:"Afrikaans"},{code:"ak",name:"Akan"},{code:"sq",name:"Albanian"},{code:"am",name:"Amharic"},{code:"ar",name:"Arabic"},{code:"an",name:"Aragonese"},{code:"hy",name:"Armenian"},{code:"as",name:"Assamese"},{code:"av",name:"Avaric"},{code:"ae",name:"Avestan"},{code:"ay",name:"Aymara"},{code:"az",name:"Azerbaijani"},{code:"bm",name:"Bambara"},{code:"ba",name:"Bashkir"},{code:"eu",name:"Basque"},{code:"be",name:"Belarusian"},{code:"bn",name:"Bengali"},{code:"bh",name:"Bihari"},{code:"bi",name:"Bislama"},{code:"bs",name:"Bosnian"},{code:"br",name:"Breton"},{code:"bg",name:"Bulgarian"},{code:"my",name:"Burmese"},{code:"ca",name:"Catalan; Valencian"},{code:"ch",name:"Chamorro"},{code:"ce",name:"Chechen"},{code:"ny",name:"Chichewa; Chewa; Nyanja"},{code:"zh",name:"Chinese"},{code:"cv",name:"Chuvash"},{code:"kw",name:"Cornish"},{code:"co",name:"Corsican"},{code:"cr",name:"Cree"},{code:"hr",name:"Croatian"},{code:"cs",name:"Czech"},{code:"da",name:"Danish"},{code:"dv",name:"Divehi; Dhivehi; Maldivian;"},{code:"nl",name:"Dutch"},{code:"en",name:"English"},{code:"eo",name:"Esperanto"},{code:"et",name:"Estonian"},{code:"ee",name:"Ewe"},{code:"fo",name:"Faroese"},{code:"fj",name:"Fijian"},{code:"fi",name:"Finnish"},{code:"fr",name:"French"},{code:"ff",name:"Fula; Fulah; Pulaar; Pular"},{code:"gl",name:"Galician"},{code:"ka",name:"Georgian"},{code:"de",name:"German"},{code:"el",name:"Greek, Modern"},{code:"gn",name:"Guaraní"},{code:"gu",name:"Gujarati"},{code:"ht",name:"Haitian; Haitian Creole"},{code:"ha",name:"Hausa"},{code:"he",name:"Hebrew (modern)"},{code:"hz",name:"Herero"},{code:"hi",name:"Hindi"},{code:"ho",name:"Hiri Motu"},{code:"hu",name:"Hungarian"},{code:"is",name:"Icelandic"},{code:"io",name:"Ido"},{code:"ig",name:"Igbo"},{code:"id",name:"Indonesian"},{code:"ia",name:"Interlingua"},{code:"ie",name:"Interlingue"},{code:"iu",name:"Inuktitut"},{code:"ik",name:"Inupiaq"},{code:"ga",name:"Irish"},{code:"it",name:"Italian"},{code:"ja",name:"Japanese"},{code:"jv",name:"Javanese"},{code:"kl",name:"Kalaallisut, Greenlandic"},{code:"kn",name:"Kannada"},{code:"kr",name:"Kanuri"},{code:"ks",name:"Kashmiri"},{code:"kk",name:"Kazakh"},{code:"km",name:"Khmer"},{code:"ki",name:"Kikuyu, Gikuyu"},{code:"rw",name:"Kinyarwanda"},{code:"ky",name:"Kirghiz, Kyrgyz"},{code:"rn",name:"Kirundi"},{code:"kv",name:"Komi"},{code:"kg",name:"Kongo"},{code:"ko",name:"Korean"},{code:"ku",name:"Kurdish"},{code:"kj",name:"Kwanyama, Kuanyama"},{code:"lo",name:"Lao"},{code:"la",name:"Latin"},{code:"lv",name:"Latvian"},{code:"li",name:"Limburgish, Limburgan, Limburger"},{code:"ln",name:"Lingala"},{code:"lt",name:"Lithuanian"},{code:"lu",name:"Luba-Katanga"},{code:"lg",name:"Luganda"},{code:"lb",name:"Luxembourgish, Letzeburgesch"},{code:"mk",name:"Macedonian"},{code:"mg",name:"Malagasy"},{code:"ms",name:"Malay"},{code:"ml",name:"Malayalam"},{code:"mt",name:"Maltese"},{code:"gv",name:"Manx"},{code:"mr",name:"Marathi (Marāṭhī)"},{code:"mh",name:"Marshallese"},{code:"mn",name:"Mongolian"},{code:"mi",name:"Māori"},{code:"na",name:"Nauru"},{code:"nv",name:"Navajo, Navaho"},{code:"ng",name:"Ndonga"},{code:"ne",name:"Nepali"},{code:"nd",name:"North Ndebele"},{code:"se",name:"Northern Sami"},{code:"no",name:"Norwegian"},{code:"nb",name:"Norwegian Bokmål"},{code:"nn",name:"Norwegian Nynorsk"},{code:"ii",name:"Nuosu"},{code:"oc",name:"Occitan"},{code:"oj",name:"Ojibwe, Ojibwa"},{code:"cu",name:"Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic"},{code:"or",name:"Oriya"},{code:"om",name:"Oromo"},{code:"os",name:"Ossetian, Ossetic"},{code:"pa",name:"Panjabi, Punjabi"},{code:"ps",name:"Pashto, Pushto"},{code:"fa",name:"Persian"},{code:"pl",name:"Polish"},{code:"pt",name:"Portuguese"},{code:"pi",name:"Pāli"},{code:"qu",name:"Quechua"},{code:"ro",name:"Romanian, Moldavian, Moldovan"},{code:"rm",name:"Romansh"},{code:"ru",name:"Russian"},{code:"sm",name:"Samoan"},{code:"sg",name:"Sango"},{code:"sa",name:"Sanskrit (Saṁskṛta)"},{code:"sc",name:"Sardinian"},{code:"gd",name:"Scottish Gaelic; Gaelic"},{code:"sr",name:"Serbian"},{code:"sn",name:"Shona"},{code:"sd",name:"Sindhi"},{code:"si",name:"Sinhala, Sinhalese"},{code:"sk",name:"Slovak"},{code:"sl",name:"Slovene"},{code:"so",name:"Somali"},{code:"nr",name:"South Ndebele"},{code:"st",name:"Southern Sotho"},{code:"es",name:"Spanish; Castilian"},{code:"su",name:"Sundanese"},{code:"sw",name:"Swahili"},{code:"ss",name:"Swati"},{code:"sv",name:"Swedish"},{code:"tl",name:"Tagalog"},{code:"ty",name:"Tahitian"},{code:"tg",name:"Tajik"},{code:"ta",name:"Tamil"},{code:"tt",name:"Tatar"},{code:"te",name:"Telugu"},{code:"th",name:"Thai"},{code:"bo",name:"Tibetan Standard, Tibetan, Central"},{code:"ti",name:"Tigrinya"},{code:"to",name:"Tonga (Tonga Islands)"},{code:"ts",name:"Tsonga"},{code:"tn",name:"Tswana"},{code:"tr",name:"Turkish"},{code:"tk",name:"Turkmen"},{code:"tw",name:"Twi"},{code:"ug",name:"Uighur, Uyghur"},{code:"uk",name:"Ukrainian"},{code:"ur",name:"Urdu"},{code:"uz",name:"Uzbek"},{code:"ve",name:"Venda"},{code:"vi",name:"Vietnamese"},{code:"vo",name:"Volapük"},{code:"wa",name:"Walloon"},{code:"cy",name:"Welsh"},{code:"fy",name:"Western Frisian"},{code:"wo",name:"Wolof"},{code:"xh",name:"Xhosa"},{code:"yi",name:"Yiddish"},{code:"yo",name:"Yoruba"},{code:"za",name:"Zhuang, Chuang"}];


},{}],7:[function(require,module,exports){
exports.info=function(e){var n=document.getElementById("messages"),t=document.createElement("div");t.className="alert alert-success message",t.innerHTML=e,n.appendChild(t),setTimeout(function(){n.removeChild(t)},2e3)},exports.error=function(e){var n=document.createElement("button");n.className="close",n.innerHTML="&times;";var t=document.createElement("span");t.innerHTML=e.toString();var a=document.getElementById("messages"),r=document.createElement("div");r.className="alert alert-danger message",r.appendChild(n),r.appendChild(t),n.addEventListener("click",function(){a.removeChild(r)},!1),a.appendChild(r),e instanceof Error&&console.error(e.stack)};


},{}],8:[function(require,module,exports){
var api=require("../api"),view=require("../view"),resolveObject=require("../resolve_object"),comments_item=require("../vm/comments_item"),template='<h2 data-bind="text: title"></h2>\n<h3>Comments</h3>\n<ul data-bind="foreach: comments" class="list-group">\n    <li data-bind="style: { \'padding-left\': (15 * (depth + 1)) + \'px\' }"\n        class="list-group-item post-item">\n        <h4 data-bind="text: author" class="list-group-item-heading"></h4>\n        <div class="list-group-item-text">\n            Date: <span data-bind="text: formatDate(date)"></span>\n            <div class="post-controls">\n                <div class="panel panel-default">\n                    <div data-bind="text: content" class="panel-body"></div>\n                </div>\n                <!-- ko if: removable -->\n                    <a data-bind="click: remove" class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-remove"></span> Remove\n                    </a>\n                <!-- /ko -->\n            </div>\n        </div>\n    </li>\n</ul>\n<!-- ko if: comments().length === 0 -->\n    <div class="alert alert-info" role="alert">\n        This entry has no comments.\n    </div>\n<!-- /ko -->\n';exports.create=function(e,t){function n(e){var t=[];return a(e,t,0),t}function a(e,t,n){e.forEach(function(e){e.depth=n,t.push(e),a(e.replies,t,n+1)})}var o={title:ko.observable(),comments:ko.observable([])},i={entryInfo:api.entryInfo(t),userInfo:api.userInfo(t),typeInfo:api.typeInfo(e),comments:api.comments(t)};return resolveObject(i).then(function(e){o.title(e.entryInfo.title),o.comments(n(e.comments).map(function(t){return comments_item.create(t,e.userInfo,e.entryInfo,e.typeInfo)})),view.show(template,o)})};


},{"../api":2,"../resolve_object":17,"../view":19,"../vm/comments_item":20}],9:[function(require,module,exports){
function extract(s){var e={};return s.forEach(function(s){e[s.name]=s.value}),{enabled:e.smtp_enabled,host:e.smtp_host,user:e.smtp_user,password:e.smtp_password,auth:e.smtp_auth,security:e.smtp_security,from:e.smtp_from}}function toForm(s,e){Object.keys(s).forEach(function(t){e[t](s[t])})}function toSmtp(s){var e={};return Object.keys(s).forEach(function(t){e[t]=s[t]()}),e}function toList(s){return[{name:"smtp_enabled",value:s.enabled},{name:"smtp_host",value:s.host},{name:"smtp_user",value:s.user},{name:"smtp_password",value:s.password},{name:"smtp_auth",value:s.auth},{name:"smtp_security",value:s.security},{name:"smtp_from",value:s.from}]}var api=require("../api"),view=require("../view"),email=require("../vm/email"),message=require("../message"),resolveObject=require("../resolve_object"),template='<h2>Email settings</h2>\n<!-- ko if: !permission() -->\n    <div class="alert alert-warning" role="alert">\n        You do not have permissions to edit email settings.\n    </div>\n<!-- /ko -->\n<!-- ko if: permission() -->\n    <!-- ko with: smtp -->\n        <div class="row bc-margin-top">\n            <div class="col-md-2 col-sm-3 col-xs-4 text-right">\n                <strong>Enabled</strong></div>\n            <div data-bind="text: (enabled ? \'yes\' : \'no\')"\n                class="col-md-4 col-sm-5 col-xs-8"></div>\n        </div>\n        <div class="row">\n            <div class="col-md-2 col-sm-3 col-xs-4 text-right">\n                <strong>SMTP host</strong></div>\n            <div data-bind="text: host"\n                class="col-md-4 col-sm-5 col-xs-8"></div>\n        </div>\n        <div class="row">\n            <div class="col-md-2 col-sm-3 col-xs-4 text-right">\n                <strong>SMTP auth</strong></div>\n            <div data-bind="text: auth"\n                class="col-md-4 col-sm-5 col-xs-8"></div>\n        </div>\n        <!-- ko if: auth === \'login\' -->\n            <div class="row">\n                <div class="col-md-2 col-sm-3 col-xs-4 text-right">\n                    <strong>SMTP user</strong></div>\n                <div data-bind="text: (user === \'\' ? \'not set\' : user)"\n                    class="col-md-4 col-sm-5 col-xs-8"></div>\n            </div>\n            <div class="row">\n                <div class="col-md-2 col-sm-3 col-xs-4 text-right">\n                    <strong>SMTP password</strong></div>\n                <div data-bind="text: (password === \'\' ? \'not set\' : \'not shown\')"\n                    class="col-md-4 col-sm-5 col-xs-8"></div>\n            </div>\n        <!-- /ko -->\n        <div class="row">\n            <div class="col-md-2 col-sm-3 col-xs-4 text-right">\n                <strong>SMTP security</strong></div>\n            <div data-bind="text: security"\n                class="col-md-4 col-sm-5 col-xs-8"></div>\n        </div>\n        <div class="row">\n            <div class="col-md-2 col-sm-3 col-xs-4 text-right">\n                <strong>SMTP from</strong></div>\n            <div data-bind="text: from"\n                class="col-md-4 col-sm-5 col-xs-8"></div>\n        </div>\n    <!-- /ko -->\n    <div class="row bc-margin-top">\n        <div class="col-md-4 col-sm-5 col-xs-8 col-md-offset-2 col-sm-offset-3 col-xs-offset-4">\n            <a href="#" data-bind="click: edit" class="btn btn-default">\n                <span class="glyphicon glyphicon-pencil"></span> Edit</a>\n        </div>\n    </div>\n    <!-- ko if: editing() -->\n        <hr>\n        <form data-bind="submit: save" autocomplete="off" id="smtp-config">\n            <div class="checkbox">\n                <label><input data-bind="checked: form.enabled" type="checkbox">\n                    Mail system enabled</label>\n            </div>\n            <div data-bind="errors: errors.host" class="form-group">\n                <label for="smtp-host">SMTP host</label>\n                <input data-bind="textInput: form.host"\n                    type="text" class="form-control" id="smtp-host"\n                    placeholder="SMTP server hostname">\n            </div>\n            <div class="form-group">\n                <label for="smtp-auth">SMTP authentication method</label>\n                <select data-bind="value: form.auth" id="smtp-auth"\n                    class="form-control">\n                    <option value="plain">Plain</option>\n                    <option value="login">Login</option>\n                </select>\n            </div>\n            <div data-bind="errors: errors.user" class="form-group">\n                <label for="smtp-user">SMTP user</label>\n                <input data-bind="textInput: form.user,\n                        disable: form.auth() === \'plain\'"\n                    type="text" class="form-control" id="smtp-user"\n                    placeholder="SMTP server user">\n            </div>\n            <div data-bind="errors: errors.password" class="form-group">\n                <label for="smtp-password">SMTP password</label>\n                <input data-bind="textInput: form.password,\n                        disable: form.auth() === \'plain\',\n                        attr: { type: password_text() ? \'text\' : \'password\' }"\n                    type="password" class="form-control" id="smtp-password"\n                    placeholder="SMTP server password">\n            </div>\n            <div class="checkbox">\n                <label><input data-bind="checked: password_text" type="checkbox">\n                    Show text</label>\n            </div>\n            <div class="form-group">\n                <label for="smtp-security">SMTP security</label>\n                <select data-bind="value: form.security" id="smtp-security"\n                    class="form-control">\n                    <option value="none">None</option>\n                    <option value="ssl">SSL</option>\n                    <option value="tls">TLS</option>\n                    <option value="starttls">STARTTLS</option>\n                </select>\n            </div>\n            <div data-bind="errors: errors.from" class="form-group">\n                <label for="smtp-from">Notification sender email (From)</label>\n                <input data-bind="textInput: form.from"\n                    type="text" class="form-control" id="smtp-form"\n                    placeholder="Mail sender address">\n            </div>\n            <div class="alert alert-info" role="alert">\n                New SMTP settings should be tested before saving. The\n                test email will be sent to the current user\'s mail address.\n            </div>\n            <!-- ko if: !!error() -->\n                <div data-bind="text: error" class="alert alert-danger" role="alert"></div>\n            <!-- /ko -->\n            <!-- ko if: !!info() -->\n                <div data-bind="text: info" class="alert alert-success" role="alert"></div>\n            <!-- /ko -->\n            <div data-bind="errors: errors.subject" class="form-group">\n                <label for="smtp-subject">Test mail subject</label>\n                <input data-bind="textInput: form.subject"\n                    type="text" class="form-control" id="smtp-subject"\n                    placeholder="Test mail subject">\n            </div>\n            <div data-bind="errors: errors.body" class="form-group">\n                <label for="smtp-body">Test mail body</label>\n                <textarea data-bind="textInput: form.body"\n                    placeholder="Test mail body" rows="3"\n                    class="form-control" id="smtp-body"></textarea>\n            </div>\n            <button type="submit" class="btn btn-default">\n                <span class="glyphicon glyphicon-ok"></span> Save\n            </button>\n            <a data-bind="click: test" class="btn btn-default" href="#">\n                <span class="glyphicon glyphicon-envelope"></span> Test</a>\n            <a data-bind="click: cancel" class="btn btn-default" href="#">\n                <span class="glyphicon glyphicon-remove"></span> Cancel</a>\n        </form>\n    <!-- /ko -->\n<!-- /ko -->\n';exports.create=function(s){function e(){Object.keys(n.errors).forEach(function(s){n.errors[s]([])})}function t(){var s=n.form;s.host().match(/^\s*$/)&&n.errors.host.push("SMTP host name must be set."),"login"===s.auth()&&(s.user().match(/^\s*$/)&&n.errors.user.push("SMTP user must be set for SMTP auth."),s.password().match(/^\s*$/)&&n.errors.password.push("SMTP password must be set for SMTP auth.")),s.from().match(/^\s*$/)?n.errors.from.push("Notification sender mail must be set."):s.from().match(/^[^@]+@[^@]+$/)||n.errors.from.push("Notification sender mail must be a valid mail address.")}function o(){var s=n.form;s.subject().match(/^\s*$/)&&n.errors.subject.push("Test mail subject must be set."),s.body().match(/^\s*$/)&&n.errors.body.push("Test mail body must be set.")}function r(s){var e=s.querySelector(".has-error input, .has-error textarea, .has-error checkbox, .has-error select");return e?(e.focus(),!1):!0}var n={email:ko.observable(),permission:ko.observable(!1),editing:ko.observable(!1),smtp:ko.observable({}),form:{enabled:ko.observable(!1),host:ko.observable(""),user:ko.observable(""),password:ko.observable(""),auth:ko.observable("login"),security:ko.observable("none"),from:ko.observable("admin@example.com"),subject:ko.observable("Test mail"),body:ko.observable("Test mail body")},errors:{host:ko.observableArray([]),user:ko.observableArray([]),password:ko.observableArray([]),from:ko.observableArray([]),subject:ko.observableArray([]),body:ko.observableArray([])},error:ko.observable(),info:ko.observable(),password_text:ko.observable(!1)};return n.save=function(s){if(e(),t(),!r(s))return!1;var o=toSmtp(n.form);api.updateConfig(toList(o)).then(function(){n.smtp(o),message.info("Mailing system parameters have been updated."),route.refresh()})["catch"](message.error)},n.edit=function(){n.editing(!0)},n.test=function(){n.info(void 0),n.error(void 0),e(),t(),o();var s=document.getElementById("smtp-config");if(!r(s))return!1;var a=toSmtp(n.form);api.testMail(a).then(function(){n.info("Test mail sent successfully.")})["catch"](function(s){n.error("Mail testing failed: "+(s.jsendMessage?s.jsendMessage:s.toString()))})},n.cancel=function(){route.refresh()},api.userInfo().then(function(s){return"admin"===s.type?api.config().then(function(s){var e=extract(s);n.smtp(e),toForm(e,n.form),n.permission(!0),view.show(template,n)}):void view.show(template,n)})};


},{"../api":2,"../message":7,"../resolve_object":17,"../view":19,"../vm/email":21}],10:[function(require,module,exports){
var api=require("../api"),view=require("../view"),message=require("../message"),template='<h2>Login</h2>\n\n<form data-bind="submit: login">\n    <div data-bind="errors: errors.username" class="form-group">\n        <label class="control-label" for="username">Username</label>\n        <input data-bind="textInput: username"\n            type="text" name="username" title="Username"\n            placeholder="Username" class="form-control" id="username">\n    </div>\n    <div data-bind="errors: errors.password" class="form-group">\n        <label class="control-label" for="password">Password</label>\n        <input data-bind="textInput: password"\n            type="password" name="password" title="Password"\n            placeholder="Password" class="form-control" id="password">\n    </div>\n    <div class="checkbox">\n        <label><input data-bind="checked: remember" type="checkbox"\n            name="remember" id="remember">\n            Remember me</label>\n    </div>\n    <button type="submit" class="btn btn-default">\n        <span class="glyphicon glyphicon-log-in"></span> Login</button>\n</form>\n';exports.create=function(){var e={username:ko.observable(""),password:ko.observable(""),remember:ko.observable(!1),errors:{username:ko.observableArray([]),password:ko.observableArray([])}};return e.login=function(r){Object.keys(e.errors).forEach(function(r){e.errors[r]([])});var a=e.username(),s=e.password();""===a?e.errors.username.push("Username is not entered."):a.match(/^[^@]+@[^@]+$/)||e.errors.username.push("Username must be an email."),""===s&&e.errors.password.push("Password is not entered.");var o=r.querySelector(".has-error input, .has-error textarea, .has-error checkbox");return o?(o.focus(),!1):void api.login(a,s).then(function(r){e.remember()?(localStorage.setItem("api-key",r.key),sessionStorage.removeItem("api-key")):(sessionStorage.setItem("api-key",r.key),localStorage.removeItem("api-key")),route.go("landing")})["catch"](function(r){r.toString().match(/Invalid auth credentials/)?(e.errors.username.push("Invalid auth credentials."),e.errors.password.push("Invalid auth credentials.")):message.error(r)})},view.show(template,e),Promise.resolve()};


},{"../api":2,"../message":7,"../view":19}],11:[function(require,module,exports){
function postData(n,e){return api.userInfo().then(function(t){var o={types:api.types(),users:authors(t),userInfo:Promise.resolve(t),tags:api.tags(n)};return e?(o.post=api.post(e),o.files=api.files(e)):o.files=Promise.resolve([]),resolveObject(o)})}function authors(n){return"admin"===n.type?api.users():Promise.resolve([{$id:n.$id,fullname:n.fullname}])}var api=require("../api"),post=require("../vm/post"),view=require("../view"),editor=require("../editor"),message=require("../message"),preview=require("../preview"),resolveObject=require("../resolve_object"),template='<!-- ko with: post -->\n    <h2 data-bind="text: title"></h2>\n    <div class="bc-margin-bottom">\n        <button data-bind="click: $root.leave" type="button"\n            class="btn btn-default" title="Leave the editor">\n            <span class="glyphicon glyphicon-chevron-left"></span>\n        </button>\n        <button data-bind="click: submit, css: { \'bc-red\': $root.modified() },\n            disable: !$root.modified()" type="button"\n            class="btn btn-default" title="Save and continue">\n            <span class="glyphicon glyphicon-floppy-disk"></span>\n        </button>\n        <button data-bind="click: $root.toggleInfo, css: { active: $root.info() }"\n            type="button" class="btn btn-default" title="Show/hide info">\n            <span class="glyphicon glyphicon-info-sign"></span>\n        </button>\n        <button data-bind="click: $root.toggleFiles, css: { active: $root.files() }"\n            type="button" class="btn btn-default">\n            <span class="glyphicon glyphicon-paperclip"></span>\n        </button>\n        <button data-bind="click: $root.toggleSettings, css: { active: $root.settings() }"\n            type="button" class="btn btn-default">\n            <span class="glyphicon glyphicon-cog"></span>\n        </button>\n        <button data-bind="click: $root.toggleHelp, css: { active: $root.help() }"\n            type="button" class="btn btn-default">\n            <span class="glyphicon glyphicon-question-sign"></span>\n        </button>\n        <!-- ko if: $root.hasPreview() -->\n            <button data-bind="click: $root.preview" class="btn btn-default">\n                <span class="glyphicon glyphicon-eye-open"></span>\n            </button>\n        <!-- /ko -->\n    </div>\n    <!-- ko if: published() -->\n        <div class="bc-margin-bottom">\n            <div>\n                <span class="label label-danger">Published</span>\n                <!-- ko if: $root.hasPreview() -->\n                    &nbsp;&nbsp;<a data-bind="attr: { href: $root.previewUrl }" href="#" target="_blank">Preview\n                        <span class="glyphicon glyphicon-new-window"></span></a>\n                <!-- /ko -->\n            </div>\n        </div>\n    <!-- /ko -->\n    <!-- ko if: !published() -->\n        <div class="bc-margin-bottom">\n            <div>\n                <span class="label label-warning">Not published</span>\n                <!-- ko if: $root.hasPreview() -->\n                    &nbsp;&nbsp;<a data-bind="attr: { href: $root.previewUrl }" href="#" target="_blank">Preview\n                        <span class="glyphicon glyphicon-new-window"></span></a>\n                <!-- /ko -->\n            </div>\n        </div>\n    <!-- /ko -->\n    <!-- ko if: $root.previewNotice() -->\n        <div class="alert alert-warning" role="alert">\n            Previews are not available for new entries.\n            Save the entry at least once before.\n        </div>\n    <!-- /ko -->\n    <hr>\n    <!-- ko if: $root.settings() -->\n        <div class="row">\n            <div class="col-md-2">\n                <select data-bind="value: $root.softWrap"\n                    class="form-control bc-margin-top-sm">\n                    <option value="60">Soft wrap 60</option>\n                    <option value="70">Soft wrap 70</option>\n                    <option value="80">Soft wrap 80</option>\n                    <option value="90">Soft wrap 90</option>\n                    <option value="100">Soft wrap 100</option>\n                    <option value="110">Soft wrap 110</option>\n                    <option value="120">Soft wrap 120</option>\n                    <option value="130">Soft wrap 130</option>\n                    <option value="140">Soft wrap 140</option>\n                </select>\n            </div>\n        </div>\n        <hr>\n    <!-- /ko -->\n    <!-- ko if: $root.help() -->\n        <h3>Shorcuts</h3>\n        <ul>\n            <li>CTRL+S - save</li>\n            <li>CTRL+I - preview (if preview is configured)</li>\n        </ul>\n        <h3>Markdown</h3>\n\n        <h4>Headings</h4>\n<pre># Heading 1\n## Heading 2\n### Heading 3\n#### Heading 4\n##### Heading 5\n###### Heading 6</pre>\n\n        <h4>Bulleted list</h4>\n\n<pre> + item1\n + item2\n + item3</pre>\n\n        <h4>Numbered list</h4>\n\n<pre> 1. item1\n 2. item2\n 3. item3</pre>\n\n<h4>Link</h4>\n\n<pre>[Text](http://example.com) or\n&lt;http://example.com&gt;</pre>\n\n<h4>Reference link</h4>\n\n<pre>[Text][link]\n[link]:http://example.com</pre>\n\n<h4>Styling</h4>\n\n<pre>*italic*\n**bold**\n~~strike-through~~</pre>\n\n<h4>Code block</h4>\n\nCode blocks use 4-space indent.\n\n<pre>    var x = 1;</pre>\n\nAlternative syntax:\n\n<pre>```language\nvar x = 1;</pre>\n\n<p>\nMore info: <a href="https://daringfireball.net/projects/markdown/syntax"\n    target="_blank">Gruber\'s Markdown <span class="glyphicon glyphicon-new-window"></span></a>\n</p>\n\n        <div>\n            <a href="#" data-bind="click: $root.toggleHelp"\n                class="btn btn-default">Close help</a>\n        </div>\n        <hr>\n    <!-- /ko -->\n    <form data-bind="submit: submit" autocomplete="off" id="post">\n        <!-- ko if: $root.info() -->\n            <div class="bc-info">\n                <div class="row">\n                    <div class="col-md-4">\n                        <div data-bind="errors: errors.title" class="form-group">\n                            <label for="post-title">Title</label>\n                            <input data-bind="textInput: title"\n                                type="text" class="form-control input-sm" id="post-title"\n                                placeholder="Title">\n                            <p class="help-block">Slug is autogenerated from the title.</p>\n                        </div>\n                    </div>\n                    <div class="col-md-4">\n                        <div data-bind="errors: errors.slug" class="form-group">\n                            <label for="post-slug">Slug</label>\n                            <input data-bind="textInput: slug"\n                                type="text" class="form-control input-sm" id="post-slug"\n                                placeholder="Slug">\n                            <p class="help-block">Modifying the slug after publishing will break links.</p>\n                        </div>\n                    </div>\n                    <div class="col-md-4">\n                        <div class="form-group">\n                            <label for="post-tags">Tags</label>\n                            <input data-bind="textInput: tags"\n                                type="text" class="form-control input-sm" id="post-tags"\n                                placeholder="Tags" list="taglist">\n                            <datalist id="taglist">\n                                <option value="node.js">\n                                <option value="javascript">\n                            </datalist>\n                            <p class="help-block">Separate multiple tags with commas.</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-2">\n                        <div class="form-group">\n                            <label for="post-type">Type</label>\n                            <select data-bind="value: type, options: types,\n                                optionsText: \'label\', optionsValue: \'name\',\n                                attr: { disabled: !can_change_type }"\n                                class="form-control input-sm" id="post-type"></select>\n                        </div>\n                    </div>\n                    <div class="col-md-2">\n                        <div class="form-group">\n                            <label for="post-content-type">Content type</label>\n                            <select data-bind="value: content_type"\n                                class="form-control input-sm" id="post-content-type">\n                                <option value="markdown">Markdown</option>\n                                <option value="raw">Raw</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class="col-md-2">\n                        <div class="form-group">\n                            <label for="post-author">Author</label>\n                            <select data-bind="value: author, options: authors,\n                                optionsText: \'fullname\', optionsValue: \'$id\',\n                                attr: { disabled: !can_change_author }"\n                                class="form-control input-sm" id="post-author"></select>\n                        </div>\n                    </div>\n                    <div class="col-md-2">\n                        <div class="form-group">\n                            <label for="post-language">Language</label>\n                            <select data-bind="value: language, options: languages,\n                                optionsText: \'name\', optionsValue: \'code\'"\n                                class="form-control input-sm" id="post-language"></select>\n                        </div>\n                    </div>\n                    <div class="col-md-2">\n                        <div data-bind="errors: errors.date" class="form-group">\n                            <label for="post-date">Publish date</label>\n                            <input data-bind="textInput: date"\n                                type="text" class="form-control input-sm" id="post-date"\n                                placeholder="YYYY-MM-DD">\n                        </div>\n                    </div>\n                    <div class="col-md-2">\n                        <div data-bind="errors: errors.update" class="form-group">\n                            <label for="post-update">Update date</label>\n                            <input data-bind="textInput: update"\n                                type="text" class="form-control input-sm" id="post-update"\n                                placeholder="YYYY-MM-DD">\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-8">\n                        <div class="form-group">\n                            <label for="post-description">Description</label>\n                            <textarea\n                                data-bind="textInput: description"\n                                class="form-control input-sm" rows="2" id="post-description" placeholder="Description"></textarea>\n                            <p class="help-block">Description is used by search engines to show the page snippet.\n                                It must not contain HTML.</p>\n                        </div>\n                    </div>\n                    <div class="col-md-2">\n                        <div class="checkbox">\n                            <label><input data-bind="checked: published,\n                                attr: { disabled: !can_publish }"\n                                type="checkbox" id="post-published"> Published</label>\n                        </div>\n                    </div>\n                    <div class="col-md-2">\n                        <div class="checkbox">\n                            <label><input data-bind="checked: commenting"\n                                type="checkbox"> Commenting</label>\n                        </div>\n                    </div>\n                </div>\n                <hr>\n            </div>\n        <!-- /ko -->\n        <!-- ko if: $root.files() -->\n            <!-- ko if: can_manage_files -->\n                <!-- ko if: !$id() -->\n                    <div class="alert alert-warning" role="alert">\n                        To upload files you need to save the entry first.\n                    </div>\n                <!-- /ko -->\n                <!-- ko if: $id() -->\n                    <!-- ko if: slug_changed() -->\n                        <div class="alert alert-warning" role="alert">\n                            You have changed the entry slug. File management is\n                            re-enabled after saving the entry.\n                        </div>\n                    <!-- /ko -->\n                    <!-- ko if: !slug_changed() -->\n                        <!-- ko if: files().length === 0 -->\n                            <div class="alert alert-info" role="alert">\n                                This entry has no files.\n                            </div>\n                        <!-- /ko -->\n                        <div data-bind="foreach: files" class="list-group">\n                            <li class="list-group-item post-item">\n                                <div data-bind="click: expand" class="list-group-item-heading">\n                                    <span class="glyphicon glyphicon-file"></span> <!-- ko text: name --><!-- /ko -->\n                                </div>\n                                <!-- ko if: expanded() -->\n                                    URL: <!-- ko text: url --><!-- /ko -->\n                                    <div class="post-controls">\n                                        <a data-bind="click: $parent.removeFile"\n                                            class="btn btn-default btn-sm" href="#">\n                                            <span class="glyphicon glyphicon-edit"></span> Remove</a>\n                                        <a data-bind="attr: { href: url }" target="_blank"\n                                            class="btn btn-default btn-sm" href="#">\n                                            <span class="glyphicon glyphicon-eye-open"></span> View (in new tab)</a>\n                                        <a data-bind="click: $parent.insertLink"\n                                            class="btn btn-default btn-sm" href="#">\n                                            <span class="glyphicon glyphicon-pencil"></span> Insert as link</a>\n                                        <!-- ko if: image -->\n                                            <a data-bind="click: $parent.insertImage"\n                                                class="btn btn-default btn-sm" href="#">\n                                                <span class="glyphicon glyphicon-pencil"></span> Insert as image</a>\n                                        <!-- /ko -->\n                                    </div>\n                                <!-- /ko -->\n                            </li>\n                        </div>\n                        <div class="row bc-controls">\n                            <div class="col-sm-6">\n                                <div id="entry-file-wrap">\n                                    <input type="file" id="entry-file" class="form-control" placeholder="Your file">\n                                </div>\n                            </div>\n                            <div class="col-sm-6">\n                                <a data-bind="click: uploadFile" class="btn btn-default" href="#">\n                                    <span class="glyphicon glyphicon-upload"></span> Upload\n                                </a>\n                            </div>\n                        </div>\n                    <!-- /ko -->\n                <!-- /ko -->\n            <!-- /ko -->\n            <!-- ko if: !can_manage_files -->\n                <div class="alert alert-warning" role="alert">\n                    To upload files you need file management permissions.\n                </div>\n            <!-- /ko -->\n            <hr>\n        <!-- /ko -->\n        <!-- ko if: slug_changed() && $id() -->\n            <div class="alert alert-warning" role="alert">\n                You must save the entry after modifying the slug. This will\n                automatically fix images and links to files in the content.\n            </div>\n        <!-- /ko -->\n        <div id="editor-wrap">\n            <div id="editor"></div>\n        </div>\n    </form>\n<!-- /ko -->\n';exports.create=function(n,e,t){var o={post:ko.observable(),info:ko.observable(!1),files:ko.observable(!1),modified:ko.observable(!1),hasPreview:ko.observable(!1),previewNotice:ko.observable(!1),softWrap:ko.observable("100"),settings:ko.observable(!1),help:ko.observable(!1)},i=localStorage.getItem("softwrap");return i&&o.softWrap(i),o.toggleInfo=function(){o.info(!o.info())},o.toggleFiles=function(){o.files(!o.files())},o.toggleSettings=function(){o.settings(!o.settings())},o.toggleHelp=function(){o.help(!o.help())},o.previewUrl=ko.pureComputed(function(){var n=o.post().slug();return o.post().preview?o.post().preview.replace(/<slug>/g,n):void 0}),o.preview=function(n){e?o.post().submitUpdate().then(function(){var n=(o.post().slug(),o.previewUrl());preview.show(n,function(){editor.focus()})})["catch"](message.error):o.previewNotice(!0)},o.leave=function(){route.go("entries/"+o.post().type())},postData(n,e).then(function(i){function a(n){83===n.keyCode&&(navigator.platform.match("Mac")?n.metaKey:n.ctrlKey)&&(n.preventDefault(),o.post().submit()),73===n.keyCode&&(navigator.platform.match("Mac")?n.metaKey:n.ctrlKey)&&(n.preventDefault(),o.post().preview&&o.preview())}function s(n){if(o.modified()){var e="You have modifications. Leave without saving?";return n=n||window.event,n&&(n.returnValue=e),e}}if(o.post(post.create(i.userInfo,n,i.types,i.users,i.files,i.post,t)),document.addEventListener("keydown",a,!1),o.autosave=function(){var n=o.post().toJS();n.$id=o.post().$id(),localStorage.setItem("autosave",JSON.stringify(n))},o.autosaveTimer=setInterval(function(){o.modified()&&o.autosave()},15e3),o.clearAutosave=function(){localStorage.removeItem("autosave")},window.addEventListener("beforeunload",s,!1),o.dispose=function(){document.removeEventListener("keydown",a,!1),window.removeEventListener("beforeunload",s,!1),preview.dispose(),editor.dispose(),clearTimeout(o.autosaveTimer)},route.leave=function(){return o.modified()?confirm("You have modifications. Leave without saving?")?(o.clearAutosave(),!0):!1:!0},view.show(template,o),editor.enable(),editor.setSoftWrap(parseInt(o.softWrap(),10)),o.softWrap.subscribe(function(n){localStorage.setItem("softwrap",n),editor.setSoftWrap(parseInt(n,10))}),e)t?(editor.begin(t.content),o.modified(!0)):editor.begin(i.post.content),o.post().preview&&o.hasPreview(!0);else{t&&(editor.begin(t.content),o.modified(!0)),o.info(!0);var l=document.querySelector("#post-title");l.focus(),"function"==typeof l.setSelectionRange&&l.setSelectionRange(0,l.value.length)}editor.change(function(){o.modified(!0)}),o.post().change(function(){o.modified(!0)}),o.post().editor=editor,o.post().parent=o,o.post().tags.subscribe(function(n){for(var e=document.getElementById("taglist");e.firstChild;)e.removeChild(e.firstChild);var t,o=[],a=n.match(/^(.+\,\s*)(\w+)$/);if(a){var s=a[1],l=a[2];t=l.length,i.tags.forEach(function(n){n.tag.substring(0,t)===l&&o.push(s+n.tag)})}else{var r=n.match(/^\w+$/);r&&(t=n.length,i.tags.forEach(function(e){e.tag.substring(0,t)===n&&o.push(e.tag)}))}o.forEach(function(n){var t=document.createElement("option");t.value=n,e.appendChild(t)})})})};


},{"../api":2,"../editor":4,"../message":7,"../preview":16,"../resolve_object":17,"../view":19,"../vm/post":24}],12:[function(require,module,exports){
var api=require("../api"),view=require("../view"),postsItem=require("../vm/posts_item"),resolveObject=require("../resolve_object"),template='<h2 data-bind="text: title"></h2>\n\n<div class="bc-margin-bottom">\n    <div class="row">\n        <div class="col-md-2">\n            <div class="form-group">\n                <label for="filter-tag">Tag filter</label>\n                <select data-bind="value: tag, options: tags,\n                    optionsText: \'label\', optionsValue: \'tag\',\n                    optionsCaption: \'All tags\'"\n                    class="form-control input-sm"></select>\n            </div>\n        </div>\n        <div class="col-md-2">\n            <div class="form-group">\n                <label for="filter-status">Status filter</label>\n                <select data-bind="value: status"\n                    class="form-control input-sm">\n                    <option value="all">All</option>\n                    <option value="published">Published</option>\n                    <option value="unpublished">Not published</option>\n                </select>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ul data-bind="foreach: posts" class="list-group">\n    <li class="list-group-item post-item">\n        <h4 data-bind="click: expand, text: title" class="list-group-item-heading"></h4>\n        <div class="list-group-item-text">\n            Update date: <span data-bind="text: formatDate(date_updated)"></span>\n            <!-- ko if: $parent.comments() -->\n                comments: <span data-bind="text: comments"></span><br>\n            <!-- /ko -->\n            <!-- ko if: tags.length > 0 -->\n                <span data-bind="text: tags.join(\', \')" class="bc-entries-tag"></span>\n            <!-- /ko -->\n            <div data-bind="visible: expanded" class="post-controls bc-margin-bottom-sm">\n                <!-- ko if: editable -->\n                    <a data-bind="attr: { href: editLink }" class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-edit"></span> Edit\n                    </a>\n                <!-- /ko -->\n                <!-- ko if: $parent.comments() -->\n                    <a data-bind="attr: { href: commentsLink }, css: { disabled: comments === 0 }"\n                        class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-comment"></span> Comments\n                    </a>\n                <!-- /ko -->\n                <!-- ko if: removable -->\n                    <a data-bind="click: remove"\n                        class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-remove"></span> Remove\n                    </a>\n                <!-- /ko -->\n            </div>\n            <!-- ko if: !published -->\n                <div>\n                    <span class="label label-warning">Not published</span>\n                </div>\n            <!-- /ko -->\n        </div>\n    </li>\n</ul>\n\n<!-- ko if: posts().length === 0 -->\n    <div class="alert alert-info" role="alert">\n        No entries to show.\n    </div>\n<!-- /ko -->\n\n<div class="bc-controls">\n    <a data-bind="click: showMore, css: { disabled: !hasMore() }" class="btn btn-default" href="#">\n        <span class="glyphicon glyphicon-list-alt"></span> Show more\n    </a>\n    <a data-bind="click: showAll, css: { disabled: !hasMore() }" class="btn btn-default" href="#">\n        <span class="glyphicon glyphicon-list-alt"></span> Show all\n    </a>\n    <a data-bind="attr: { href: \'#new/\' + type }" class="btn btn-default" href="#">\n        <span class="glyphicon glyphicon-plus"></span> Add\n    </a>\n</div>\n';exports.create=function(t){var n={type:t,all:ko.observable([]),count:ko.observable(10),step:ko.observable(10),comments:ko.observable(!1),create:ko.observable(!1),title:ko.observable(),loaded:ko.observable(!1),tags:ko.observable([]),tag:ko.observable(),status:ko.observable("all")};n.filtered=ko.pureComputed(function(){var t=n.tag(),e=n.status(),a=[];return n.all().forEach(function(n){var s=!t||n.tags.indexOf(t)>-1,o="all"===e||"published"===e&&n.published||"unpublished"===e&&!n.published;s&&o&&a.push(n)}),a}),n.hasMore=ko.pureComputed(function(){return n.count()<n.filtered().length}),n.showMore=function(){n.count(n.count()+n.step()),setTimeout(function(){window.scrollTo(0,document.body.scrollHeight)},50)},n.showAll=function(){n.count(n.filtered().length)},n.posts=ko.pureComputed(function(){var t=n.filtered();return t.slice(0,n.count())});var e={typeInfo:api.typeInfo(t),userInfo:api.userInfo(),posts:api.posts(t),tags:api.tags(t)};return resolveObject(e).then(function(t){n.title(t.typeInfo.menu_label),n.comments(t.typeInfo.comments);var e=!1;"admin"===t.userInfo.type&&(e=!0),t.typeInfo.grants.indexOf("create")>=0&&(e=!0),n.create(e),t.tags.forEach(function(t){t.label=t.tag+" ("+t.count+")"}),t.tags.sort(function(t,n){return t.tag===n.tag?0:t.tag<n.tag?-1:1}),n.tags(t.tags),t.posts.sort(function(t,n){return n.date_updated-t.date_updated}),n.all(t.posts.map(function(n){return postsItem.create(n,t.typeInfo,t.userInfo)})),view.show(template,n)})};


},{"../api":2,"../resolve_object":17,"../view":19,"../vm/posts_item":25}],13:[function(require,module,exports){
var api=require("../api"),view=require("../view"),message=require("../message"),trash_item=require("../vm/trash_item"),template='<h2>Trash</h2>\n<!-- ko if: items().length === 0 -->\n    <div class="alert alert-info" role="alert">\n        Trash has no entries.\n    </div>\n<!-- /ko -->\n<ul data-bind="foreach: items" class="list-group">\n    <li class="list-group-item post-item">\n        <h4 data-bind="click: expand, text: title" class="list-group-item-heading"></h4>\n        <div class="list-group-item-text">\n            Type: <span data-bind="text: type"></span>\n            <div data-bind="visible: expanded" class="post-controls">\n                <a data-bind="click: remove" class="btn btn-default btn-sm" href="#">\n                    <span class="glyphicon glyphicon-remove"></span> Remove\n                </a>\n                <a data-bind="click: restore" class="btn btn-default btn-sm" href="#">\n                    <span class="glyphicon glyphicon-floppy-disk"></span> Restore\n                </a>\n            </div>\n        </div>\n    </li>\n</ul>\n<a data-bind="click: purge" class="btn btn-default" href="#">\n    <span class="glyphicon glyphicon-remove"></span> Purge trash\n</a>\n';exports.create=function(){var e={items:ko.observableArray([])};return e.purge=function(){confirm("Purge trash?")&&api.purge().then(function(){message.info("Trash is purged."),route.refresh()})["catch"](message.error)},api.trash().then(function(a){e.items(a.map(function(e){return trash_item.create(e)})),view.show(template,e)})};


},{"../api":2,"../message":7,"../view":19,"../vm/trash_item":26}],14:[function(require,module,exports){
var api=require("../api"),view=require("../view"),user=require("../vm/user"),resolveObject=require("../resolve_object"),template='<!-- ko with: user -->\n    <h2 data-bind="text: fullname"></h2>\n\n    <form data-bind="submit: save" autocomplete="off">\n        <div data-bind="errors: errors.fullname" class="form-group">\n            <label for="user-fullname">Full name</label>\n            <input data-bind="value: fullname"\n                type="text" class="form-control" id="user-fullname"\n                placeholder="Full name">\n        </div>\n        <div data-bind="errors: errors.username" class="form-group">\n            <label for="user-username">Username</label>\n            <input data-bind="value: username"\n                type="text" class="form-control" id="user-username"\n                placeholder="Username">\n        </div>\n        <div data-bind="errors: errors.type" class="form-group">\n            <label for="user-type">Type</label>\n            <select data-bind="value: type, options: roles,\n                optionsText: \'label\', optionsValue: \'name\'"\n                class="form-control" id="user-type"></select>\n        </div>\n        <div data-bind="errors: errors.link" class="form-group">\n            <label for="user-link">Link</label>\n            <input data-bind="value: link"\n                type="text" class="form-control" id="user-link"\n                placeholder="Link">\n        </div>\n        <div class="checkbox">\n            <label><input data-bind="checked: comment_notifications" type="checkbox">\n                Comment notifications</label>\n        </div>\n        <div class="checkbox">\n            <label><input data-bind="checked: password_edit, disable: creating" type="checkbox">\n                Edit password</label>\n        </div>\n        <div data-bind="visible: password_edit, errors: errors.password" class="form-group">\n            <label for="user-password">New password</label>\n            <input data-bind="value: password"\n                type="password" class="form-control" id="user-password"\n                placeholder="Password">\n            <div class="checkbox">\n                <label><input data-bind="checked: password_text" type="checkbox">\n                    Show text</label>\n            </div>\n        </div>\n        <button type="submit" class="btn btn-default">\n            <span class="glyphicon glyphicon-ok"></span> Save\n        </button>\n        <a class="btn btn-default" href="#users">\n            <span class="glyphicon glyphicon-arrow-left"></span> Cancel\n        </a>\n    </form>\n<!-- /ko -->\n';exports.create=function(e){var n={user:ko.observable()},a={roles:api.roles()};return e&&(a.user=api.user(e)),resolveObject(a).then(function(a){if(n.user(user.create(a.roles,a.user)),view.show(template,n),e){var r=document.querySelector("#user-fullname");r.focus(),"function"==typeof r.setSelectionRange&&r.setSelectionRange(0,r.value.length)}})};


},{"../api":2,"../resolve_object":17,"../view":19,"../vm/user":27}],15:[function(require,module,exports){
var api=require("../api"),view=require("../view"),users_item=require("../vm/users_item"),template='<h2>Users</h2>\n<!-- ko if: !permission() -->\n    <div class="alert alert-warning" role="alert">\n        You do not have permissions to manage users.\n    </div>\n<!-- /ko -->\n<!-- ko if: permission() -->\n    <ul data-bind="foreach: users" class="list-group">\n        <li class="list-group-item post-item">\n            <h4 data-bind="click: expand, text: fullname" class="list-group-item-heading"></h4>\n            <div class="list-group-item-text">\n                Type: <span data-bind="text: type"></span>,\n                username: <span data-bind="text: username"></span>\n                <div data-bind="visible: expanded" class="post-controls">\n                    <a data-bind="attr: { href: \'#user/\' + $id }, css: { disabled: !editable }"\n                        class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-edit"></span> Edit\n                    </a>\n                    <a data-bind="click: remove, css: { disabled: !editable }"\n                        class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-remove"></span> Remove\n                    </a>\n                </div>\n            </div>\n        </li>\n    </ul>\n    <a class="btn btn-default" href="#user/new">\n        <span class="glyphicon glyphicon-plus"></span> Add\n    </a>\n<!-- /ko -->\n';exports.create=function(){var e={users:ko.observableArray([]),permission:ko.observable(!1)};return api.userInfo().then(function(n){return"admin"===n.type?api.users().then(function(s){e.users(s.map(function(e){var s=users_item.create(e);return s.editable="admin"===n.type||s.$id===n.$id,s})),e.permission(!0),view.show(template,e)}):void view.show(template,e)})};


},{"../api":2,"../view":19,"../vm/users_item":28}],16:[function(require,module,exports){
function holder(){return preview.querySelector("iframe")}function hideHandler(e){27===e.keyCode&&hide()}function hide(){viewScrollTop=document.body.scrollTop,main.style.display="block",preview.style.display="none",controls.style.display="none","function"==typeof callback&&callback(),document.body.scrollTop=editorScrollTop}function resize(){var e=holder();if(e){var o=e.contentDocument;if(o.body){var l=o.body.scrollHeight,t=e.clientHeight;l>t&&(e.style.height=l+50+"px")}}timer=setTimeout(resize,100)}var last,callback,editorScrollTop,viewScrollTop=-1;exports.show=function(e,o){var l=holder();l?last===e?l.contentWindow.location.reload(!0):(l.src=e,viewScrollTop=-1):(l=document.createElement("iframe"),l.src=e,preview.appendChild(l),viewScrollTop=-1),editorScrollTop=document.body.scrollTop,main.style.display="none",preview.style.display="block",controls.style.display="block",viewScrollTop>0&&(document.body.scrollTop=viewScrollTop),last=e,callback=o},exports.dispose=function(){preview.innerHTML="",callback=null};var main=document.getElementById("main"),preview=document.getElementById("preview"),controls=document.getElementById("preview-controls"),close=controls.querySelector('[data-control="close"]');close.addEventListener("click",function(e){e.preventDefault(),hide()},!1),document.addEventListener("keydown",hideHandler,!1);var timer;timer=resize();


},{}],17:[function(require,module,exports){
module.exports=function(n){var r=[],o=[];return Object.keys(n).forEach(function(t){r.push(n[t]),o.push(t)}),Promise.all(r).then(function(n){var r={};return n.forEach(function(n,t){r[o[t]]=n}),r})};


},{}],18:[function(require,module,exports){
exports.show=function(){document.getElementById("spinner").style.display="block"},exports.hide=function(){document.getElementById("spinner").style.display="none"};


},{}],19:[function(require,module,exports){
exports.show=kontainer.create("#content");


},{}],20:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message");exports.create=function(e,r,a,n){var o={};return assign(o,e),o.removable=!1,"admin"===r.type&&(o.removable=!0),n.grants.indexOf("update_any")>=0&&(o.removable=!0),n.grants.indexOf("update_own")>=0&&a.author===r.$id&&(o.removable=!0),o.remove=function(){confirm("Remove the comment?")&&api.removeComment(a.$id,o.$id).then(function(){message.info("The comment has been removed."),route.refresh()})["catch"](message.error)},o};


},{"../api":2,"../assign":3,"../message":7}],21:[function(require,module,exports){



},{}],22:[function(require,module,exports){
exports.mixin=function(e){e.expanded=ko.observable(!1),e.expand=function(){e.expanded()?e.expanded(!1):e.expanded(!0)}};


},{}],23:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("../vm/expandable");exports.create=function(e,n){var a={};return assign(a,n),expandable.mixin(a),a.url=ko.pureComputed(function(){return"/"+encodeURIComponent(e())+"/"+encodeURIComponent(a.name)}),a.image=!!a.name.match(/\.(gif|jpg|jpeg|tiff|png)$/i),a};


},{"../api":2,"../assign":3,"../message":7,"../vm/expandable":22}],24:[function(require,module,exports){
function isoDateToUnix(e){var t=e.match(/^(\d{4})\-(\d{2})\-(\d{2})$/);if(!t)throw new Error("Date does not match pattern: "+e);var n=new Date;return n.setUTCHours(0,0,0,0),n.setUTCFullYear(parseInt(t[1],10),parseInt(t[2],10)-1,parseInt(t[3],10)),Math.floor(n.getTime()/1e3)}function validatePost(e){""===e.title()&&e.errors.title.push("Title is not entered.");var t=e.slug();""===t?e.errors.slug.push("Slug is not entered."):t.match(/^[a-z0-9\-_]+$/)||e.errors.slug.push("Use lowercase letters, numbers, hyphen and underscore.");var n=e.date();""===n?e.published()&&e.errors.date.push("Publish date is not entered."):n.match(/^\d{4}\-\d{2}\-\d{2}$/)||e.errors.date.push("Date must be in the YYYY-MM-DD format.");var r=e.update();""===r?e.errors.update.push("Update date is not entered."):r.match(/^\d{4}\-\d{2}\-\d{2}$/)||e.errors.update.push("Update date must be in the YYYY-MM-DD format.")}function submitPost(e,t){var n=document.getElementById("post");Object.keys(e.errors).forEach(function(t){e.errors[t]([])}),validatePost(e);var r=n.querySelector(".has-error input, .has-error textarea, .has-error checkbox");return r?(n.querySelector(".bc-info .has-error input, .bc-info .has-error textarea, .bc-info .has-error checkbox")&&e.parent.info(!0),r.focus(),Promise.resolve(!1)):e.$id()?updatePost(n,e,t):savePost(n,e,t)}function updatePost(e,t,n){return api.updatePost(t.$id(),t.toJS()).then(function(){message.info('The entry "'+t.title()+'" has been updated.'),t.parent.clearAutosave(),"edit"===n?(t.slug_changed(!1),api.post(t.$id()).then(function(e){t.editor.content()!==e.content&&t.editor.begin(e.content),t.parent.modified(!1)})["catch"](message.error)):route.go("entries/"+t.type())})["catch"](saveError.bind(null,t))}function savePost(e,t,n){return api.savePost(t.toJS()).then(function(e){message.info('The entry "'+t.title()+'" has been saved.'),t.parent.modified(!1),t.parent.clearAutosave(),"edit"===n?route.go("entry/"+t.type()+"/"+e):route.go("entries/"+t.type())})["catch"](saveError.bind(null,t))}function saveError(e,t){throw t.toString().match(/entry with the same slug exists/)?(e.errors.slug.push("Entry with the same slug exists."),e.parent.info(!0),document.querySelector(".has-error input").focus()):message.error(t),t}var api=require("../api"),message=require("../message"),languages=require("../languages"),files_item=require("./files_item");exports.create=function(e,t,n,r,a,o,i){var s,u={$id:ko.observable(),authors:r,title:ko.observable("Untitled"),slug:ko.observable("untitled"),description:ko.observable(""),types:n,type:ko.observable(t),content_type:ko.observable("markdown"),published:ko.observable(!1),commenting:ko.observable(!0),tags:ko.observable(""),comments:ko.observable(0),author:ko.observable(),date:ko.observable(""),update:ko.observable(""),submit:function(){submitPost(u,"edit")},save:function(){submitPost(u,"leave")},language:ko.observable(bcLanguage),languages:languages,slug_changed:ko.observable(!1),can_change_type:"admin"===e.type,can_change_author:"admin"===e.type,files:ko.observableArray(a),errors:{title:ko.observableArray([]),slug:ko.observableArray([]),content:ko.observableArray([]),date:ko.observableArray([]),update:ko.observableArray([])},toJS:function(){var e,t=u.tags().trim(),n=u.date();""!==n&&(e=isoDateToUnix(n));var r=isoDateToUnix(u.update());return{author:u.author(),title:u.title(),slug:u.slug(),description:u.description(),content:u.editor.content(),type:u.type(),date_published:e,date_updated:r,commenting:u.commenting(),published:u.published(),content_type:u.content_type(),tags:""===t?[]:t.split(/\, */),language:u.language()}},fromJS:function(e){if("undefined"!=typeof e.date_published){var t=new Date(1e3*e.date_published);u.date(t.toISOString().substring(0,10))}u.$id(e.$id),u.author(e.author),u.title(e.title),u.slug(e.slug),u.description(e.description||""),u.type(e.type),u.content_type(e.content_type),u.published(e.published),u.commenting(e.commenting),u.tags(e.tags.join(", ")),u.comments(e.comments),u.language(e.language),a.sort(function(e,t){return e.name===t.name?0:e.name<t.name?-1:1}),u.files(a.map(function(e){return files_item.create(u.slug,e)}))}};if(n.forEach(function(e){e.name===t&&(s=e)}),!s)throw new Error("Invalid type "+t);return u.preview=s.preview,o?i?(u.fromJS(i),setTimeout(function(){u.parent.autosave()},100)):u.fromJS(o):(i&&(u.fromJS(i),setTimeout(function(){u.parent.autosave()},100)),u.title.subscribe(function(e){u.slug(getSlug(e))}),u.author(e.$id),u.date((new Date).toISOString().substring(0,10))),u.can_publish=!1,"admin"===e.type&&(u.can_publish=!0),s.grants.indexOf("publish_any")>=0&&(u.can_publish=!0),s.grants.indexOf("publish_own")>=0&&u.author()===e.$id&&(u.can_publish=!0),u.can_manage_files=!1,"admin"===e.type&&(u.can_manage_files=!0),s.grants.indexOf("update_any")>=0&&s.grants.indexOf("files")>=0&&(u.can_manage_files=!0),s.grants.indexOf("update_own")>=0&&u.author()===e.$id&&s.grants.indexOf("files")>=0&&(u.can_manage_files=!0),u.update((new Date).toISOString().substring(0,10)),u.published.subscribe(function(e){e&&""===u.date()&&u.date((new Date).toISOString().substring(0,10))}),u.slug.subscribe(function(e){u.slug_changed(!0)}),u.uploadFile=function(){var e=document.getElementById("entry-file").files[0];e&&u.$id()&&api.upload(u.$id(),e).then(function(t){message.info('File "'+e.name+'" has been uploaded.'),u.files.push(files_item.create(u.slug,{name:e.name}));var n=document.getElementById("entry-file-wrap");n.innerHTML="",n.innerHTML='<input type="file" id="entry-file" class="form-control" placeholder="Your file">'})["catch"](message.error)},u.removeFile=function(e){confirm('Remove the file "'+e.name+'"?')&&api.removeFile(u.$id(),e.name).then(function(){message.info('File "'+e.name+'" has been removed.'),u.files.remove(e)})["catch"](message.error)},u.insertImage=function(e){api.imageSize(u.$id(),e.name).then(function(t){u.editor.insert('<img src="'+e.url()+'" width="'+t.width+'" height="'+t.height+'">'),u.editor.focus()},function(){u.editor.insert('<img src="'+e.url()+'">'),u.editor.focus()})["catch"](message.error)},u.insertLink=function(e){u.editor.insert("["+e.name+"]("+e.url()+")"),u.editor.focus()},u.submitUpdate=function(){return submitPost(u,"edit")},u.change=function(e){u.changeCallback=e},["author","title","slug","description","type","content_type","published","commenting","tags","language","date","update"].forEach(function(e){u[e].subscribe(function(){"function"==typeof u.changeCallback&&u.changeCallback()})}),u};


},{"../api":2,"../languages":6,"../message":7,"./files_item":23}],25:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("./expandable");exports.create=function(e,a,n){var i={};return expandable.mixin(i),assign(i,e),i.removable=!1,"admin"===n.type&&(i.removable=!0),a.grants.indexOf("remove_any")>=0&&(i.removable=!0),a.grants.indexOf("remove_own")>=0&&n.$id===i.author&&(i.removable=!0),i.editable=!1,"admin"===n.type&&(i.editable=!0),a.grants.indexOf("update_any")>=0&&(i.editable=!0),a.grants.indexOf("update_own")>=0&&n.$id===i.author&&(i.editable=!0),i.editLink="#entry/"+a.name+"/"+i.$id,i.commentsLink="#comments/"+a.name+"/"+i.$id,i.remove=function(){confirm('Remove the post "'+i.title+'"?')&&api.removePost(i.$id).then(function(){message.info('The post "'+i.title+'" has been removed.'),route.refresh()})["catch"](message.error)},i};


},{"../api":2,"../assign":3,"../message":7,"./expandable":22}],26:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("./expandable");exports.create=function(e){var r={};return expandable.mixin(r),assign(r,e),r.remove=function(){confirm("Remove the entry from trash?")&&api.removeFromTrash(r.$id).then(function(){message.info('Item "'+r.title+'" has been removed.'),route.refresh()})["catch"](message.error)},r.restore=function(){api.restore(r.$id).then(function(){message.info('Item "'+r.title+'" has been restored.'),route.refresh()})["catch"](message.error)},r};


},{"../api":2,"../assign":3,"../message":7,"./expandable":22}],27:[function(require,module,exports){
function handleSaveError(e,r){var s=r.toString();s.match(/Cannot remove the last admin/)?e.errors.type.push("Cannot remove the last admin."):s.match(/username exists/)?e.errors.username.push("The username exists."):message.error(r)}var api=require("../api"),message=require("../message");exports.create=function(e,r){var s={username:ko.observable(""),fullname:ko.observable(""),type:ko.observable("author"),link:ko.observable(""),password:ko.observable(""),password_edit:ko.observable(!0),password_text:ko.observable(!1),error:ko.observable(""),creating:!0,roles:e,comment_notifications:ko.observable(!1),errors:{username:ko.observableArray([]),fullname:ko.observableArray([]),password:ko.observableArray([]),link:ko.observableArray([]),type:ko.observableArray([])},save:function(e){if(Object.keys(s.errors).forEach(function(e){s.errors[e]([])}),s.password_edit()){var r=s.password();""===r?s.errors.password.push("Password is not set."):r.length<6&&s.errors.password.push("Password length must be at least 6.")}var a=s.username();""===a?s.errors.username.push("Username is not set."):a.match(/^[^@]+@[^@]+$/)||s.errors.username.push("Username must be an email address.");var o=s.fullname();""===o&&s.errors.fullname.push("Full name is not set.");var t=s.link();""!==t&&(t.match(/https?:\/\//)||s.errors.link.push("Link must start with http:// or https:// prefix."));var n=e.querySelector(".has-error input, .has-error textarea, .has-error checkbox, .has-error select");return n?(n.focus(),!1):(s.$id?api.updateUser(s.$id,s.toJS()).then(function(){message.info('User "'+s.username()+'" has been updated.'),route.go("users")})["catch"](handleSaveError.bind(null,s)):api.saveUser(s.toJS()).then(function(){message.info('User "'+s.username()+'" has been added.'),route.go("users")})["catch"](handleSaveError.bind(null,s)),!1)},toJS:function(){var e={username:s.username(),fullname:s.fullname(),type:s.type(),link:s.link(),comment_notifications:s.comment_notifications()};return s.password_edit()&&(e.password=s.password()),e}};return s.password_text.subscribe(function(e){e?document.getElementById("user-password").type="text":document.getElementById("user-password").type="password"}),r?(s.$id=r.$id,s.creating=!1,s.username(r.username),s.fullname(r.fullname),s.type(r.type),s.link(r.link),s.password_edit(!1),s.comment_notifications(r.comment_notifications)):s.fullname("Unnamed"),s};


},{"../api":2,"../message":7}],28:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("./expandable");exports.create=function(e){var r={editable:!1};return expandable.mixin(r),assign(r,e),r.remove=function(){confirm("Remove the user?")&&api.userInfo().then(function(e){return api.removeUser(r.$id).then(function(){message.info('User "'+r.username+'" has been removed.'),e.$id===r.$id?(sessionStorage.removeItem("api-key"),localStorage.removeItem("api-key"),window.location="/admin"):route.refresh()})})["catch"](message.error)},r};


},{"../api":2,"../assign":3,"../message":7,"./expandable":22}]},{},[1])
//# sourceMappingURL=admin.bundle.js.map
