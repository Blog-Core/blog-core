(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
function authenticated(){api.hasKey()?menu.load():route.go("login")}var api=require("./lib/api"),message=require("./lib/message"),login=require("./lib/pages/login"),posts=require("./lib/pages/posts"),post=require("./lib/pages/post"),users=require("./lib/pages/users"),user=require("./lib/pages/user"),comments=require("./lib/pages/comments");require("./lib/pages/files"),window.formatDate=function(e){return new Date(1e3*e).toISOString().substring(0,10)},ko.subscribable.fn.trimmed=function(){return ko.computed({read:function(){return this().trim()},write:function(e){this(e.trim()),this.valueHasMutated()},owner:this})};var menu={active:ko.observable(),types:ko.observable(),load:function(){return menu.types()?Promise.resolve(menu.types()):api.types().then(function(e){return menu.types(e),e})}};ko.applyBindings(menu,document.getElementById("menu")),route(/^entries\/([^\/]+)/,function(e){authenticated(),menu.active(e),posts.create(e)["catch"](message.error)}),route(/^entry\/([^\/]+)\/([^\/]+)/,function(e,t){authenticated(),post.create(e,t)["catch"](message.error)}),route(/^new\/([^\/]+)/,function(e){authenticated(),menu.active(e),post.create(e)["catch"](message.error)}),route(/^comments\/([^\/]+)\/([^\/]+)/,function(e,t){authenticated(),menu.active(e),comments.create(e,t)["catch"](message.error)}),route(/^users/,function(){authenticated(),menu.active("users"),users.create()["catch"](message.error)}),route(/^user\/new/,function(){authenticated(),menu.active("users"),user.create()["catch"](message.error)}),route(/^user\/([^\/]+)/,function(e){authenticated(),menu.active("users"),user.create(e)["catch"](message.error)}),route(/^login/,function(){authenticated(),menu.active(null),login.create()["catch"](message.error)}),route(/^logout/,function(){sessionStorage.removeItem("api-key"),localStorage.removeItem("api-key"),window.location="/admin"}),route(/^landing/,function(){menu.active(null),menu.load().then(function(e){e.length>0&&route.go("entries/"+e[0].name)})}),route(/.*/,function(){route.go(api.hasKey()?"landing":"login")}),document.body.addEventListener("click",function(e){return e.target.href&&e.target.href.match(/#logout$/)?confirm("Do you want to log out?")?!0:(e.stopPropagation(),e.preventDefault(),!1):void 0},!1);


},{"./lib/api":2,"./lib/message":5,"./lib/pages/comments":6,"./lib/pages/files":7,"./lib/pages/login":8,"./lib/pages/post":9,"./lib/pages/posts":10,"./lib/pages/user":11,"./lib/pages/users":12}],2:[function(require,module,exports){
function spinnerShow(){0===showCount&&spinner.show(),showCount+=1}function spinnerHide(){showCount-=1,0===showCount&&spinner.hide()}function fetchGet(e){return spinnerShow(),fetch(e,{headers:{Accept:"application/json","X-Key":apiKey()}})["catch"](function(e){throw spinnerHide(),e}).then(handleResponse)}function fetchDelete(e){return spinnerShow(),fetch(e,{method:"DELETE",headers:{Accept:"application/json","X-Key":apiKey()}})["catch"](function(e){throw spinnerHide(),e}).then(handleResponse)}function fetchPost(e,n,t){spinnerShow();var o={Accept:"application/json","Content-Type":"application/json"};return t||(o["X-Key"]=apiKey()),fetch(e,{method:"POST",headers:o,body:JSON.stringify(n)})["catch"](function(e){throw spinnerHide(),e}).then(handleResponse)}function fetchUpdate(e,n){return spinnerShow(),fetch(e,{method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json","X-Key":apiKey()},body:JSON.stringify(n)})["catch"](function(e){throw spinnerHide(),e}).then(handleResponse)}function handleResponse(e){return spinnerHide(),e.json().then(function(e){if("success"===e.status)return e.data;throw new Error("API response is not success: "+e.message)})}var spinner=require("./spinner"),showCount=0;exports.login=function(e,n){return fetchPost("/api/auth",{username:e,password:n},!0)},exports.posts=function(e){return fetchGet("/api/entries/"+encodeURIComponent(e))},exports.post=function(e){return fetchGet("/api/entry/"+encodeURIComponent(e))},exports.entryInfo=function(e){return fetchGet("/api/entry/"+encodeURIComponent(e)+"/info")},exports.comments=function(e){return fetchGet("/api/post/"+encodeURIComponent(e)+"/comments")},exports.removeComment=function(e,n){return fetchDelete("/api/comment/"+encodeURIComponent(e)+"/"+encodeURIComponent(n))},exports.updatePost=function(e,n){return fetchUpdate("/api/entry/"+encodeURIComponent(e),n)},exports.savePost=function(e){return fetchPost("/api/entry",e)},exports.removePost=function(e){return fetchDelete("/api/entry/"+encodeURIComponent(e))},exports.files=function(e){return fetchGet("/api/files/"+encodeURIComponent(e))},exports.removeFile=function(e,n){return fetchDelete("/api/file/"+encodeURIComponent(e)+"/"+encodeURIComponent(n))},exports.users=function(){return fetchGet("/api/users")},exports.user=function(e){return fetchGet("/api/user/"+encodeURIComponent(e))},exports.userInfo=function(){return fetchGet("/api/user/info")},exports.updateUser=function(e,n){return fetchUpdate("/api/user/"+encodeURIComponent(e),n)},exports.saveUser=function(e){return fetchPost("/api/user",e)},exports.removeUser=function(e){return fetchDelete("/api/user/"+encodeURIComponent(e))},exports.types=function(){return fetchGet("/api/types")},exports.typeInfo=function(e){return fetchGet("/api/type/"+encodeURIComponent(e))},exports.roles=function(){return fetchGet("/api/roles")},exports.hasKey=function(){return!(!sessionStorage.getItem("api-key")&&!localStorage.getItem("api-key"))};var apiKey=exports.apiKey=function(){var e=sessionStorage.getItem("api-key")||localStorage.getItem("api-key");if(!e)throw new Error("API key is not set");return e};


},{"./spinner":14}],3:[function(require,module,exports){
module.exports=function(o,c){Object.keys(c).forEach(function(e){o[e]=c[e]})};


},{}],4:[function(require,module,exports){
module.exports=[{code:"ab",name:"Abkhaz"},{code:"aa",name:"Afar"},{code:"af",name:"Afrikaans"},{code:"ak",name:"Akan"},{code:"sq",name:"Albanian"},{code:"am",name:"Amharic"},{code:"ar",name:"Arabic"},{code:"an",name:"Aragonese"},{code:"hy",name:"Armenian"},{code:"as",name:"Assamese"},{code:"av",name:"Avaric"},{code:"ae",name:"Avestan"},{code:"ay",name:"Aymara"},{code:"az",name:"Azerbaijani"},{code:"bm",name:"Bambara"},{code:"ba",name:"Bashkir"},{code:"eu",name:"Basque"},{code:"be",name:"Belarusian"},{code:"bn",name:"Bengali"},{code:"bh",name:"Bihari"},{code:"bi",name:"Bislama"},{code:"bs",name:"Bosnian"},{code:"br",name:"Breton"},{code:"bg",name:"Bulgarian"},{code:"my",name:"Burmese"},{code:"ca",name:"Catalan; Valencian"},{code:"ch",name:"Chamorro"},{code:"ce",name:"Chechen"},{code:"ny",name:"Chichewa; Chewa; Nyanja"},{code:"zh",name:"Chinese"},{code:"cv",name:"Chuvash"},{code:"kw",name:"Cornish"},{code:"co",name:"Corsican"},{code:"cr",name:"Cree"},{code:"hr",name:"Croatian"},{code:"cs",name:"Czech"},{code:"da",name:"Danish"},{code:"dv",name:"Divehi; Dhivehi; Maldivian;"},{code:"nl",name:"Dutch"},{code:"en",name:"English"},{code:"eo",name:"Esperanto"},{code:"et",name:"Estonian"},{code:"ee",name:"Ewe"},{code:"fo",name:"Faroese"},{code:"fj",name:"Fijian"},{code:"fi",name:"Finnish"},{code:"fr",name:"French"},{code:"ff",name:"Fula; Fulah; Pulaar; Pular"},{code:"gl",name:"Galician"},{code:"ka",name:"Georgian"},{code:"de",name:"German"},{code:"el",name:"Greek, Modern"},{code:"gn",name:"Guaraní"},{code:"gu",name:"Gujarati"},{code:"ht",name:"Haitian; Haitian Creole"},{code:"ha",name:"Hausa"},{code:"he",name:"Hebrew (modern)"},{code:"hz",name:"Herero"},{code:"hi",name:"Hindi"},{code:"ho",name:"Hiri Motu"},{code:"hu",name:"Hungarian"},{code:"is",name:"Icelandic"},{code:"io",name:"Ido"},{code:"ig",name:"Igbo"},{code:"id",name:"Indonesian"},{code:"ia",name:"Interlingua"},{code:"ie",name:"Interlingue"},{code:"iu",name:"Inuktitut"},{code:"ik",name:"Inupiaq"},{code:"ga",name:"Irish"},{code:"it",name:"Italian"},{code:"ja",name:"Japanese"},{code:"jv",name:"Javanese"},{code:"kl",name:"Kalaallisut, Greenlandic"},{code:"kn",name:"Kannada"},{code:"kr",name:"Kanuri"},{code:"ks",name:"Kashmiri"},{code:"kk",name:"Kazakh"},{code:"km",name:"Khmer"},{code:"ki",name:"Kikuyu, Gikuyu"},{code:"rw",name:"Kinyarwanda"},{code:"ky",name:"Kirghiz, Kyrgyz"},{code:"rn",name:"Kirundi"},{code:"kv",name:"Komi"},{code:"kg",name:"Kongo"},{code:"ko",name:"Korean"},{code:"ku",name:"Kurdish"},{code:"kj",name:"Kwanyama, Kuanyama"},{code:"lo",name:"Lao"},{code:"la",name:"Latin"},{code:"lv",name:"Latvian"},{code:"li",name:"Limburgish, Limburgan, Limburger"},{code:"ln",name:"Lingala"},{code:"lt",name:"Lithuanian"},{code:"lu",name:"Luba-Katanga"},{code:"lg",name:"Luganda"},{code:"lb",name:"Luxembourgish, Letzeburgesch"},{code:"mk",name:"Macedonian"},{code:"mg",name:"Malagasy"},{code:"ms",name:"Malay"},{code:"ml",name:"Malayalam"},{code:"mt",name:"Maltese"},{code:"gv",name:"Manx"},{code:"mr",name:"Marathi (Marāṭhī)"},{code:"mh",name:"Marshallese"},{code:"mn",name:"Mongolian"},{code:"mi",name:"Māori"},{code:"na",name:"Nauru"},{code:"nv",name:"Navajo, Navaho"},{code:"ng",name:"Ndonga"},{code:"ne",name:"Nepali"},{code:"nd",name:"North Ndebele"},{code:"se",name:"Northern Sami"},{code:"no",name:"Norwegian"},{code:"nb",name:"Norwegian Bokmål"},{code:"nn",name:"Norwegian Nynorsk"},{code:"ii",name:"Nuosu"},{code:"oc",name:"Occitan"},{code:"oj",name:"Ojibwe, Ojibwa"},{code:"cu",name:"Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic"},{code:"or",name:"Oriya"},{code:"om",name:"Oromo"},{code:"os",name:"Ossetian, Ossetic"},{code:"pa",name:"Panjabi, Punjabi"},{code:"ps",name:"Pashto, Pushto"},{code:"fa",name:"Persian"},{code:"pl",name:"Polish"},{code:"pt",name:"Portuguese"},{code:"pi",name:"Pāli"},{code:"qu",name:"Quechua"},{code:"ro",name:"Romanian, Moldavian, Moldovan"},{code:"rm",name:"Romansh"},{code:"ru",name:"Russian"},{code:"sm",name:"Samoan"},{code:"sg",name:"Sango"},{code:"sa",name:"Sanskrit (Saṁskṛta)"},{code:"sc",name:"Sardinian"},{code:"gd",name:"Scottish Gaelic; Gaelic"},{code:"sr",name:"Serbian"},{code:"sn",name:"Shona"},{code:"sd",name:"Sindhi"},{code:"si",name:"Sinhala, Sinhalese"},{code:"sk",name:"Slovak"},{code:"sl",name:"Slovene"},{code:"so",name:"Somali"},{code:"nr",name:"South Ndebele"},{code:"st",name:"Southern Sotho"},{code:"es",name:"Spanish; Castilian"},{code:"su",name:"Sundanese"},{code:"sw",name:"Swahili"},{code:"ss",name:"Swati"},{code:"sv",name:"Swedish"},{code:"tl",name:"Tagalog"},{code:"ty",name:"Tahitian"},{code:"tg",name:"Tajik"},{code:"ta",name:"Tamil"},{code:"tt",name:"Tatar"},{code:"te",name:"Telugu"},{code:"th",name:"Thai"},{code:"bo",name:"Tibetan Standard, Tibetan, Central"},{code:"ti",name:"Tigrinya"},{code:"to",name:"Tonga (Tonga Islands)"},{code:"ts",name:"Tsonga"},{code:"tn",name:"Tswana"},{code:"tr",name:"Turkish"},{code:"tk",name:"Turkmen"},{code:"tw",name:"Twi"},{code:"ug",name:"Uighur, Uyghur"},{code:"uk",name:"Ukrainian"},{code:"ur",name:"Urdu"},{code:"uz",name:"Uzbek"},{code:"ve",name:"Venda"},{code:"vi",name:"Vietnamese"},{code:"vo",name:"Volapük"},{code:"wa",name:"Walloon"},{code:"cy",name:"Welsh"},{code:"fy",name:"Western Frisian"},{code:"wo",name:"Wolof"},{code:"xh",name:"Xhosa"},{code:"yi",name:"Yiddish"},{code:"yo",name:"Yoruba"},{code:"za",name:"Zhuang, Chuang"}];


},{}],5:[function(require,module,exports){
exports.info=function(e){var n=document.getElementById("messages"),t=document.createElement("div");t.className="alert alert-success message",t.innerHTML=e,n.appendChild(t),setTimeout(function(){n.removeChild(t)},2e3)},exports.error=function(e){var n=document.createElement("button");n.className="close",n.innerHTML="&times;";var t=document.createElement("span");t.innerHTML=e.toString();var a=document.getElementById("messages"),r=document.createElement("div");r.className="alert alert-danger message",r.appendChild(n),r.appendChild(t),n.addEventListener("click",function(){a.removeChild(r)},!1),a.appendChild(r),e instanceof Error&&console.error(e.stack)};


},{}],6:[function(require,module,exports){
var api=require("../api"),view=require("../view"),resolveObject=require("../resolve_object"),comments_item=require("../vm/comments_item"),template='<h2 data-bind="text: title"></h2>\n<h3>Comments</h3>\n<ul data-bind="foreach: comments" class="list-group">\n    <li class="list-group-item post-item">\n        <h4 data-bind="text: author, click: expand" class="list-group-item-heading"></h4>\n        <div class="list-group-item-text">\n            Date: <span data-bind="text: formatDate(date)"></span>\n            <div data-bind="visible: expanded" class="post-controls">\n                <div class="panel panel-default">\n                    <div data-bind="text: content" class="panel-body"></div>\n                </div>\n                <!-- ko if: removable -->\n                    <a data-bind="click: remove" class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-remove"></span> Remove\n                    </a>\n                <!-- /ko -->\n            </div>\n        </div>\n    </li>\n</ul>\n<!-- ko if: comments().length === 0 -->\n    <div class="alert alert-info" role="alert">\n        This entry has no comments.\n    </div>\n<!-- /ko -->\n';exports.create=function(e){var t={title:ko.observable(),comments:ko.observable([])},n={entryInfo:api.entryInfo(params.id),userInfo:api.userInfo(params.id),typeInfo:api.typeInfo(params.type),comments:api.comments(params.id)};return resolveObject(n).then(function(e){t.title(e.entryInfo.title),t.comments(e.comments.map(function(t){return comments_item.create(t,e.userInfo,e.entryInfo,e.typeInfo)})),view.show(template,t)})};


},{"../api":2,"../resolve_object":13,"../view":16,"../vm/comments_item":17}],7:[function(require,module,exports){
function page(e){var n=(e.directory,{entry_id:e.id,entry_slug:e.slug,files:ko.observableArray([]),progress:ko.observable(0),slug_changed:e.slug_changed});return n.upload=function(){var e=document.getElementById("entry-file").files[0];if(e){n.file=e;var a=new XMLHttpRequest;a.upload.addEventListener("progress",n.progress,!1),a.addEventListener("load",n.complete,!1),a.addEventListener("error",n.failed,!1),a.addEventListener("abort",n.aborted,!1),a.open("POST","/api/upload/"+encodeURIComponent(n.entry_id())),a.setRequestHeader("X-Key",api.apiKey()),a.setRequestHeader("X-File-Name",e.name),a.setRequestHeader("Content-Type","application/octet-stream"),a.send(e)}},n.progress=function(e){e.lengthComputable&&n.progress(Math.round(100*e.loaded/e.total))},n.complete=function(e){var a=JSON.parse(e.target.responseText);if("success"===a.status){message.info('File "'+n.file.name+'" has been uploaded.'),n.files.push(files_item.create(n.entry_slug,{name:n.file.name}));var t=document.getElementById("entry-file-wrap");t.innerHTML="",t.innerHTML='<input type="file" id="entry-file" class="form-control" placeholder="Your file">'}else message.error(a.message)},n.upload.failed=function(){},n.aborted=function(){},n.remove=function(e){confirm('Remove the file "'+e.name+'"?')&&api.removeFile(n.entry_id(),e.name).then(function(){message.info('File "'+e.name+'" has been removed.'),n.files.remove(e)})["catch"](message.error)},n.entry_id()&&api.files(n.entry_id()).then(function(e){e.sort(function(e,n){return e.name===n.name?0:e.name<n.name?-1:1}),n.files(e.map(function(e){return files_item.create(n.entry_slug,e)}))})["catch"](message.error),n}var api=require("../api"),message=require("../message"),files_item=require("../vm/files_item");ko.components.register("files",{viewModel:{createViewModel:page},template:'<h3>Entry files</h3>\n<!-- ko if: !entry_id() -->\n    <div class="alert alert-warning" role="alert">\n        To upload files you need to save the entry first.\n    </div>\n<!-- /ko -->\n<!-- ko if: entry_id() -->\n    <!-- ko if: slug_changed() -->\n        <div class="alert alert-warning" role="alert">\n            You have changed the entry slug. File management is\n            re-enabled after saving the entry.\n        </div>\n    <!-- /ko -->\n    <!-- ko if: !slug_changed() -->\n        <!-- ko if: files().length === 0 -->\n            <div class="alert alert-info" role="alert">\n                This entry has no files.\n            </div>\n        <!-- /ko -->\n        <div data-bind="foreach: files" class="list-group">\n            <li class="list-group-item post-item">\n                <div data-bind="click: expand" class="list-group-item-heading">\n                    <span class="glyphicon glyphicon-file"></span> <!-- ko text: name --><!-- /ko -->\n                </div>\n                <!-- ko if: expanded() -->\n                    URL: <!-- ko text: url --><!-- /ko -->\n                    <div class="post-controls">\n                        <a data-bind="click: $parent.remove"\n                            class="btn btn-default btn-sm" href="#">\n                            <span class="glyphicon glyphicon-edit"></span> Remove</a>\n                        <a data-bind="attr: { href: url }" target="_blank"\n                            class="btn btn-default btn-sm" href="#"> View (in new tab)</a>\n                    </div>\n                <!-- /ko -->\n            </li>\n        </div>\n        <div class="row bc-controls">\n            <div class="col-sm-6">\n                <div id="entry-file-wrap">\n                    <input type="file" id="entry-file" class="form-control" placeholder="Your file">\n                </div>\n            </div>\n            <div class="col-sm-6">\n                <a data-bind="click: upload" class="btn btn-default" href="#">\n                    <span class="glyphicon glyphicon-upload"></span> Upload\n                </a>\n            </div>\n        </div>\n    <!-- /ko -->\n<!-- /ko -->\n'});


},{"../api":2,"../message":5,"../vm/files_item":19}],8:[function(require,module,exports){
var api=require("../api"),view=require("../view"),validate=require("../validate"),template='<h2>Login</h2>\n\n<form data-bind="submit: login">\n    <div class="form-group">\n        <label class="control-label" for="username">Username</label>\n        <input data-bind="textInput: username"\n            type="text" name="username" title="Username"\n            placeholder="Username" class="form-control" id="username">\n    </div>\n    <div class="form-group">\n        <label class="control-label" for="password">Password</label>\n        <input data-bind="textInput: password"\n            type="password" name="password" title="Password"\n            placeholder="Password" class="form-control" id="password">\n    </div>\n    <div class="checkbox">\n        <label><input data-bind="checked: remember" type="checkbox"\n            name="remember" id="remember">\n            Remember me</label>\n    </div>\n    <button type="submit" class="btn btn-default">Login</button>\n</form>\n';exports.create=function(){var e={username:ko.observable("").trimmed(),password:ko.observable("").trimmed(),remember:ko.observable(!1)};return e.login=function(a){validate.clear(a);var r=e.username(),n=e.password();return""===r?validate.error("username","Username is not entered."):r.match(/^[^@]+@[^@]+$/)||validate.error("username","Username must be an email."),""===n&&validate.error("password","Password is not entered."),validate.hasError(a)?!1:void api.login(r,n).then(function(a){e.remember()?(localStorage.setItem("api-key",a.key),sessionStorage.removeItem("api-key")):(sessionStorage.setItem("api-key",a.key),localStorage.removeItem("api-key")),route.go("landing")})["catch"](function(e){validate.formError(a,e)})},view.show(template,e),Promise.resolve()};


},{"../api":2,"../validate":15,"../view":16}],9:[function(require,module,exports){
function postData(t){return api.userInfo().then(function(e){var n={types:api.types(),users:authors(e),userInfo:Promise.resolve(e)};return t&&(n.post=api.post(t)),resolveObject(n)})}function authors(t){return"admin"===t.type?api.users():Promise.resolve([{$id:t.$id,fullname:t.fullname}])}var api=require("../api"),post=require("../vm/post"),view=require("../view"),resolveObject=require("../resolve_object"),template='<!-- ko with: post -->\n    <h2 data-bind="text: title"></h2>\n    <form data-bind="submit: submit" autocomplete="off" id="post">\n        <div class="form-group">\n            <label for="post-title">Title</label>\n            <input data-bind="textInput: title"\n                type="text" class="form-control" id="post-title"\n                placeholder="Title">\n        </div>\n        <div class="form-group">\n            <label for="post-slug">Slug</label>\n            <input data-bind="textInput: slug"\n                type="text" class="form-control" id="post-slug"\n                placeholder="Slug">\n            <p class="help-block">Slug should not be modified after publishing as it will break links.</p>\n        </div>\n        <div class="form-group">\n            <label for="post-description">Description</label>\n            <textarea\n                data-bind="textInput: description"\n                class="form-control" rows="3" id="post-description" placeholder="Description"></textarea>\n            <p class="help-block">Description is used by search engines to show the page snippet.</p>\n        </div>\n        <div class="form-group">\n            <label for="post-content">Content</label>\n            <textarea\n                data-bind="textInput: content"\n                class="form-control content" rows="20" id="post-content"\n                placeholder="Content"></textarea>\n        </div>\n        <div class="form-group">\n            <label for="post-type">Type</label>\n            <select data-bind="value: type, options: types,\n                optionsText: \'label\', optionsValue: \'name\',\n                attr: { disabled: !can_change_type }"\n                class="form-control" id="post-type"></select>\n        </div>\n        <div class="form-group">\n            <label for="post-content-type">Content type</label>\n            <select data-bind="value: content_type"\n                class="form-control" id="post-content-type">\n                <option value="markdown">Markdown</option>\n                <option value="raw">Raw</option>\n            </select>\n        </div>\n        <div class="form-group">\n            <label for="post-author">Author</label>\n            <select data-bind="value: author, options: authors,\n                optionsText: \'fullname\', optionsValue: \'$id\',\n                attr: { disabled: !can_change_author }"\n                class="form-control" id="post-author"></select>\n        </div>\n        <div class="form-group">\n            <label for="post-tags">Tags</label>\n            <input data-bind="textInput: tags"\n                type="text" class="form-control" id="post-tags"\n                placeholder="Tags">\n            <p class="help-block">Separate multiple tags with commas.</p>\n        </div>\n        <div class="checkbox">\n            <label><input data-bind="checked: published,\n                attr: { disabled: !can_publish }"\n                type="checkbox" id="post-published"> Published</label>\n        </div>\n        <div class="form-group">\n            <label for="post-date">Publish date</label>\n            <input data-bind="textInput: date"\n                type="text" class="form-control" id="post-date"\n                placeholder="YYYY-MM-DD">\n        </div>\n        <div class="form-group">\n            <label for="post-update">Update date</label>\n            <input data-bind="textInput: update"\n                type="text" class="form-control" id="post-update"\n                placeholder="YYYY-MM-DD">\n        </div>\n            <div class="checkbox">\n                <label><input data-bind="checked: commenting"\n                    type="checkbox"> Commenting</label>\n            </div>\n        <div class="form-group">\n            <label for="post-language">Language</label>\n            <select data-bind="value: language, options: languages,\n                optionsText: \'name\', optionsValue: \'code\'"\n                class="form-control" id="post-language"></select>\n        </div>\n        <!-- ko if: can_manage_files -->\n            <!-- ko component: { name: \'files\',\n                params: { id: $id, slug: slug, slug_changed: slug_changed } } --><!-- /ko -->\n        <!-- /ko -->\n        <!-- ko if: !can_manage_files -->\n            <div class="alert alert-warning" role="alert">\n                To upload files you need file management permissions.\n            </div>\n        <!-- /ko -->\n        <button data-bind="click: save" class="btn btn-default">\n            <span class="glyphicon glyphicon-ok"></span> Save/leave\n        </button>\n        <button type="submit" class="btn btn-default">\n            <span class="glyphicon glyphicon-ok"></span> Save/continue\n        </button>\n        <a data-bind="attr: { href: \'#entries/\' + type() }" class="btn btn-default" href="#">\n            <span class="glyphicon glyphicon-arrow-left"></span> Entries\n        </a>\n    </form>\n<!-- /ko -->\n';exports.create=function(t,e){var n={post:ko.observable()};return postData(e).then(function(o){if(n.post(post.create(o.userInfo,t,o.types,o.users,o.post)),view.show(template,n),e){var a=document.getElementById("post-content");a.style.height=a.scrollHeight+10+"px"}else{var l=document.querySelector("#post-title");l.focus(),"function"==typeof l.setSelectionRange&&l.setSelectionRange(0,l.value.length)}})};


},{"../api":2,"../resolve_object":13,"../view":16,"../vm/post":20}],10:[function(require,module,exports){
var api=require("../api"),view=require("../view"),postsItem=require("../vm/posts_item"),resolveObject=require("../resolve_object"),template='<h2 data-bind="text: title"></h2>\n\n<ul data-bind="foreach: posts" class="list-group">\n    <li class="list-group-item post-item">\n        <h4 data-bind="click: expand, text: title" class="list-group-item-heading"></h4>\n        <div class="list-group-item-text">\n            Update date: <span data-bind="text: formatDate(date_updated)"></span>\n            <!-- ko if: $parent.comments() -->\n                comments: <span data-bind="text: comments"></span>\n            <!-- /ko -->\n            <div data-bind="visible: expanded" class="post-controls">\n                <!-- ko if: editable -->\n                    <a data-bind="attr: { href: editLink }" class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-edit"></span> Edit\n                    </a>\n                <!-- /ko -->\n                <!-- ko if: $parent.comments() -->\n                    <a data-bind="attr: { href: commentsLink }, css: { disabled: comments === 0 }"\n                        class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-comment"></span> Comments\n                    </a>\n                <!-- /ko -->\n                <!-- ko if: removable -->\n                    <a data-bind="click: remove"\n                        class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-edit"></span> Remove\n                    </a>\n                <!-- /ko -->\n            </div>\n        </div>\n    </li>\n</ul>\n\n<!-- ko if: posts().length === 0 -->\n    <div class="alert alert-info" role="alert">\n        This entry type has no entries with access.\n    </div>\n<!-- /ko -->\n\n<div class="bc-controls">\n    <a data-bind="click: showMore, css: { disabled: !hasMore() }" class="btn btn-default" href="#">\n        <span class="glyphicon glyphicon-list-alt"></span> Show more\n    </a>\n    <a data-bind="click: showAll, css: { disabled: !hasMore() }" class="btn btn-default" href="#">\n        <span class="glyphicon glyphicon-list-alt"></span> Show all\n    </a>\n    <a data-bind="attr: { href: \'#new/\' + type }" class="btn btn-default" href="#">\n        <span class="glyphicon glyphicon-plus"></span> Add\n    </a>\n</div>\n';exports.create=function(n){var t={type:n,all:ko.observable([]),count:ko.observable(5),step:ko.observable(5),comments:ko.observable(!1),create:ko.observable(!1),title:ko.observable(),loaded:ko.observable(!1)};t.hasMore=ko.pureComputed(function(){return t.count()<t.all().length}),t.showMore=function(){t.count(t.count()+t.step()),setTimeout(function(){window.scrollTo(0,document.body.scrollHeight)},50)},t.showAll=function(){t.count(t.all().length)},t.posts=ko.pureComputed(function(){var n=t.all();return n.slice(0,t.count())});var e={typeInfo:api.typeInfo(n),userInfo:api.userInfo(),posts:api.posts(n)};return resolveObject(e).then(function(n){t.title(n.typeInfo.menu_label),t.comments(n.typeInfo.comments);var e=!1;"admin"===n.userInfo.type&&(e=!0),n.typeInfo.grants.indexOf("create")>=0&&(e=!0),t.create(e),n.posts.sort(function(n,t){return t.date_updated-n.date_updated}),t.all(n.posts.map(function(t){return postsItem.create(t,n.typeInfo,n.userInfo)})),view.show(template,t)})};


},{"../api":2,"../resolve_object":13,"../view":16,"../vm/posts_item":21}],11:[function(require,module,exports){
var api=require("../api"),view=require("../view"),user=require("../vm/user"),resolveObject=require("../resolve_object"),template='<!-- ko with: user -->\n    <h2 data-bind="text: fullname"></h2>\n\n    <form data-bind="submit: save" autocomplete="off">\n        <div class="form-group">\n            <label for="user-fullname">Full name</label>\n            <input data-bind="value: fullname"\n                type="text" class="form-control" id="user-fullname"\n                placeholder="Full name">\n        </div>\n        <div class="form-group">\n            <label for="user-username">Username</label>\n            <input data-bind="value: username"\n                type="text" class="form-control" id="user-username"\n                placeholder="Username">\n        </div>\n        <div class="form-group">\n            <label for="user-type">Type</label>\n            <select data-bind="value: type, options: roles,\n                optionsText: \'label\', optionsValue: \'name\'"\n                class="form-control" id="user-type"></select>\n        </div>\n        <div class="form-group">\n            <label for="user-link">Link</label>\n            <input data-bind="value: link"\n                type="text" class="form-control" id="user-link"\n                placeholder="Link">\n        </div>\n        <div class="checkbox">\n            <label><input data-bind="checked: password_edit, disable: creating" type="checkbox">\n                Edit password</label>\n        </div>\n        <div data-bind="visible: password_edit" class="form-group">\n            <label for="user-password">New password</label>\n            <input data-bind="value: password"\n                type="password" class="form-control" id="user-password"\n                placeholder="Password">\n            <div class="checkbox">\n                <label><input data-bind="checked: password_text" type="checkbox">\n                    Show text</label>\n            </div>\n        </div>\n        <button type="submit" class="btn btn-default">\n            <span class="glyphicon glyphicon-ok"></span> Save\n        </button>\n        <a class="btn btn-default" href="#users">\n            <span class="glyphicon glyphicon-arrow-left"></span> Cancel\n        </a>\n    </form>\n<!-- /ko -->\n';exports.create=function(e){var n={user:ko.observable()},a={roles:api.roles()};return e&&(a.user=api.user(e)),resolveObject(a).then(function(a){if(n.user(user.create(a.roles,a.user)),view.show(template,n),e){var l=document.querySelector("#user-fullname");l.focus(),"function"==typeof l.setSelectionRange&&l.setSelectionRange(0,l.value.length)}})};


},{"../api":2,"../resolve_object":13,"../view":16,"../vm/user":22}],12:[function(require,module,exports){
var api=require("../api"),view=require("../view"),users_item=require("../vm/users_item"),template='<h2>Users</h2>\n<!-- ko if: !permission() -->\n    <div class="alert alert-warning" role="alert">\n        You do not have permissions to manage users.\n    </div>\n<!-- /ko -->\n<!-- ko if: permission() -->\n    <ul data-bind="foreach: users" class="list-group">\n        <li class="list-group-item post-item">\n            <h4 data-bind="click: expand, text: fullname" class="list-group-item-heading"></h4>\n            <div class="list-group-item-text">\n                Type: <span data-bind="text: type"></span>,\n                username: <span data-bind="text: username"></span>\n                <div data-bind="visible: expanded" class="post-controls">\n                    <a data-bind="attr: { href: \'#user/\' + $id }, css: { disabled: !editable }"\n                        class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-edit"></span> Edit\n                    </a>\n                    <a data-bind="click: remove, css: { disabled: !editable }"\n                        class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-remove"></span> Remove\n                    </a>\n                </div>\n            </div>\n        </li>\n    </ul>\n    <a class="btn btn-default" href="#user/new">\n        <span class="glyphicon glyphicon-plus"></span> Add\n    </a>\n<!-- /ko -->\n';exports.create=function(){var e={users:ko.observableArray([]),permission:ko.observable(!1)};return api.userInfo().then(function(n){return"admin"===n.type?api.users().then(function(s){e.users(s.map(function(e){var s=users_item.create(e);return s.editable="admin"===n.type||s.$id===n.$id,s})),e.permission(!0),view.show(template,e)}):void view.show(template,e)})};


},{"../api":2,"../view":16,"../vm/users_item":23}],13:[function(require,module,exports){
module.exports=function(n){var r=[],o=[];return Object.keys(n).forEach(function(t){r.push(n[t]),o.push(t)}),Promise.all(r).then(function(n){var r={};return n.forEach(function(n,t){r[o[t]]=n}),r})};


},{}],14:[function(require,module,exports){
exports.show=function(){document.getElementById("spinner").style.display="block"},exports.hide=function(){document.getElementById("spinner").style.display="none"};


},{}],15:[function(require,module,exports){
exports.clear=function(e){var r,t,o=e.querySelectorAll(".error-message");for(t=0;t<o.length;t++)r=o.item(t),r.parentNode.classList.remove("has-error"),r.parentNode.removeChild(r);for(o=e.parentNode.querySelectorAll(".alert-danger"),t=0;t<o.length;t++)r=o.item(t),r.parentNode.removeChild(r)},exports.hasError=function(e){return e.querySelectorAll(".error-message").length>0},exports.error=function(e,r){var t=document.getElementById(e),o=document.createElement("div");o.className="error-message",o.innerHTML=r,t.parentNode.appendChild(o),t.parentNode.classList.add("has-error")},exports.formError=function(e,r){var t=document.createElement("div");t.className="alert alert-danger",t.innerHTML=r,e.parentNode.insertBefore(t,e)};


},{}],16:[function(require,module,exports){
exports.show=kontainer.create("#content");


},{}],17:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("./expandable");exports.create=function(e,a,r,n){var i={};return expandable.mixin(i),assign(i,e),i.removable=!1,"admin"===a.type&&(i.removable=!0),n.grants.indexOf("update_any")>=0&&(i.removable=!0),n.grants.indexOf("update_own")>=0&&r.author===a.$id&&(i.removable=!0),i.remove=function(){confirm("Remove the comment?")&&api.removeComment(r.$id,i.$id).then(function(){message.info("The comment has been removed."),route.refresh()})["catch"](message.error)},i};


},{"../api":2,"../assign":3,"../message":5,"./expandable":18}],18:[function(require,module,exports){
exports.mixin=function(e){e.expanded=ko.observable(!1),e.expand=function(){e.expanded(e.expanded()?!1:!0)}};


},{}],19:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("../vm/expandable");exports.create=function(e,r){var a={};return assign(a,r),expandable.mixin(a),a.url=ko.pureComputed(function(){return"/"+e()+"/"+a.name}),a};


},{"../api":2,"../assign":3,"../message":5,"../vm/expandable":18}],20:[function(require,module,exports){
function isoDateToUnix(e){var t=e.match(/^(\d{4})\-(\d{2})\-(\d{2})$/);if(!t)throw new Error("Date does not match pattern: "+e);var a=new Date;return a.setUTCHours(0,0,0,0),a.setUTCFullYear(parseInt(t[1],10),parseInt(t[2],10)-1,parseInt(t[3],10)),Math.floor(a.getTime()/1e3)}function validatePost(e){""===e.title()&&validate.error("post-title","Title is not entered.");var t=e.slug();""===t?validate.error("post-slug","Slug is not entered."):t.match(/^[a-z0-9\-_]+$/)||validate.error("post-slug","Use lowercase letters, numbers, hyphen and underscore."),""===e.content()&&validate.error("post-content","Content is not entered.");var a=e.date();""===a?e.published()&&validate.error("post-date","Publish date is not entered."):a.match(/^\d{4}\-\d{2}\-\d{2}$/)||validate.error("post-date","Date must be in the YYYY-MM-DD format.");var n=e.update();""===n?validate.error("post-update","Update date is not entered."):n.match(/^\d{4}\-\d{2}\-\d{2}$/)||validate.error("post-update","Update date must be in the YYYY-MM-DD format.")}function submitPost(e,t){var a=document.getElementById("post");return validate.clear(a),validatePost(e),validate.hasError(a)?!1:void(e.$id()?updatePost(a,e,t):savePost(a,e,t))}function updatePost(e,t,a){api.updatePost(t.$id(),t.toJS()).then(function(){message.info('The entry "'+t.title()+'" has been updated.'),a?t.slug_changed(!1):route.go("entries/"+t.type())})["catch"](function(t){validate.formError(e,t),window.scroll(0,0)})}function savePost(e,t,a){api.savePost(t.toJS()).then(function(e){message.info('The entry "'+t.title()+'" has been saved.'),route.go(a?"entry/"+t.type()+"/"+e:"entries/"+t.type())})["catch"](function(t){validate.formError(e,t),window.scroll(0,0)})}var api=require("../api"),message=require("../message"),validate=require("../validate"),languages=require("../languages");exports.create=function(e,t,a,n,o){var i,s={$id:ko.observable(),authors:n,title:ko.observable("Untitled").trimmed(),slug:ko.observable("untitled").trimmed(),description:ko.observable("").trimmed(),content:ko.observable("").trimmed(),types:a,type:ko.observable(t),content_type:ko.observable("markdown"),published:ko.observable(!1),commenting:ko.observable(!0),tags:ko.observable("").trimmed(),comments:ko.observable(0),author:ko.observable(),date:ko.observable("").trimmed(),update:ko.observable("").trimmed(),submit:function(){submitPost(s,!0)},save:function(){submitPost(s,!1)},language:ko.observable(bcLanguage),languages:languages,slug_changed:ko.observable(!1),can_change_type:"admin"===e.type,can_change_author:"admin"===e.type,toJS:function(){var e,t=s.tags().trim(),a=s.date();""!==a&&(e=isoDateToUnix(a));var n=isoDateToUnix(s.update());return{author:s.author(),title:s.title(),slug:s.slug(),description:s.description(),content:s.content(),type:s.type(),date_published:e,date_updated:n,commenting:s.commenting(),published:s.published(),content_type:s.content_type(),tags:""===t?[]:t.split(/\, */),language:s.language()}}};if(a.forEach(function(e){e.name===t&&(i=e)}),!i)throw new Error("Invalid type "+t);if(o){if("undefined"!=typeof o.date_published){var r=new Date(1e3*o.date_published);s.date(r.toISOString().substring(0,10))}s.$id(o.$id),s.author(o.author),s.title(o.title),s.slug(o.slug),s.description(o.description||""),s.content(o.content),s.type(o.type),s.content_type(o.content_type),s.published(o.published),s.commenting(o.commenting),s.tags(o.tags.join(", ")),s.comments(o.comments),s.language(o.language)}else s.title.subscribe(function(e){s.slug(getSlug(e))}),s.author(e.$id),s.date((new Date).toISOString().substring(0,10));return s.can_publish=!1,"admin"===e.type&&(s.can_publish=!0),i.grants.indexOf("publish_any")>=0&&(s.can_publish=!0),i.grants.indexOf("publish_own")>=0&&s.author()===e.$id&&(s.can_publish=!0),s.can_manage_files=!1,"admin"===e.type&&(s.can_manage_files=!0),i.grants.indexOf("update_any")>=0&&i.grants.indexOf("files")>=0&&(s.can_manage_files=!0),i.grants.indexOf("update_own")>=0&&s.author()===e.$id&&i.grants.indexOf("files")>=0&&(s.can_manage_files=!0),s.update((new Date).toISOString().substring(0,10)),s.published.subscribe(function(e){e&&""===s.date()&&s.date((new Date).toISOString().substring(0,10))}),s.slug.subscribe(function(e){s.slug_changed(!0)}),s};


},{"../api":2,"../languages":4,"../message":5,"../validate":15}],21:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("./expandable");exports.create=function(e,a,n){var i={};return expandable.mixin(i),assign(i,e),i.removable=!1,"admin"===n.type&&(i.removable=!0),a.grants.indexOf("remove_any")>=0&&(i.removable=!0),a.grants.indexOf("remove_own")>=0&&n.$id===i.author&&(i.removable=!0),i.editable=!1,"admin"===n.type&&(i.editable=!0),a.grants.indexOf("update_any")>=0&&(i.editable=!0),a.grants.indexOf("update_own")>=0&&n.$id===i.author&&(i.editable=!0),i.editLink="#entry/"+a.name+"/"+i.$id,i.commentsLink="#comments/"+a.name+"/"+i.$id,i.remove=function(){confirm('Remove the post "'+i.title+'"?')&&api.removePost(i.$id).then(function(){message.info('The post "'+i.title+'" has been removed.'),route.refresh()})["catch"](message.error)},i};


},{"../api":2,"../assign":3,"../message":5,"./expandable":18}],22:[function(require,module,exports){
var message=require("../message"),api=require("../api"),validate=require("../validate");exports.create=function(e,r){var a={username:ko.observable("").trimmed(),fullname:ko.observable("").trimmed(),type:ko.observable("author"),link:ko.observable("").trimmed(),password:ko.observable("").trimmed(),password_edit:ko.observable(!0),password_text:ko.observable(!1),error:ko.observable(""),creating:!0,roles:e,save:function(e){if(validate.clear(e),a.password_edit()){var r=a.password();""===r?validate.error("user-password","Password is not set."):r.length<6&&validate.error("user-password","Password length must be at least 6.")}var s=a.username();""===s?validate.error("user-username","Username is not set."):s.match(/^[^@]+@[^@]+$/)||validate.error("user-username","Username must be an email address.");var t=a.fullname();""===t&&validate.error("user-fullname","Full name is not set.");var o=a.link();return""!==o&&(o.match(/https?:\/\//)||validate.error("user-link","Link must start with http:// or https:// prefix.")),validate.hasError(e)?!1:(a.$id?api.updateUser(a.$id,a.toJS()).then(function(){message.info('User "'+a.username()+'" has been updated.'),route.go("users")})["catch"](function(r){validate.formError(e,r)}):api.saveUser(a.toJS()).then(function(){message.info('User "'+a.username()+'" has been added.'),route.go("users")})["catch"](function(r){validate.formError(e,r)}),!1)},toJS:function(){var e={username:a.username(),fullname:a.fullname(),type:a.type(),link:a.link()};return a.password_edit()&&(e.password=a.password()),e}};return a.password_text.subscribe(function(e){e?document.getElementById("user-password").type="text":document.getElementById("user-password").type="password"}),r?(a.$id=r.$id,a.creating=!1,a.username(r.username),a.fullname(r.fullname),a.type(r.type),a.link(r.link),a.password_edit(!1)):a.fullname("Unnamed"),a};


},{"../api":2,"../message":5,"../validate":15}],23:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("./expandable");exports.create=function(e){var r={editable:!1};return expandable.mixin(r),assign(r,e),r.remove=function(){confirm("Remove the user?")&&api.removeUser(r.$id).then(function(){message.info('User "'+r.username+'" has been removed.'),route.refresh()})["catch"](message.error)},r};


},{"../api":2,"../assign":3,"../message":5,"./expandable":18}]},{},[1])
//# sourceMappingURL=admin.bundle.js.map
