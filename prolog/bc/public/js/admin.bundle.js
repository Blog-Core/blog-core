(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
function authenticated(){api.hasKey()?menu.load():route.go("login")}var api=require("./lib/api"),message=require("./lib/message"),login=require("./lib/pages/login"),posts=require("./lib/pages/posts"),post=require("./lib/pages/post"),users=require("./lib/pages/users"),user=require("./lib/pages/user"),comments=require("./lib/pages/comments");require("./lib/form_error"),window.formatDate=function(e){return new Date(1e3*e).toISOString().substring(0,10)};var menu={active:ko.observable(),types:ko.observable(),load:function(){return menu.types()?Promise.resolve(menu.types()):api.types().then(function(e){return menu.types(e),e})}};ko.applyBindings(menu,document.getElementById("menu")),route(/^entries\/([^\/]+)/,function(e){authenticated(),menu.active(e),posts.create(e)["catch"](message.error)}),route(/^entry\/([^\/]+)\/([^\/]+)/,function(e,t){authenticated(),menu.active(e),post.create(e,t)["catch"](message.error)}),route(/^new\/([^\/]+)/,function(e){authenticated(),menu.active(e),post.create(e)["catch"](message.error)}),route(/^comments\/([^\/]+)\/([^\/]+)/,function(e,t){authenticated(),menu.active(e),comments.create(e,t)["catch"](message.error)}),route(/^users/,function(){authenticated(),menu.active("users"),users.create()["catch"](message.error)}),route(/^user\/new/,function(){authenticated(),menu.active("users"),user.create()["catch"](message.error)}),route(/^user\/([^\/]+)/,function(e){authenticated(),menu.active("users"),user.create(e)["catch"](message.error)}),route(/^login/,function(){authenticated(),menu.active(null),login.create()["catch"](message.error)}),route(/^logout/,function(){sessionStorage.removeItem("api-key"),localStorage.removeItem("api-key"),window.location="/admin"}),route(/^landing/,function(){menu.active(null),menu.load().then(function(e){e.length>0&&route.go("entries/"+e[0].name)})}),route(/.*/,function(){route.go(api.hasKey()?"landing":"login")}),document.body.addEventListener("click",function(e){return e.target.href&&e.target.href.match(/#logout$/)?confirm("Do you want to log out?")?!0:(e.stopPropagation(),e.preventDefault(),!1):void 0},!1);


},{"./lib/api":2,"./lib/form_error":4,"./lib/message":6,"./lib/pages/comments":7,"./lib/pages/login":8,"./lib/pages/post":9,"./lib/pages/posts":10,"./lib/pages/user":11,"./lib/pages/users":12}],2:[function(require,module,exports){
function spinnerShow(){0===showCount&&spinner.show(),showCount+=1}function spinnerHide(){showCount-=1,0===showCount&&spinner.hide()}function fetchGet(e){return spinnerShow(),fetch(e,{headers:{Accept:"application/json","X-Key":apiKey()}})["catch"](function(e){throw spinnerHide(),e}).then(handleResponse)}function fetchDelete(e){return spinnerShow(),fetch(e,{method:"DELETE",headers:{Accept:"application/json","X-Key":apiKey()}})["catch"](function(e){throw spinnerHide(),e}).then(handleResponse)}function fetchPost(e,n,t){spinnerShow();var o={Accept:"application/json","Content-Type":"application/json"};return t||(o["X-Key"]=apiKey()),fetch(e,{method:"POST",headers:o,body:JSON.stringify(n)})["catch"](function(e){throw spinnerHide(),e}).then(handleResponse)}function fetchUpdate(e,n){return spinnerShow(),fetch(e,{method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json","X-Key":apiKey()},body:JSON.stringify(n)})["catch"](function(e){throw spinnerHide(),e}).then(handleResponse)}function fetchUploadFile(e,n){return spinnerShow(),fetch(e,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/octet-stream","X-Key":apiKey(),"X-File-Name":n.name},body:n})["catch"](function(e){throw spinnerHide(),e}).then(handleResponse)}function handleResponse(e){return spinnerHide(),e.json().then(function(e){if("success"===e.status)return e.data;throw new Error("API response is not success: "+e.message)})}var spinner=require("./spinner"),showCount=0;exports.upload=function(e,n){return fetchUploadFile("/api/upload/"+encodeURIComponent(e),n)},exports.login=function(e,n){return fetchPost("/api/auth",{username:e,password:n},!0)},exports.posts=function(e){return fetchGet("/api/entries/"+encodeURIComponent(e))},exports.post=function(e){return fetchGet("/api/entry/"+encodeURIComponent(e))},exports.entryInfo=function(e){return fetchGet("/api/entry/"+encodeURIComponent(e)+"/info")},exports.comments=function(e){return fetchGet("/api/post/"+encodeURIComponent(e)+"/comments")},exports.removeComment=function(e,n){return fetchDelete("/api/comment/"+encodeURIComponent(e)+"/"+encodeURIComponent(n))},exports.updatePost=function(e,n){return fetchUpdate("/api/entry/"+encodeURIComponent(e),n)},exports.savePost=function(e){return fetchPost("/api/entry",e)},exports.removePost=function(e){return fetchDelete("/api/entry/"+encodeURIComponent(e))},exports.files=function(e){return fetchGet("/api/files/"+encodeURIComponent(e))},exports.removeFile=function(e,n){return fetchDelete("/api/file/"+encodeURIComponent(e)+"/"+encodeURIComponent(n))},exports.users=function(){return fetchGet("/api/users")},exports.user=function(e){return fetchGet("/api/user/"+encodeURIComponent(e))},exports.userInfo=function(){return fetchGet("/api/user/info")},exports.updateUser=function(e,n){return fetchUpdate("/api/user/"+encodeURIComponent(e),n)},exports.saveUser=function(e){return fetchPost("/api/user",e)},exports.removeUser=function(e){return fetchDelete("/api/user/"+encodeURIComponent(e))},exports.types=function(){return fetchGet("/api/types")},exports.typeInfo=function(e){return fetchGet("/api/type/"+encodeURIComponent(e))},exports.roles=function(){return fetchGet("/api/roles")},exports.hasKey=function(){return!(!sessionStorage.getItem("api-key")&&!localStorage.getItem("api-key"))};var apiKey=exports.apiKey=function(){var e=sessionStorage.getItem("api-key")||localStorage.getItem("api-key");if(!e)throw new Error("API key is not set");return e};


},{"./spinner":14}],3:[function(require,module,exports){
module.exports=function(o,c){Object.keys(c).forEach(function(e){o[e]=c[e]})};


},{}],4:[function(require,module,exports){
function setErrors(e,r){var a=ko.unwrap(r());if(a.length>0){var o=e.querySelector(".ko-input-error");if(!o){e.className.match(/has\-error/)||(e.className=e.className+" has-error"),o=document.createElement("span"),o.className="help-block ko-input-error";var s=e.querySelector(".checkbox");s||(s=e.querySelector(".form-control")),s.parentNode.appendChild(o)}o.innerHTML=a.join(" ")}else{e.className=e.className.replace(/has\-error/,""),e.className=e.className.replace(/\s+/," ");var n=e.querySelector(".ko-input-error");n&&n.parentNode.removeChild(n)}}ko.bindingHandlers.errors={init:function(e,r){setErrors(e,r)},update:function(e,r,a){setErrors(e,r)}};


},{}],5:[function(require,module,exports){
module.exports=[{code:"ab",name:"Abkhaz"},{code:"aa",name:"Afar"},{code:"af",name:"Afrikaans"},{code:"ak",name:"Akan"},{code:"sq",name:"Albanian"},{code:"am",name:"Amharic"},{code:"ar",name:"Arabic"},{code:"an",name:"Aragonese"},{code:"hy",name:"Armenian"},{code:"as",name:"Assamese"},{code:"av",name:"Avaric"},{code:"ae",name:"Avestan"},{code:"ay",name:"Aymara"},{code:"az",name:"Azerbaijani"},{code:"bm",name:"Bambara"},{code:"ba",name:"Bashkir"},{code:"eu",name:"Basque"},{code:"be",name:"Belarusian"},{code:"bn",name:"Bengali"},{code:"bh",name:"Bihari"},{code:"bi",name:"Bislama"},{code:"bs",name:"Bosnian"},{code:"br",name:"Breton"},{code:"bg",name:"Bulgarian"},{code:"my",name:"Burmese"},{code:"ca",name:"Catalan; Valencian"},{code:"ch",name:"Chamorro"},{code:"ce",name:"Chechen"},{code:"ny",name:"Chichewa; Chewa; Nyanja"},{code:"zh",name:"Chinese"},{code:"cv",name:"Chuvash"},{code:"kw",name:"Cornish"},{code:"co",name:"Corsican"},{code:"cr",name:"Cree"},{code:"hr",name:"Croatian"},{code:"cs",name:"Czech"},{code:"da",name:"Danish"},{code:"dv",name:"Divehi; Dhivehi; Maldivian;"},{code:"nl",name:"Dutch"},{code:"en",name:"English"},{code:"eo",name:"Esperanto"},{code:"et",name:"Estonian"},{code:"ee",name:"Ewe"},{code:"fo",name:"Faroese"},{code:"fj",name:"Fijian"},{code:"fi",name:"Finnish"},{code:"fr",name:"French"},{code:"ff",name:"Fula; Fulah; Pulaar; Pular"},{code:"gl",name:"Galician"},{code:"ka",name:"Georgian"},{code:"de",name:"German"},{code:"el",name:"Greek, Modern"},{code:"gn",name:"Guaran√≠"},{code:"gu",name:"Gujarati"},{code:"ht",name:"Haitian; Haitian Creole"},{code:"ha",name:"Hausa"},{code:"he",name:"Hebrew (modern)"},{code:"hz",name:"Herero"},{code:"hi",name:"Hindi"},{code:"ho",name:"Hiri Motu"},{code:"hu",name:"Hungarian"},{code:"is",name:"Icelandic"},{code:"io",name:"Ido"},{code:"ig",name:"Igbo"},{code:"id",name:"Indonesian"},{code:"ia",name:"Interlingua"},{code:"ie",name:"Interlingue"},{code:"iu",name:"Inuktitut"},{code:"ik",name:"Inupiaq"},{code:"ga",name:"Irish"},{code:"it",name:"Italian"},{code:"ja",name:"Japanese"},{code:"jv",name:"Javanese"},{code:"kl",name:"Kalaallisut, Greenlandic"},{code:"kn",name:"Kannada"},{code:"kr",name:"Kanuri"},{code:"ks",name:"Kashmiri"},{code:"kk",name:"Kazakh"},{code:"km",name:"Khmer"},{code:"ki",name:"Kikuyu, Gikuyu"},{code:"rw",name:"Kinyarwanda"},{code:"ky",name:"Kirghiz, Kyrgyz"},{code:"rn",name:"Kirundi"},{code:"kv",name:"Komi"},{code:"kg",name:"Kongo"},{code:"ko",name:"Korean"},{code:"ku",name:"Kurdish"},{code:"kj",name:"Kwanyama, Kuanyama"},{code:"lo",name:"Lao"},{code:"la",name:"Latin"},{code:"lv",name:"Latvian"},{code:"li",name:"Limburgish, Limburgan, Limburger"},{code:"ln",name:"Lingala"},{code:"lt",name:"Lithuanian"},{code:"lu",name:"Luba-Katanga"},{code:"lg",name:"Luganda"},{code:"lb",name:"Luxembourgish, Letzeburgesch"},{code:"mk",name:"Macedonian"},{code:"mg",name:"Malagasy"},{code:"ms",name:"Malay"},{code:"ml",name:"Malayalam"},{code:"mt",name:"Maltese"},{code:"gv",name:"Manx"},{code:"mr",name:"Marathi (MarƒÅ·π≠hƒ´)"},{code:"mh",name:"Marshallese"},{code:"mn",name:"Mongolian"},{code:"mi",name:"MƒÅori"},{code:"na",name:"Nauru"},{code:"nv",name:"Navajo, Navaho"},{code:"ng",name:"Ndonga"},{code:"ne",name:"Nepali"},{code:"nd",name:"North Ndebele"},{code:"se",name:"Northern Sami"},{code:"no",name:"Norwegian"},{code:"nb",name:"Norwegian Bokm√•l"},{code:"nn",name:"Norwegian Nynorsk"},{code:"ii",name:"Nuosu"},{code:"oc",name:"Occitan"},{code:"oj",name:"Ojibwe, Ojibwa"},{code:"cu",name:"Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic"},{code:"or",name:"Oriya"},{code:"om",name:"Oromo"},{code:"os",name:"Ossetian, Ossetic"},{code:"pa",name:"Panjabi, Punjabi"},{code:"ps",name:"Pashto, Pushto"},{code:"fa",name:"Persian"},{code:"pl",name:"Polish"},{code:"pt",name:"Portuguese"},{code:"pi",name:"PƒÅli"},{code:"qu",name:"Quechua"},{code:"ro",name:"Romanian, Moldavian, Moldovan"},{code:"rm",name:"Romansh"},{code:"ru",name:"Russian"},{code:"sm",name:"Samoan"},{code:"sg",name:"Sango"},{code:"sa",name:"Sanskrit (Sa·πÅsk·πõta)"},{code:"sc",name:"Sardinian"},{code:"gd",name:"Scottish Gaelic; Gaelic"},{code:"sr",name:"Serbian"},{code:"sn",name:"Shona"},{code:"sd",name:"Sindhi"},{code:"si",name:"Sinhala, Sinhalese"},{code:"sk",name:"Slovak"},{code:"sl",name:"Slovene"},{code:"so",name:"Somali"},{code:"nr",name:"South Ndebele"},{code:"st",name:"Southern Sotho"},{code:"es",name:"Spanish; Castilian"},{code:"su",name:"Sundanese"},{code:"sw",name:"Swahili"},{code:"ss",name:"Swati"},{code:"sv",name:"Swedish"},{code:"tl",name:"Tagalog"},{code:"ty",name:"Tahitian"},{code:"tg",name:"Tajik"},{code:"ta",name:"Tamil"},{code:"tt",name:"Tatar"},{code:"te",name:"Telugu"},{code:"th",name:"Thai"},{code:"bo",name:"Tibetan Standard, Tibetan, Central"},{code:"ti",name:"Tigrinya"},{code:"to",name:"Tonga (Tonga Islands)"},{code:"ts",name:"Tsonga"},{code:"tn",name:"Tswana"},{code:"tr",name:"Turkish"},{code:"tk",name:"Turkmen"},{code:"tw",name:"Twi"},{code:"ug",name:"Uighur, Uyghur"},{code:"uk",name:"Ukrainian"},{code:"ur",name:"Urdu"},{code:"uz",name:"Uzbek"},{code:"ve",name:"Venda"},{code:"vi",name:"Vietnamese"},{code:"vo",name:"Volap√ºk"},{code:"wa",name:"Walloon"},{code:"cy",name:"Welsh"},{code:"fy",name:"Western Frisian"},{code:"wo",name:"Wolof"},{code:"xh",name:"Xhosa"},{code:"yi",name:"Yiddish"},{code:"yo",name:"Yoruba"},{code:"za",name:"Zhuang, Chuang"}];


},{}],6:[function(require,module,exports){
exports.info=function(e){var n=document.getElementById("messages"),t=document.createElement("div");t.className="alert alert-success message",t.innerHTML=e,n.appendChild(t),setTimeout(function(){n.removeChild(t)},2e3)},exports.error=function(e){var n=document.createElement("button");n.className="close",n.innerHTML="&times;";var t=document.createElement("span");t.innerHTML=e.toString();var a=document.getElementById("messages"),r=document.createElement("div");r.className="alert alert-danger message",r.appendChild(n),r.appendChild(t),n.addEventListener("click",function(){a.removeChild(r)},!1),a.appendChild(r),e instanceof Error&&console.error(e.stack)};


},{}],7:[function(require,module,exports){
var api=require("../api"),view=require("../view"),resolveObject=require("../resolve_object"),comments_item=require("../vm/comments_item"),template='<h2 data-bind="text: title"></h2>\n<h3>Comments</h3>\n<ul data-bind="foreach: comments" class="list-group">\n    <li class="list-group-item post-item">\n        <h4 data-bind="text: author, click: expand" class="list-group-item-heading"></h4>\n        <div class="list-group-item-text">\n            Date: <span data-bind="text: formatDate(date)"></span>\n            <div data-bind="visible: expanded" class="post-controls">\n                <div class="panel panel-default">\n                    <div data-bind="text: content" class="panel-body"></div>\n                </div>\n                <!-- ko if: removable -->\n                    <a data-bind="click: remove" class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-remove"></span> Remove\n                    </a>\n                <!-- /ko -->\n            </div>\n        </div>\n    </li>\n</ul>\n<!-- ko if: comments().length === 0 -->\n    <div class="alert alert-info" role="alert">\n        This entry has no comments.\n    </div>\n<!-- /ko -->\n';exports.create=function(e,t){var n={title:ko.observable(),comments:ko.observable([])},a={entryInfo:api.entryInfo(t),userInfo:api.userInfo(t),typeInfo:api.typeInfo(e),comments:api.comments(t)};return resolveObject(a).then(function(e){n.title(e.entryInfo.title),n.comments(e.comments.map(function(t){return comments_item.create(t,e.userInfo,e.entryInfo,e.typeInfo)})),view.show(template,n)})};


},{"../api":2,"../resolve_object":13,"../view":15,"../vm/comments_item":16}],8:[function(require,module,exports){
var api=require("../api"),view=require("../view"),message=require("../message"),template='<h2>Login</h2>\n\n<form data-bind="submit: login">\n    <div data-bind="errors: errors.username" class="form-group">\n        <label class="control-label" for="username">Username</label>\n        <input data-bind="textInput: username"\n            type="text" name="username" title="Username"\n            placeholder="Username" class="form-control" id="username">\n    </div>\n    <div data-bind="errors: errors.password" class="form-group">\n        <label class="control-label" for="password">Password</label>\n        <input data-bind="textInput: password"\n            type="password" name="password" title="Password"\n            placeholder="Password" class="form-control" id="password">\n    </div>\n    <div class="checkbox">\n        <label><input data-bind="checked: remember" type="checkbox"\n            name="remember" id="remember">\n            Remember me</label>\n    </div>\n    <button type="submit" class="btn btn-default">Login</button>\n</form>\n';exports.create=function(){var e={username:ko.observable(""),password:ko.observable(""),remember:ko.observable(!1),errors:{username:ko.observableArray([]),password:ko.observableArray([])}};return e.login=function(r){Object.keys(e.errors).forEach(function(r){e.errors[r]([])});var a=e.username(),s=e.password();""===a?e.errors.username.push("Username is not entered."):a.match(/^[^@]+@[^@]+$/)||e.errors.username.push("Username must be an email."),""===s&&e.errors.password.push("Password is not entered.");var o=r.querySelector(".has-error input, .has-error textarea, .has-error checkbox");return o?(o.focus(),!1):void api.login(a,s).then(function(r){e.remember()?(localStorage.setItem("api-key",r.key),sessionStorage.removeItem("api-key")):(sessionStorage.setItem("api-key",r.key),localStorage.removeItem("api-key")),route.go("landing")})["catch"](function(r){r.toString().match(/Invalid auth credentials/)?(e.errors.username.push("Invalid auth credentials."),e.errors.password.push("Invalid auth credentials.")):message.error(r)})},view.show(template,e),Promise.resolve()};


},{"../api":2,"../message":6,"../view":15}],9:[function(require,module,exports){
function postData(n){return api.userInfo().then(function(t){var e={types:api.types(),users:authors(t),userInfo:Promise.resolve(t)};return n?(e.post=api.post(n),e.files=api.files(n)):e.files=Promise.resolve([]),resolveObject(e)})}function authors(n){return"admin"===n.type?api.users():Promise.resolve([{$id:n.$id,fullname:n.fullname}])}var api=require("../api"),post=require("../vm/post"),view=require("../view"),resolveObject=require("../resolve_object"),template='<!-- ko with: post -->\n    <h2 data-bind="text: title"></h2>\n    <div class="btn-group" role="group" aria-label="...">\n        <button data-bind="click: save" type="button"\n            class="btn btn-default" title="Save and leave">\n            <span class="glyphicon glyphicon-chevron-left"></span>\n        </button>\n        <button data-bind="click: submit" type="button"\n            class="btn btn-default" title="Save and continue">\n            <span class="glyphicon glyphicon-floppy-disk"></span>\n        </button>\n        <button data-bind="click: $root.toggleInfo, css: { active: $root.info() }"\n            type="button" class="btn btn-default" title="Show/hide info">\n            <span class="glyphicon glyphicon-info-sign"></span>\n        </button>\n        <button data-bind="click: $root.toggleFiles, css: { active: $root.files() }"\n            type="button" class="btn btn-default">\n            <span class="glyphicon glyphicon-paperclip"></span>\n        </button>\n        <!-- ko if: preview -->\n            <button data-bind="click: saveAndPreview" class="btn btn-default">\n                <span class="glyphicon glyphicon-eye-open"></span>\n            </button>\n        <!-- /ko -->\n    </div>\n    <hr>\n    <form data-bind="submit: submit" autocomplete="off" id="post">\n        <!-- ko if: $root.info() -->\n            <div class="bc-info">\n                <div class="row">\n                    <div class="col-md-4">\n                        <div data-bind="errors: errors.title" class="form-group">\n                            <label for="post-title">Title</label>\n                            <input data-bind="textInput: title"\n                                type="text" class="form-control input-sm" id="post-title"\n                                placeholder="Title">\n                            <p class="help-block">Slug is autogenerated from the title.</p>\n                        </div>\n                    </div>\n                    <div class="col-md-4">\n                        <div data-bind="errors: errors.slug" class="form-group">\n                            <label for="post-slug">Slug</label>\n                            <input data-bind="textInput: slug"\n                                type="text" class="form-control input-sm" id="post-slug"\n                                placeholder="Slug">\n                            <p class="help-block">Modifying the slug after publishing will break links.</p>\n                        </div>\n                    </div>\n                    <div class="col-md-4">\n                        <div class="form-group">\n                            <label for="post-tags">Tags</label>\n                            <input data-bind="textInput: tags"\n                                type="text" class="form-control input-sm" id="post-tags"\n                                placeholder="Tags">\n                            <p class="help-block">Separate multiple tags with commas.</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-2">\n                        <div class="form-group">\n                            <label for="post-type">Type</label>\n                            <select data-bind="value: type, options: types,\n                                optionsText: \'label\', optionsValue: \'name\',\n                                attr: { disabled: !can_change_type }"\n                                class="form-control input-sm" id="post-type"></select>\n                        </div>\n                    </div>\n                    <div class="col-md-2">\n                        <div class="form-group">\n                            <label for="post-content-type">Content type</label>\n                            <select data-bind="value: content_type"\n                                class="form-control input-sm" id="post-content-type">\n                                <option value="markdown">Markdown</option>\n                                <option value="raw">Raw</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class="col-md-2">\n                        <div class="form-group">\n                            <label for="post-author">Author</label>\n                            <select data-bind="value: author, options: authors,\n                                optionsText: \'fullname\', optionsValue: \'$id\',\n                                attr: { disabled: !can_change_author }"\n                                class="form-control input-sm" id="post-author"></select>\n                        </div>\n                    </div>\n                    <div class="col-md-2">\n                        <div class="form-group">\n                            <label for="post-language">Language</label>\n                            <select data-bind="value: language, options: languages,\n                                optionsText: \'name\', optionsValue: \'code\'"\n                                class="form-control input-sm" id="post-language"></select>\n                        </div>\n                    </div>\n                    <div class="col-md-2">\n                        <div data-bind="errors: errors.date" class="form-group">\n                            <label for="post-date">Publish date</label>\n                            <input data-bind="textInput: date"\n                                type="text" class="form-control input-sm" id="post-date"\n                                placeholder="YYYY-MM-DD">\n                        </div>\n                    </div>\n                    <div class="col-md-2">\n                        <div data-bind="errors: errors.update" class="form-group">\n                            <label for="post-update">Update date</label>\n                            <input data-bind="textInput: update"\n                                type="text" class="form-control input-sm" id="post-update"\n                                placeholder="YYYY-MM-DD">\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="col-md-8">\n                        <div class="form-group">\n                            <label for="post-description">Description</label>\n                            <textarea\n                                data-bind="textInput: description"\n                                class="form-control input-sm" rows="2" id="post-description" placeholder="Description"></textarea>\n                            <p class="help-block">Description is used by search engines to show the page snippet.\n                                It must not contain HTML.</p>\n                        </div>\n                    </div>\n                    <div class="col-md-2">\n                        <div class="checkbox">\n                            <label><input data-bind="checked: published,\n                                attr: { disabled: !can_publish }"\n                                type="checkbox" id="post-published"> Published</label>\n                        </div>\n                    </div>\n                    <div class="col-md-2">\n                        <div class="checkbox">\n                            <label><input data-bind="checked: commenting"\n                                type="checkbox"> Commenting</label>\n                        </div>\n                    </div>\n                </div>\n                <hr>\n            </div>\n        <!-- /ko -->\n        <!-- ko if: $root.files() -->\n            <!-- ko if: can_manage_files -->\n                <!-- ko if: !$id() -->\n                    <div class="alert alert-warning" role="alert">\n                        To upload files you need to save the entry first.\n                    </div>\n                <!-- /ko -->\n                <!-- ko if: $id() -->\n                    <!-- ko if: slug_changed() -->\n                        <div class="alert alert-warning" role="alert">\n                            You have changed the entry slug. File management is\n                            re-enabled after saving the entry.\n                        </div>\n                    <!-- /ko -->\n                    <!-- ko if: !slug_changed() -->\n                        <!-- ko if: files().length === 0 -->\n                            <div class="alert alert-info" role="alert">\n                                This entry has no files.\n                            </div>\n                        <!-- /ko -->\n                        <div data-bind="foreach: files" class="list-group">\n                            <li class="list-group-item post-item">\n                                <div data-bind="click: expand" class="list-group-item-heading">\n                                    <span class="glyphicon glyphicon-file"></span> <!-- ko text: name --><!-- /ko -->\n                                </div>\n                                <!-- ko if: expanded() -->\n                                    URL: <!-- ko text: url --><!-- /ko -->\n                                    <div class="post-controls">\n                                        <a data-bind="click: $parent.removeFile"\n                                            class="btn btn-default btn-sm" href="#">\n                                            <span class="glyphicon glyphicon-edit"></span> Remove</a>\n                                        <a data-bind="attr: { href: url }" target="_blank"\n                                            class="btn btn-default btn-sm" href="#"> View (in new tab)</a>\n                                    </div>\n                                <!-- /ko -->\n                            </li>\n                        </div>\n                        <div class="row bc-controls">\n                            <div class="col-sm-6">\n                                <div id="entry-file-wrap">\n                                    <input type="file" id="entry-file" class="form-control" placeholder="Your file">\n                                </div>\n                            </div>\n                            <div class="col-sm-6">\n                                <a data-bind="click: uploadFile" class="btn btn-default" href="#">\n                                    <span class="glyphicon glyphicon-upload"></span> Upload\n                                </a>\n                            </div>\n                        </div>\n                    <!-- /ko -->\n                <!-- /ko -->\n            <!-- /ko -->\n            <!-- ko if: !can_manage_files -->\n                <div class="alert alert-warning" role="alert">\n                    To upload files you need file management permissions.\n                </div>\n            <!-- /ko -->\n            <hr>\n        <!-- /ko -->\n        <div id="editor-wrap">\n            <div id="editor"></div>\n        </div>\n        <!--div data-bind="errors: errors.content" class="form-group">\n            <label for="post-content">Content</label>\n            <textarea\n                data-bind="textInput: content"\n                class="form-control content" rows="20" id="post-content"\n                placeholder="Content"></textarea>\n        </div-->\n    </form>\n<!-- /ko -->\n';exports.create=function(n,t){var e={post:ko.observable(),info:ko.observable(!1),files:ko.observable(!1)};return e.toggleInfo=function(){e.info(!e.info())},e.toggleFiles=function(){e.files(!e.files())},postData(t).then(function(o){function a(n){83==n.keyCode&&(navigator.platform.match("Mac")?n.metaKey:n.ctrlKey)&&(n.preventDefault(),e.post().submit())}e.post(post.create(o.userInfo,n,o.types,o.users,o.files,o.post)),document.addEventListener("keydown",a,!1),e.dispose=function(){console.log("Dispose"),document.removeEventListener("keydown",a,!1)},view.show(template,e);var s=ace.edit("editor");if(s.container.style.lineHeight=1.5,s.setOptions({maxLines:1/0,showLineNumbers:!1,wrap:!0,showPrintMargin:!1,showFoldWidgets:!1,showGutter:!1,displayIndentGuides:!1,fontSize:14,fontFamily:"monospace",useSoftTabs:!0,tabSize:2}),s.setTheme("ace/theme/github"),s.getSession().setMode("ace/mode/markdown"),t)s.setValue(o.post.content),s.focus(),s.gotoLine(1);else{e.info(!0);var i=document.querySelector("#post-title");i.focus(),"function"==typeof i.setSelectionRange&&i.setSelectionRange(0,i.value.length)}e.post().editor=s,e.post().parent=e})};


},{"../api":2,"../resolve_object":13,"../view":15,"../vm/post":19}],10:[function(require,module,exports){
var api=require("../api"),view=require("../view"),postsItem=require("../vm/posts_item"),resolveObject=require("../resolve_object"),template='<h2 data-bind="text: title"></h2>\n\n<ul data-bind="foreach: posts" class="list-group">\n    <li class="list-group-item post-item">\n        <h4 data-bind="click: expand, text: title" class="list-group-item-heading"></h4>\n        <div class="list-group-item-text">\n            Update date: <span data-bind="text: formatDate(date_updated)"></span>\n            <!-- ko if: $parent.comments() -->\n                comments: <span data-bind="text: comments"></span>\n            <!-- /ko -->\n            <div data-bind="visible: expanded" class="post-controls bc-margin-bottom-sm">\n                <!-- ko if: editable -->\n                    <a data-bind="attr: { href: editLink }" class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-edit"></span> Edit\n                    </a>\n                <!-- /ko -->\n                <!-- ko if: $parent.comments() -->\n                    <a data-bind="attr: { href: commentsLink }, css: { disabled: comments === 0 }"\n                        class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-comment"></span> Comments\n                    </a>\n                <!-- /ko -->\n                <!-- ko if: removable -->\n                    <a data-bind="click: remove"\n                        class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-edit"></span> Remove\n                    </a>\n                <!-- /ko -->\n            </div>\n            <!-- ko if: !published -->\n                <div>\n                    <span class="label label-danger">Not published</span>\n                </div>\n            <!-- /ko -->\n        </div>\n    </li>\n</ul>\n\n<!-- ko if: posts().length === 0 -->\n    <div class="alert alert-info" role="alert">\n        This entry type has no entries with access.\n    </div>\n<!-- /ko -->\n\n<div class="bc-controls">\n    <a data-bind="click: showMore, css: { disabled: !hasMore() }" class="btn btn-default" href="#">\n        <span class="glyphicon glyphicon-list-alt"></span> Show more\n    </a>\n    <a data-bind="click: showAll, css: { disabled: !hasMore() }" class="btn btn-default" href="#">\n        <span class="glyphicon glyphicon-list-alt"></span> Show all\n    </a>\n    <a data-bind="attr: { href: \'#new/\' + type }" class="btn btn-default" href="#">\n        <span class="glyphicon glyphicon-plus"></span> Add\n    </a>\n</div>\n';exports.create=function(n){var e={type:n,all:ko.observable([]),count:ko.observable(5),step:ko.observable(5),comments:ko.observable(!1),create:ko.observable(!1),title:ko.observable(),loaded:ko.observable(!1)};e.hasMore=ko.pureComputed(function(){return e.count()<e.all().length}),e.showMore=function(){e.count(e.count()+e.step()),setTimeout(function(){window.scrollTo(0,document.body.scrollHeight)},50)},e.showAll=function(){e.count(e.all().length)},e.posts=ko.pureComputed(function(){var n=e.all();return n.slice(0,e.count())});var t={typeInfo:api.typeInfo(n),userInfo:api.userInfo(),posts:api.posts(n)};return resolveObject(t).then(function(n){e.title(n.typeInfo.menu_label),e.comments(n.typeInfo.comments);var t=!1;"admin"===n.userInfo.type&&(t=!0),n.typeInfo.grants.indexOf("create")>=0&&(t=!0),e.create(t),n.posts.sort(function(n,e){return e.date_updated-n.date_updated}),e.all(n.posts.map(function(e){return postsItem.create(e,n.typeInfo,n.userInfo)})),view.show(template,e)})};


},{"../api":2,"../resolve_object":13,"../view":15,"../vm/posts_item":20}],11:[function(require,module,exports){
var api=require("../api"),view=require("../view"),user=require("../vm/user"),resolveObject=require("../resolve_object"),template='<!-- ko with: user -->\n    <h2 data-bind="text: fullname"></h2>\n\n    <form data-bind="submit: save" autocomplete="off">\n        <div data-bind="errors: errors.fullname" class="form-group">\n            <label for="user-fullname">Full name</label>\n            <input data-bind="value: fullname"\n                type="text" class="form-control" id="user-fullname"\n                placeholder="Full name">\n        </div>\n        <div data-bind="errors: errors.username" class="form-group">\n            <label for="user-username">Username</label>\n            <input data-bind="value: username"\n                type="text" class="form-control" id="user-username"\n                placeholder="Username">\n        </div>\n        <div data-bind="errors: errors.type" class="form-group">\n            <label for="user-type">Type</label>\n            <select data-bind="value: type, options: roles,\n                optionsText: \'label\', optionsValue: \'name\'"\n                class="form-control" id="user-type"></select>\n        </div>\n        <div data-bind="errors: errors.link" class="form-group">\n            <label for="user-link">Link</label>\n            <input data-bind="value: link"\n                type="text" class="form-control" id="user-link"\n                placeholder="Link">\n        </div>\n        <div class="checkbox">\n            <label><input data-bind="checked: password_edit, disable: creating" type="checkbox">\n                Edit password</label>\n        </div>\n        <div data-bind="visible: password_edit, errors: errors.password" class="form-group">\n            <label for="user-password">New password</label>\n            <input data-bind="value: password"\n                type="password" class="form-control" id="user-password"\n                placeholder="Password">\n            <div class="checkbox">\n                <label><input data-bind="checked: password_text" type="checkbox">\n                    Show text</label>\n            </div>\n        </div>\n        <button type="submit" class="btn btn-default">\n            <span class="glyphicon glyphicon-ok"></span> Save\n        </button>\n        <a class="btn btn-default" href="#users">\n            <span class="glyphicon glyphicon-arrow-left"></span> Cancel\n        </a>\n    </form>\n<!-- /ko -->\n';exports.create=function(e){var n={user:ko.observable()},r={roles:api.roles()};return e&&(r.user=api.user(e)),resolveObject(r).then(function(r){if(n.user(user.create(r.roles,r.user)),view.show(template,n),e){var a=document.querySelector("#user-fullname");a.focus(),"function"==typeof a.setSelectionRange&&a.setSelectionRange(0,a.value.length)}})};


},{"../api":2,"../resolve_object":13,"../view":15,"../vm/user":21}],12:[function(require,module,exports){
var api=require("../api"),view=require("../view"),users_item=require("../vm/users_item"),template='<h2>Users</h2>\n<!-- ko if: !permission() -->\n    <div class="alert alert-warning" role="alert">\n        You do not have permissions to manage users.\n    </div>\n<!-- /ko -->\n<!-- ko if: permission() -->\n    <ul data-bind="foreach: users" class="list-group">\n        <li class="list-group-item post-item">\n            <h4 data-bind="click: expand, text: fullname" class="list-group-item-heading"></h4>\n            <div class="list-group-item-text">\n                Type: <span data-bind="text: type"></span>,\n                username: <span data-bind="text: username"></span>\n                <div data-bind="visible: expanded" class="post-controls">\n                    <a data-bind="attr: { href: \'#user/\' + $id }, css: { disabled: !editable }"\n                        class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-edit"></span> Edit\n                    </a>\n                    <a data-bind="click: remove, css: { disabled: !editable }"\n                        class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-remove"></span> Remove\n                    </a>\n                </div>\n            </div>\n        </li>\n    </ul>\n    <a class="btn btn-default" href="#user/new">\n        <span class="glyphicon glyphicon-plus"></span> Add\n    </a>\n<!-- /ko -->\n';exports.create=function(){var e={users:ko.observableArray([]),permission:ko.observable(!1)};return api.userInfo().then(function(n){return"admin"===n.type?api.users().then(function(s){e.users(s.map(function(e){var s=users_item.create(e);return s.editable="admin"===n.type||s.$id===n.$id,s})),e.permission(!0),view.show(template,e)}):void view.show(template,e)})};


},{"../api":2,"../view":15,"../vm/users_item":22}],13:[function(require,module,exports){
module.exports=function(n){var r=[],o=[];return Object.keys(n).forEach(function(t){r.push(n[t]),o.push(t)}),Promise.all(r).then(function(n){var r={};return n.forEach(function(n,t){r[o[t]]=n}),r})};


},{}],14:[function(require,module,exports){
exports.show=function(){document.getElementById("spinner").style.display="block"},exports.hide=function(){document.getElementById("spinner").style.display="none"};


},{}],15:[function(require,module,exports){
exports.show=kontainer.create("#content");


},{}],16:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("./expandable");exports.create=function(e,a,r,n){var i={};return expandable.mixin(i),assign(i,e),i.removable=!1,"admin"===a.type&&(i.removable=!0),n.grants.indexOf("update_any")>=0&&(i.removable=!0),n.grants.indexOf("update_own")>=0&&r.author===a.$id&&(i.removable=!0),i.remove=function(){confirm("Remove the comment?")&&api.removeComment(r.$id,i.$id).then(function(){message.info("The comment has been removed."),route.refresh()})["catch"](message.error)},i};


},{"../api":2,"../assign":3,"../message":6,"./expandable":17}],17:[function(require,module,exports){
exports.mixin=function(e){e.expanded=ko.observable(!1),e.expand=function(){e.expanded()?e.expanded(!1):e.expanded(!0)}};


},{}],18:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("../vm/expandable");exports.create=function(e,r){var a={};return assign(a,r),expandable.mixin(a),a.url=ko.pureComputed(function(){return"/"+e+"/"+a.name}),a};


},{"../api":2,"../assign":3,"../message":6,"../vm/expandable":17}],19:[function(require,module,exports){
function isoDateToUnix(e){var t=e.match(/^(\d{4})\-(\d{2})\-(\d{2})$/);if(!t)throw new Error("Date does not match pattern: "+e);var n=new Date;return n.setUTCHours(0,0,0,0),n.setUTCFullYear(parseInt(t[1],10),parseInt(t[2],10)-1,parseInt(t[3],10)),Math.floor(n.getTime()/1e3)}function validatePost(e){""===e.title()&&e.errors.title.push("Title is not entered.");var t=e.slug();""===t?e.errors.slug.push("Slug is not entered."):t.match(/^[a-z0-9\-_]+$/)||e.errors.slug.push("Use lowercase letters, numbers, hyphen and underscore."),""===e.content()&&e.errors.content.push("Content is not entered.");var n=e.date();""===n?e.published()&&e.errors.date.push("Publish date is not entered."):n.match(/^\d{4}\-\d{2}\-\d{2}$/)||e.errors.date.push("Date must be in the YYYY-MM-DD format.");var r=e.update();""===r?e.errors.update.push("Update date is not entered."):r.match(/^\d{4}\-\d{2}\-\d{2}$/)||e.errors.update.push("Update date must be in the YYYY-MM-DD format.")}function submitPost(e,t){var n=document.getElementById("post");Object.keys(e.errors).forEach(function(t){e.errors[t]([])}),validatePost(e);var r=n.querySelector(".has-error input, .has-error textarea, .has-error checkbox");return r?(n.querySelector(".bc-info .has-error input, .bc-info .has-error textarea, .bc-info .has-error checkbox")&&e.parent.info(!0),r.focus(),!1):void(e.$id()?updatePost(n,e,t):savePost(n,e,t))}function updatePost(e,t,n){api.updatePost(t.$id(),t.toJS()).then(function(){message.info('The entry "'+t.title()+'" has been updated.'),"edit"===n||"preview"===n?(t.slug_changed(!1),"preview"===n&&openPreview(t)):route.go("entries/"+t.type())})["catch"](saveError.bind(null,t))}function savePost(e,t,n){api.savePost(t.toJS()).then(function(e){message.info('The entry "'+t.title()+'" has been saved.'),"edit"===n||"preview"===n?(route.go("entry/"+t.type()+"/"+e),"preview"===n&&openPreview(t)):route.go("entries/"+t.type())})["catch"](saveError.bind(null,t))}function saveError(e,t){t.toString().match(/entry with the same slug exists/)?(e.errors.slug.push("Entry with the same slug exists."),e.parent.info(!0),document.querySelector(".has-error input").focus()):message.error(t)}function openPreview(e){var t=e.preview.replace(/<slug>/g,e.slug()),n=window.open(t,"entry-"+e.slug());n&&n.focus()}var api=require("../api"),message=require("../message"),languages=require("../languages"),files_item=require("./files_item");exports.create=function(e,t,n,r,a,s){var o,i={$id:ko.observable(),authors:r,title:ko.observable("Untitled"),slug:ko.observable("untitled"),description:ko.observable(""),content:ko.observable(""),types:n,type:ko.observable(t),content_type:ko.observable("markdown"),published:ko.observable(!1),commenting:ko.observable(!0),tags:ko.observable(""),comments:ko.observable(0),author:ko.observable(),date:ko.observable(""),update:ko.observable(""),submit:function(){submitPost(i,"edit")},save:function(){submitPost(i,"leave")},saveAndPreview:function(){submitPost(i,"preview")},language:ko.observable(bcLanguage),languages:languages,slug_changed:ko.observable(!1),can_change_type:"admin"===e.type,can_change_author:"admin"===e.type,files:ko.observableArray(a),errors:{title:ko.observableArray([]),slug:ko.observableArray([]),content:ko.observableArray([]),date:ko.observableArray([]),update:ko.observableArray([])},toJS:function(){var e,t=i.tags().trim(),n=i.date();""!==n&&(e=isoDateToUnix(n));var r=isoDateToUnix(i.update());return{author:i.author(),title:i.title(),slug:i.slug(),description:i.description(),content:i.editor.getValue(),type:i.type(),date_published:e,date_updated:r,commenting:i.commenting(),published:i.published(),content_type:i.content_type(),tags:""===t?[]:t.split(/\, */),language:i.language()}}};if(n.forEach(function(e){e.name===t&&(o=e)}),!o)throw new Error("Invalid type "+t);if(i.preview=o.preview,s){if("undefined"!=typeof s.date_published){var u=new Date(1e3*s.date_published);i.date(u.toISOString().substring(0,10))}i.$id(s.$id),i.author(s.author),i.title(s.title),i.slug(s.slug),i.description(s.description||""),i.content(s.content),i.type(s.type),i.content_type(s.content_type),i.published(s.published),i.commenting(s.commenting),i.tags(s.tags.join(", ")),i.comments(s.comments),i.language(s.language),a.sort(function(e,t){return e.name===t.name?0:e.name<t.name?-1:1}),i.files(a.map(function(e){return files_item.create(s.slug,e)}))}else i.title.subscribe(function(e){i.slug(getSlug(e))}),i.author(e.$id),i.date((new Date).toISOString().substring(0,10));return i.can_publish=!1,"admin"===e.type&&(i.can_publish=!0),o.grants.indexOf("publish_any")>=0&&(i.can_publish=!0),o.grants.indexOf("publish_own")>=0&&i.author()===e.$id&&(i.can_publish=!0),i.can_manage_files=!1,"admin"===e.type&&(i.can_manage_files=!0),o.grants.indexOf("update_any")>=0&&o.grants.indexOf("files")>=0&&(i.can_manage_files=!0),o.grants.indexOf("update_own")>=0&&i.author()===e.$id&&o.grants.indexOf("files")>=0&&(i.can_manage_files=!0),i.update((new Date).toISOString().substring(0,10)),i.published.subscribe(function(e){e&&""===i.date()&&i.date((new Date).toISOString().substring(0,10))}),i.slug.subscribe(function(e){i.slug_changed(!0)}),i.uploadFile=function(){var e=document.getElementById("entry-file").files[0];e&&i.$id()&&api.upload(i.$id(),e).then(function(t){message.info('File "'+e.name+'" has been uploaded.'),i.files.push(files_item.create(i.slug(),{name:e.name}));var n=document.getElementById("entry-file-wrap");n.innerHTML="",n.innerHTML='<input type="file" id="entry-file" class="form-control" placeholder="Your file">'})["catch"](message.error)},i.removeFile=function(e){confirm('Remove the file "'+e.name+'"?')&&api.removeFile(i.$id(),e.name).then(function(){message.info('File "'+e.name+'" has been removed.'),i.files.remove(e)})["catch"](message.error)},i};


},{"../api":2,"../languages":5,"../message":6,"./files_item":18}],20:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("./expandable");exports.create=function(e,a,n){var i={};return expandable.mixin(i),assign(i,e),i.removable=!1,"admin"===n.type&&(i.removable=!0),a.grants.indexOf("remove_any")>=0&&(i.removable=!0),a.grants.indexOf("remove_own")>=0&&n.$id===i.author&&(i.removable=!0),i.editable=!1,"admin"===n.type&&(i.editable=!0),a.grants.indexOf("update_any")>=0&&(i.editable=!0),a.grants.indexOf("update_own")>=0&&n.$id===i.author&&(i.editable=!0),i.editLink="#entry/"+a.name+"/"+i.$id,i.commentsLink="#comments/"+a.name+"/"+i.$id,i.remove=function(){confirm('Remove the post "'+i.title+'"?')&&api.removePost(i.$id).then(function(){message.info('The post "'+i.title+'" has been removed.'),route.refresh()})["catch"](message.error)},i};


},{"../api":2,"../assign":3,"../message":6,"./expandable":17}],21:[function(require,module,exports){
function handleSaveError(e,r){var s=r.toString();s.match(/Cannot remove the last admin/)?e.errors.type.push("Cannot remove the last admin."):s.match(/username exists/)?e.errors.username.push("The username exists."):message.error(r)}var api=require("../api"),message=require("../message");exports.create=function(e,r){var s={username:ko.observable(""),fullname:ko.observable(""),type:ko.observable("author"),link:ko.observable(""),password:ko.observable(""),password_edit:ko.observable(!0),password_text:ko.observable(!1),error:ko.observable(""),creating:!0,roles:e,errors:{username:ko.observableArray([]),fullname:ko.observableArray([]),password:ko.observableArray([]),link:ko.observableArray([]),type:ko.observableArray([])},save:function(e){if(Object.keys(s.errors).forEach(function(e){s.errors[e]([])}),s.password_edit()){var r=s.password();""===r?s.errors.password.push("Password is not set."):r.length<6&&s.errors.password.push("Password length must be at least 6.")}var a=s.username();""===a?s.errors.username.push("Username is not set."):a.match(/^[^@]+@[^@]+$/)||s.errors.username.push("Username must be an email address.");var o=s.fullname();""===o&&s.errors.fullname.push("Full name is not set.");var t=s.link();""!==t&&(t.match(/https?:\/\//)||s.errors.link.push("Link must start with http:// or https:// prefix."));var n=e.querySelector(".has-error input, .has-error textarea, .has-error checkbox, .has-error select");return n?(n.focus(),!1):(s.$id?api.updateUser(s.$id,s.toJS()).then(function(){message.info('User "'+s.username()+'" has been updated.'),route.go("users")})["catch"](handleSaveError.bind(null,s)):api.saveUser(s.toJS()).then(function(){message.info('User "'+s.username()+'" has been added.'),route.go("users")})["catch"](handleSaveError.bind(null,s)),!1)},toJS:function(){var e={username:s.username(),fullname:s.fullname(),type:s.type(),link:s.link()};return s.password_edit()&&(e.password=s.password()),e}};return s.password_text.subscribe(function(e){e?document.getElementById("user-password").type="text":document.getElementById("user-password").type="password"}),r?(s.$id=r.$id,s.creating=!1,s.username(r.username),s.fullname(r.fullname),s.type(r.type),s.link(r.link),s.password_edit(!1)):s.fullname("Unnamed"),s};


},{"../api":2,"../message":6}],22:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("./expandable");exports.create=function(e){var r={editable:!1};return expandable.mixin(r),assign(r,e),r.remove=function(){confirm("Remove the user?")&&api.removeUser(r.$id).then(function(){message.info('User "'+r.username+'" has been removed.'),route.refresh()})["catch"](message.error)},r};


},{"../api":2,"../assign":3,"../message":6,"./expandable":17}]},{},[1])
//# sourceMappingURL=admin.bundle.js.map
