(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
function loadMenu(){return model.menu.types()?Promise.resolve(model.menu.types()):api.types().then(function(e){return model.menu.types(e),e})}function authenticated(){api.hasKey()?loadMenu():route.go("login")}var hex=require("./hex"),api=require("./api"),message=require("./message");require("./components/menu"),require("./components/login"),require("./components/posts"),require("./components/post"),require("./components/users"),require("./components/files"),require("./components/user"),require("./components/comments"),window.formatDate=function(e){return new Date(1e3*e).toISOString().substring(0,10)},ko.subscribable.fn.trimmed=function(){return ko.computed({read:function(){return this().trim()},write:function(e){this(e.trim()),this.valueHasMutated()},owner:this})};var model={component:ko.observable(),params:ko.observable({}),menu:{active:ko.observable(),types:ko.observable()}};model.show=function(e,o,t){model.menu.active(t),model.params(o),model.component(e)},ko.applyBindings(model),route(/^entries\/([^\/]+)/,function(e){authenticated(),model.show("posts",{type:e},e)}),route(/^entry\/([^\/]+)\/([^\/]+)/,function(e,o){authenticated(),model.show("post",{id:o},e)}),route(/^new\/([^\/]+)/,function(e){authenticated(),model.show("post",{type:e},e)}),route(/^comments\/([^\/]+)\/([^\/]+)/,function(e,o){authenticated(),model.show("comments",{id:o},e)}),route(/^users/,function(){authenticated(),model.show("users",{},"users")}),route(/^user\/new/,function(){authenticated(),model.show("user",{},"users")}),route(/^user\/([^\/]+)/,function(e){authenticated(),model.show("user",{id:e},"users")}),route(/^login/,function(){authenticated(),model.show("login",{})}),route(/^logout/,function(){sessionStorage.removeItem("api-key"),localStorage.removeItem("api-key"),window.location="/admin"}),route(/^landing/,function(){model.show(null,{},"landing"),loadMenu().then(function(e){e.length>0&&route.go("entries/"+e[0].name)})}),route(/.*/,function(){route.go(api.hasKey()?"landing":"login")}),document.body.addEventListener("click",function(e){return e.target.href&&e.target.href.match(/#logout$/)?confirm("Do you want to log out?")?!0:(e.stopPropagation(),e.preventDefault(),!1):void 0},!1);
},{"./api":2,"./components/comments":4,"./components/files":5,"./components/login":6,"./components/menu":7,"./components/post":8,"./components/posts":9,"./components/user":10,"./components/users":11,"./hex":12,"./message":14}],2:[function(require,module,exports){
function jsendAuth(e){return e.headers=e.headers||{},e.headers["X-Key"]=apiKey(),jsend(e)}function jsend(e){return xhr(e).then(function(e){var r=JSON.parse(e);if("success"===r.status)return r.data;throw new Error(r.message)})}var xhr=require("./xhr");exports.login=function(e,r){var n={method:"POST",url:"/api/auth",data:JSON.stringify({username:e,password:r}),headers:{"Content-Type":"application/json"}};return xhr(n).then(function(e){return JSON.parse(e)})},exports.posts=function(e){var r={url:"/api/entries/"+e,headers:{"X-Key":apiKey()}};return xhr(r).then(function(e){return JSON.parse(e).data})},exports.post=function(e){var r={url:"/api/entry/"+encodeURIComponent(e),headers:{"X-Key":apiKey()}};return xhr(r).then(function(e){return JSON.parse(e).data})},exports.entryInfo=function(e){var r={url:"/api/entry/"+encodeURIComponent(e)+"/info",headers:{"X-Key":apiKey()}};return xhr(r).then(function(e){return JSON.parse(e).data})},exports.comments=function(e){var r={url:"/api/post/"+encodeURIComponent(e)+"/comments",headers:{"X-Key":apiKey()}};return xhr(r).then(function(e){return JSON.parse(e).data})},exports.removeComment=function(e){return jsendAuth({method:"DELETE",url:"/api/comment/"+encodeURIComponent(e)})},exports.updatePost=function(e,r){var n={method:"PUT",url:"/api/entry/"+e,data:JSON.stringify(r),headers:{"X-Key":apiKey(),"Content-Type":"application/json"}};return xhr(n).then(function(e){return JSON.parse(e)})},exports.savePost=function(e){var r={method:"POST",url:"/api/entry",data:JSON.stringify(e),headers:{"X-Key":apiKey(),"Content-Type":"application/json"}};return xhr(r).then(function(e){return JSON.parse(e)})},exports.removePost=function(e){var r={method:"DELETE",url:"/api/entry/"+encodeURIComponent(e),headers:{"X-Key":apiKey()}};return xhr(r).then(function(e){return JSON.parse(e)})},exports.files=function(e){return jsendAuth({url:"/api/files/"+encodeURIComponent(e)})},exports.removeFile=function(e,r){return jsendAuth({method:"DELETE",url:"/api/file/"+encodeURIComponent(e)+"/"+encodeURIComponent(r)})},exports.users=function(){var e={url:"/api/users",headers:{"X-Key":apiKey()}};return xhr(e).then(function(e){return JSON.parse(e).data})},exports.user=function(e){var r={url:"/api/user/"+encodeURIComponent(e),headers:{"X-Key":apiKey()}};return xhr(r).then(function(e){return JSON.parse(e).data})},exports.userInfo=function(){return jsendAuth({url:"/api/user/info"})},exports.updateUser=function(e,r){var n={method:"PUT",data:JSON.stringify(r),url:"/api/user/"+encodeURIComponent(e),headers:{"X-Key":apiKey(),"Content-Type":"application/json"}};return xhr(n).then(function(e){return JSON.parse(e)})},exports.saveUser=function(e){var r={method:"POST",data:JSON.stringify(e),url:"/api/user",headers:{"X-Key":apiKey(),"Content-Type":"application/json"}};return xhr(r).then(function(e){return JSON.parse(e)})},exports.removeUser=function(e){var r={method:"DELETE",url:"/api/user/"+encodeURIComponent(e),headers:{"X-Key":apiKey()}};return xhr(r).then(function(e){return JSON.parse(e)})},exports.types=function(){return jsendAuth({url:"/api/types"})},exports.roles=function(){return jsendAuth({url:"/api/roles"})},exports.hasKey=function(){return!(!sessionStorage.getItem("api-key")&&!localStorage.getItem("api-key"))};var apiKey=exports.apiKey=function(){var e=sessionStorage.getItem("api-key")||localStorage.getItem("api-key");if(!e)throw new Error("API key is not set");return e};
},{"./xhr":24}],3:[function(require,module,exports){
module.exports=function(o,c){Object.keys(c).forEach(function(e){o[e]=c[e]})};
},{}],4:[function(require,module,exports){
function page(e){var t={title:ko.observable(),comments:ko.observable([])},a=[api.entryInfo(e.id),api.comments(e.id)];return Promise.all(a).then(function(e){var a=e[0],n=e[1];t.title(a.title),t.comments(n.map(function(e){return comments_item.create(e)}))})["catch"](message.error),t}var api=require("../api"),message=require("../message"),comments_item=require("../vm/comments_item");ko.components.register("comments",{viewModel:{createViewModel:page},template:'<h2 data-bind="text: title"></h2>\n<h3>Comments</h3>\n<ul data-bind="foreach: comments" class="list-group">\n    <li class="list-group-item post-item">\n        <h4 data-bind="text: author, click: expand" class="list-group-item-heading"></h4>\n        <div class="list-group-item-text">\n            Date: <span data-bind="text: formatDate(date)"></span>\n            <div data-bind="visible: expanded" class="post-controls">\n                <div class="panel panel-default">\n                    <div data-bind="text: message" class="panel-body"></div>\n                </div>\n                <a data-bind="click: remove" class="btn btn-default btn-sm" href="#">\n                    <span class="glyphicon glyphicon-remove"></span> Remove\n                </a>\n            </div>\n        </div>\n    </li>\n</ul>\n'});
},{"../api":2,"../message":14,"../vm/comments_item":17}],5:[function(require,module,exports){
function page(e){var n=(e.directory,{entry_id:e.id,files:ko.observableArray([]),progress:ko.observable(0)});return n.upload=function(){var e=document.getElementById("entry-file").files[0];if(e){n.file=e;var t=new XMLHttpRequest;t.upload.addEventListener("progress",n.progress,!1),t.addEventListener("load",n.complete,!1),t.addEventListener("error",n.failed,!1),t.addEventListener("abort",n.aborted,!1),t.open("POST","/api/upload/"+encodeURIComponent(n.entry_id())),t.setRequestHeader("X-Key",api.apiKey()),t.setRequestHeader("X-File-Name",e.name),t.setRequestHeader("Content-Type","application/octet-stream"),t.send(e)}},n.progress=function(e){e.lengthComputable&&n.progress(Math.round(100*e.loaded/e.total))},n.complete=function(e){var t=JSON.parse(e.target.responseText);if("success"===t.status){message.info('File "'+n.file.name+'" has been uploaded.'),n.files.push(files_item.create(n.entry_id(),{name:n.file.name}));var i=document.getElementById("entry-file-wrap");i.innerHTML="",i.innerHTML='<input type="file" id="entry-file" class="form-control" placeholder="Your file">'}else message.error(t.message)},n.upload.failed=function(){},n.aborted=function(){},n.remove=function(e){confirm('Remove the file "'+e.name+'"?')&&api.removeFile(n.entry_id(),e.name).then(function(){message.info('File "'+e.name+'" has been removed.'),n.files.remove(e)})["catch"](message.error)},n.entry_id()&&api.files(n.entry_id()).then(function(e){e.sort(function(e,n){return e.name===n.name?0:e.name<n.name?-1:1}),n.files(e.map(function(e){return files_item.create(n.entry_id(),e)}))})["catch"](message.error),n}var api=require("../api"),message=require("../message"),files_item=require("../vm/files_item");ko.components.register("files",{viewModel:{createViewModel:page},template:'<h3>Entry files</h3>\n<!-- ko if: !entry_id() -->\n    <div class="alert alert-warning" role="alert">\n        To upload files you need to save the entry first.\n    </div>\n<!-- /ko -->\n<!-- ko if: entry_id() -->\n    <!-- ko if: files().length === 0 -->\n        <div class="alert alert-info" role="alert">\n            This entry has no files.\n        </div>\n    <!-- /ko -->\n    <div data-bind="foreach: files" class="list-group">\n        <li class="list-group-item post-item">\n            <div data-bind="click: expand" class="list-group-item-heading">\n                <span class="glyphicon glyphicon-file"></span> <!-- ko text: name --><!-- /ko -->\n            </div>\n            <!-- ko if: expanded() -->\n                URL: <!-- ko text: url --><!-- /ko -->\n                <div class="post-controls">\n                    <a data-bind="click: $parent.remove"\n                        class="btn btn-default btn-sm" href="#">\n                        <span class="glyphicon glyphicon-edit"></span> Remove</a>\n                    <a data-bind="attr: { href: url }" target="_blank"\n                        class="btn btn-default btn-sm" href="#"> View (in new tab)</a>\n                </div>\n            <!-- /ko -->\n        </li>\n    </div>\n    <div class="row bc-controls">\n        <div class="col-sm-6">\n            <div id="entry-file-wrap">\n                <input type="file" id="entry-file" class="form-control" placeholder="Your file">\n            </div>\n        </div>\n        <div class="col-sm-6">\n            <a data-bind="click: upload" class="btn btn-default" href="#">\n                <span class="glyphicon glyphicon-upload"></span> Upload\n            </a>\n        </div>\n    </div>\n<!-- /ko -->\n'});
},{"../api":2,"../message":14,"../vm/files_item":19}],6:[function(require,module,exports){
function page(){var e={username:ko.observable("").trimmed(),password:ko.observable("").trimmed(),remember:ko.observable(!1)};return e.login=function(a){validate.clear(a);var r=e.username(),s=e.password();return""===r?validate.error("username","Username is not entered."):r.match(/^[^@]+@[^@]+$/)||validate.error("username","Username must be an email."),""===s&&validate.error("password","Password is not entered."),validate.hasError(a)?!1:void api.login(r,s).then(function(r){"success"===r.status?(e.remember()?(localStorage.setItem("api-key",r.data.key),sessionStorage.removeItem("api-key")):(sessionStorage.setItem("api-key",r.data.key),localStorage.removeItem("api-key")),route.go("landing")):validate.formError(a,r.message)})["catch"](message.error)},e}var api=require("../api"),message=require("../message"),validate=require("../validate");ko.components.register("login",{viewModel:{createViewModel:page},template:'<h2>Login</h2>\n\n<form data-bind="submit: login">\n    <div class="form-group">\n        <label class="control-label" for="username">Username</label>\n        <input data-bind="textInput: username"\n            type="text" name="username" title="Username"\n            placeholder="Username" class="form-control" id="username">\n    </div>\n    <div class="form-group">\n        <label class="control-label" for="password">Password</label>\n        <input data-bind="textInput: password"\n            type="password" name="password" title="Password"\n            placeholder="Password" class="form-control" id="password">\n    </div>\n    <div class="checkbox">\n        <label><input data-bind="checked: remember" type="checkbox"\n            name="remember" id="remember">\n            Remember me</label>\n    </div>\n    <button type="submit" class="btn btn-default">Login</button>\n</form>\n'});
},{"../api":2,"../message":14,"../validate":16}],7:[function(require,module,exports){
function menu(e){var t={active:e.active,types:e.types};return t}ko.components.register("menu",{viewModel:{createViewModel:menu},template:'<!-- ko if: active() -->\n    <div class="btn-group" id="menu">\n        <!-- ko foreach: types -->\n            <a data-bind="css: { active: $parent.active() === name },\n                attr: { href: \'#entries/\' + name }, text: menu_label"\n                class="btn btn-default" href="#"></a>\n        <!-- /ko -->\n        <a data-bind="css: { active: active() === \'users\' }" class="btn btn-default" href="#users">Users</a>\n        <a class="btn btn-default" href="#logout">Logout</a>\n    </div>\n<!-- /ko -->\n'});
},{}],8:[function(require,module,exports){
function page(e){var t,n={post:ko.observable()};return e.id?api.userInfo().then(function(a){if("admin"!==a.type){var o=[{$id:a.$id,fullname:a.fullname}];t=[Promise.resolve(o),api.post(e.id),api.types()]}else t=[api.users(),api.post(e.id),api.types()];return Promise.all(t).then(function(e){var t=e[0],o=e[1],l=e[2];n.post(post.create(a,l,t,o));var s=document.getElementById("post-content");s.style.height=s.scrollHeight+10+"px"})})["catch"](message.error):api.userInfo().then(function(a){if("admin"!==a.type){var o=[{$id:a.$id,fullname:a.fullname}];t=[Promise.resolve(o),api.types()]}else t=[api.users(),api.types()];return Promise.all(t).then(function(t){var o=t[0],l=t[1];n.post(post.create(a,l,o)),n.post().type(e.type);var s=document.querySelector("#post-title");s.focus(),"function"==typeof s.setSelectionRange&&s.setSelectionRange(0,s.value.length)})})["catch"](message.error),n}var api=require("../api"),post=require("../vm/post"),message=require("../message");ko.components.register("post",{viewModel:{createViewModel:page},template:'<!-- ko with: post -->\n    <h2 data-bind="text: title"></h2>\n    <form data-bind="submit: submit" autocomplete="off" id="post">\n        <div class="form-group">\n            <label for="post-title">Title</label>\n            <input data-bind="value: title"\n                type="text" class="form-control" id="post-title"\n                placeholder="Title">\n        </div>\n        <div class="form-group">\n            <label for="post-slug">Slug</label>\n            <input data-bind="value: slug"\n                type="text" class="form-control" id="post-slug"\n                placeholder="Slug">\n            <p class="help-block">Slug should not be modified after publishing as it will break links.</p>\n        </div>\n        <div class="form-group">\n            <label for="post-description">Description</label>\n            <textarea\n                data-bind="value: description"\n                class="form-control" rows="3" id="post-description" placeholder="Description"></textarea>\n            <p class="help-block">Description is used by search engines to show the page snippet.</p>\n        </div>\n        <div class="form-group">\n            <label for="post-content">Content</label>\n            <textarea\n                data-bind="value: content"\n                class="form-control content" rows="20" id="post-content"\n                placeholder="Content"></textarea>\n        </div>\n        <div class="form-group">\n            <label for="post-type">Type</label>\n            <select data-bind="value: type, options: types,\n                optionsText: \'label\', optionsValue: \'name\'"\n                class="form-control" id="post-type"></select>\n        </div>\n        <div class="form-group">\n            <label for="post-content-type">Content type</label>\n            <select data-bind="value: content_type" class="form-control" id="post-content-type">\n                <option value="markdown">Markdown</option>\n                <option value="raw">Raw</option>\n            </select>\n        </div>\n        <div class="form-group">\n            <label for="post-author">Author</label>\n            <select data-bind="value: author, options: authors,\n                optionsText: \'fullname\', optionsValue: \'$id\',\n                attr: { disabled: authors.length === 1 }"\n                class="form-control" id="post-author"></select>\n        </div>\n        <div class="form-group">\n            <label for="post-tags">Tags</label>\n            <input data-bind="value: tags"\n                type="text" class="form-control" id="post-tags"\n                placeholder="Tags">\n            <p class="help-block">Separate multiple tags with commas.</p>\n        </div>\n        <div class="checkbox">\n            <label><input data-bind="checked: published"\n                type="checkbox" id="post-published"> Published</label>\n        </div>\n        <div class="form-group">\n            <label for="post-date">Publish date</label>\n            <input data-bind="value: date"\n                type="text" class="form-control" id="post-date"\n                placeholder="YYYY-MM-DD">\n        </div>\n        <div class="form-group">\n            <label for="post-update">Update date</label>\n            <input data-bind="value: update"\n                type="text" class="form-control" id="post-update"\n                placeholder="YYYY-MM-DD">\n        </div>\n            <div class="checkbox">\n                <label><input data-bind="checked: commenting" type="checkbox"> Commenting</label>\n            </div>\n        <div class="form-group">\n            <label for="post-language">Language</label>\n            <select data-bind="value: language, options: languages,\n                optionsText: \'name\', optionsValue: \'code\'"\n                class="form-control" id="post-language"></select>\n        </div>\n        <!-- ko component: { name: \'files\', params: { id: $id } } --><!-- /ko -->\n        <button data-bind="click: save" class="btn btn-default">\n            <span class="glyphicon glyphicon-ok"></span> Save/leave\n        </button>\n        <button type="submit" class="btn btn-default">\n            <span class="glyphicon glyphicon-ok"></span> Save/continue\n        </button>\n        <a data-bind="attr: { href: \'#\' + type() + \'s\' }" class="btn btn-default" href="#">\n            <span class="glyphicon glyphicon-arrow-left"></span> Posts\n        </a>\n    </form>\n<!-- /ko -->\n'});
},{"../api":2,"../message":14,"../vm/post":20}],9:[function(require,module,exports){
function page(t){var n=t.type,e={type:n,all:ko.observable([]),count:ko.observable(5),step:ko.observable(5)};e.hasMore=ko.pureComputed(function(){return e.count()<e.all().length}),e.showMore=function(){e.count(e.count()+e.step()),setTimeout(function(){window.scrollTo(0,document.body.scrollHeight)},50)},e.showAll=function(){e.count(e.all().length)},e.posts=ko.pureComputed(function(){var t=e.all();return t.slice(0,e.count())});var a=[api.userInfo(),api.posts(n)];return Promise.all(a).then(function(t){var n=t[0],a=t[1];a.sort(function(t,n){return n.date_updated-t.date_updated}),e.all(a.map(function(t){var e=posts_item.create(t);return e.editable="admin"===n.type||n.$id===e.author,e}))})["catch"](message.error),e}var api=require("../api"),message=require("../message"),posts_item=require("../vm/posts_item");ko.components.register("posts",{viewModel:{createViewModel:page},template:'<h2>Posts</h2>\n\n<ul data-bind="foreach: posts" class="list-group">\n    <li class="list-group-item post-item">\n        <h4 data-bind="click: expand, text: title" class="list-group-item-heading"></h4>\n        <div class="list-group-item-text">\n            Update date: <span data-bind="text: formatDate(date_updated)"></span>,\n            comments: <span data-bind="text: comments"></span>\n            <div data-bind="visible: expanded" class="post-controls">\n                <a data-bind="attr: { href: \'#entry/\' + type + \'/\' + $id }, css: { disabled: !editable }"\n                    class="btn btn-default btn-sm" href="#">\n                    <span class="glyphicon glyphicon-edit"></span> Edit\n                </a>\n                <a data-bind="attr: { href: \'#comments/\' + type + \'/\' + $id }, visible: type === \'post\', css: { disabled: comments === 0 || !editable }"\n                    class="btn btn-default btn-sm" href="#">\n                    <span class="glyphicon glyphicon-comment"></span> Comments\n                </a>\n                <a data-bind="click: remove, css: { disabled: !editable }"\n                    class="btn btn-default btn-sm" href="#">\n                    <span class="glyphicon glyphicon-edit"></span> Remove\n                </a>\n            </div>\n        </div>\n    </li>\n</ul>\n\n<div class="bc-controls">\n    <a data-bind="click: showMore, css: { disabled: !hasMore() }" class="btn btn-default" href="#">\n        <span class="glyphicon glyphicon-list-alt"></span> Show more\n    </a>\n    <a data-bind="click: showAll, css: { disabled: !hasMore() }" class="btn btn-default" href="#">\n        <span class="glyphicon glyphicon-list-alt"></span> Show all\n    </a>\n    <a data-bind="attr: { href: \'#new/\' + type }" class="btn btn-default" href="#">\n        <span class="glyphicon glyphicon-plus"></span> Add\n    </a>\n</div>\n'});
},{"../api":2,"../message":14,"../vm/posts_item":21}],10:[function(require,module,exports){
function page(e){var a={user:ko.observable()};if(e.id){var n=[api.roles(),api.user(e.id)];Promise.all(n).then(function(e){var n=e[0],s=e[1];a.user(user.create(n,s))})["catch"](message.error)}else{var n=[api.roles()];Promise.all(n).then(function(e){var n=e[0];a.user(user.create(n));var s=document.querySelector("#user-fullname");s.focus(),"function"==typeof s.setSelectionRange&&s.setSelectionRange(0,s.value.length)})["catch"](message.error)}return a}var api=require("../api"),user=require("../vm/user"),message=require("../message");ko.components.register("user",{viewModel:{createViewModel:page},template:'<!-- ko with: user -->\n    <h2 data-bind="text: fullname"></h2>\n\n    <form data-bind="submit: save" autocomplete="off">\n        <div class="form-group">\n            <label for="user-fullname">Full name</label>\n            <input data-bind="value: fullname"\n                type="text" class="form-control" id="user-fullname"\n                placeholder="Full name">\n        </div>\n        <div class="form-group">\n            <label for="user-username">Username</label>\n            <input data-bind="value: username"\n                type="text" class="form-control" id="user-username"\n                placeholder="Username">\n        </div>\n        <div class="form-group">\n            <label for="user-type">Type</label>\n            <select data-bind="value: type, options: roles,\n                optionsText: \'label\', optionsValue: \'name\'"\n                class="form-control" id="user-type"></select>\n        </div>\n        <div class="form-group">\n            <label for="user-link">Link</label>\n            <input data-bind="value: link"\n                type="text" class="form-control" id="user-link"\n                placeholder="Link">\n        </div>\n        <div class="checkbox">\n            <label><input data-bind="checked: password_edit, disable: creating" type="checkbox">\n                Edit password</label>\n        </div>\n        <div data-bind="visible: password_edit" class="form-group">\n            <label for="user-password">New password</label>\n            <input data-bind="value: password"\n                type="password" class="form-control" id="user-password"\n                placeholder="Password">\n            <div class="checkbox">\n                <label><input data-bind="checked: password_text" type="checkbox">\n                    Show text</label>\n            </div>\n        </div>\n        <button type="submit" class="btn btn-default">\n            <span class="glyphicon glyphicon-ok"></span> Save\n        </button>\n        <a class="btn btn-default" href="#users">\n            <span class="glyphicon glyphicon-arrow-left"></span> Cancel\n        </a>\n    </form>\n<!-- /ko -->\n'});
},{"../api":2,"../message":14,"../vm/user":22}],11:[function(require,module,exports){
function page(){var e={users:ko.observableArray([]),permission:ko.observable(!1),loaded:ko.observable(!1)};return api.userInfo().then(function(n){return"admin"===n.type?api.users().then(function(s){e.users(s.map(function(e){var s=users_item.create(e);return s.editable="admin"===n.type||s.$id===n.$id,s})),e.permission(!0),e.loaded(!0)}):void e.loaded(!0)})["catch"](message.error),e}var api=require("../api"),message=require("../message"),users_item=require("../vm/users_item");ko.components.register("users",{viewModel:{createViewModel:page},template:'<!-- ko if: loaded() -->\n    <h2>Users</h2>\n    <!-- ko if: !permission() -->\n        <div class="alert alert-warning" role="alert">\n            You do not have permissions to manage users.\n        </div>\n    <!-- /ko -->\n    <!-- ko if: permission() -->\n        <ul data-bind="foreach: users" class="list-group">\n            <li class="list-group-item post-item">\n                <h4 data-bind="click: expand, text: fullname" class="list-group-item-heading"></h4>\n                <div class="list-group-item-text">\n                    Type: <span data-bind="text: type"></span>,\n                    username: <span data-bind="text: username"></span>\n                    <div data-bind="visible: expanded" class="post-controls">\n                        <a data-bind="attr: { href: \'#user/\' + $id }, css: { disabled: !editable }"\n                            class="btn btn-default btn-sm" href="#">\n                            <span class="glyphicon glyphicon-edit"></span> Edit\n                        </a>\n                        <a data-bind="click: remove, css: { disabled: !editable }"\n                            class="btn btn-default btn-sm" href="#">\n                            <span class="glyphicon glyphicon-remove"></span> Remove\n                        </a>\n                    </div>\n                </div>\n            </li>\n        </ul>\n        <a class="btn btn-default" href="#user/new">\n            <span class="glyphicon glyphicon-plus"></span> Add\n        </a>\n    <!-- /ko -->\n<!-- /ko -->\n'});
},{"../api":2,"../message":14,"../vm/users_item":23}],12:[function(require,module,exports){
exports.hex=function(t){for(var r="",n=encodeURIComponent(t),o=0;o<n.length;){var e=n.charAt(o);"%"===e?(o+=1,r+=n.charAt(o),o+=1,r+=n.charAt(o)):r+=n.charCodeAt(o).toString(16),o+=1}return r.toLowerCase()},exports.string=function(t){"string"!=typeof t&&(t=t.toString());for(var r="";t;)r+="%"+t.substring(0,2),t=t.substring(2);return decodeURIComponent(r)};
},{}],13:[function(require,module,exports){
module.exports=[{code:"ab",name:"Abkhaz"},{code:"aa",name:"Afar"},{code:"af",name:"Afrikaans"},{code:"ak",name:"Akan"},{code:"sq",name:"Albanian"},{code:"am",name:"Amharic"},{code:"ar",name:"Arabic"},{code:"an",name:"Aragonese"},{code:"hy",name:"Armenian"},{code:"as",name:"Assamese"},{code:"av",name:"Avaric"},{code:"ae",name:"Avestan"},{code:"ay",name:"Aymara"},{code:"az",name:"Azerbaijani"},{code:"bm",name:"Bambara"},{code:"ba",name:"Bashkir"},{code:"eu",name:"Basque"},{code:"be",name:"Belarusian"},{code:"bn",name:"Bengali"},{code:"bh",name:"Bihari"},{code:"bi",name:"Bislama"},{code:"bs",name:"Bosnian"},{code:"br",name:"Breton"},{code:"bg",name:"Bulgarian"},{code:"my",name:"Burmese"},{code:"ca",name:"Catalan; Valencian"},{code:"ch",name:"Chamorro"},{code:"ce",name:"Chechen"},{code:"ny",name:"Chichewa; Chewa; Nyanja"},{code:"zh",name:"Chinese"},{code:"cv",name:"Chuvash"},{code:"kw",name:"Cornish"},{code:"co",name:"Corsican"},{code:"cr",name:"Cree"},{code:"hr",name:"Croatian"},{code:"cs",name:"Czech"},{code:"da",name:"Danish"},{code:"dv",name:"Divehi; Dhivehi; Maldivian;"},{code:"nl",name:"Dutch"},{code:"en",name:"English"},{code:"eo",name:"Esperanto"},{code:"et",name:"Estonian"},{code:"ee",name:"Ewe"},{code:"fo",name:"Faroese"},{code:"fj",name:"Fijian"},{code:"fi",name:"Finnish"},{code:"fr",name:"French"},{code:"ff",name:"Fula; Fulah; Pulaar; Pular"},{code:"gl",name:"Galician"},{code:"ka",name:"Georgian"},{code:"de",name:"German"},{code:"el",name:"Greek, Modern"},{code:"gn",name:"Guaraní"},{code:"gu",name:"Gujarati"},{code:"ht",name:"Haitian; Haitian Creole"},{code:"ha",name:"Hausa"},{code:"he",name:"Hebrew (modern)"},{code:"hz",name:"Herero"},{code:"hi",name:"Hindi"},{code:"ho",name:"Hiri Motu"},{code:"hu",name:"Hungarian"},{code:"is",name:"Icelandic"},{code:"io",name:"Ido"},{code:"ig",name:"Igbo"},{code:"id",name:"Indonesian"},{code:"ia",name:"Interlingua"},{code:"ie",name:"Interlingue"},{code:"iu",name:"Inuktitut"},{code:"ik",name:"Inupiaq"},{code:"ga",name:"Irish"},{code:"it",name:"Italian"},{code:"ja",name:"Japanese"},{code:"jv",name:"Javanese"},{code:"kl",name:"Kalaallisut, Greenlandic"},{code:"kn",name:"Kannada"},{code:"kr",name:"Kanuri"},{code:"ks",name:"Kashmiri"},{code:"kk",name:"Kazakh"},{code:"km",name:"Khmer"},{code:"ki",name:"Kikuyu, Gikuyu"},{code:"rw",name:"Kinyarwanda"},{code:"ky",name:"Kirghiz, Kyrgyz"},{code:"rn",name:"Kirundi"},{code:"kv",name:"Komi"},{code:"kg",name:"Kongo"},{code:"ko",name:"Korean"},{code:"ku",name:"Kurdish"},{code:"kj",name:"Kwanyama, Kuanyama"},{code:"lo",name:"Lao"},{code:"la",name:"Latin"},{code:"lv",name:"Latvian"},{code:"li",name:"Limburgish, Limburgan, Limburger"},{code:"ln",name:"Lingala"},{code:"lt",name:"Lithuanian"},{code:"lu",name:"Luba-Katanga"},{code:"lg",name:"Luganda"},{code:"lb",name:"Luxembourgish, Letzeburgesch"},{code:"mk",name:"Macedonian"},{code:"mg",name:"Malagasy"},{code:"ms",name:"Malay"},{code:"ml",name:"Malayalam"},{code:"mt",name:"Maltese"},{code:"gv",name:"Manx"},{code:"mr",name:"Marathi (Marāṭhī)"},{code:"mh",name:"Marshallese"},{code:"mn",name:"Mongolian"},{code:"mi",name:"Māori"},{code:"na",name:"Nauru"},{code:"nv",name:"Navajo, Navaho"},{code:"ng",name:"Ndonga"},{code:"ne",name:"Nepali"},{code:"nd",name:"North Ndebele"},{code:"se",name:"Northern Sami"},{code:"no",name:"Norwegian"},{code:"nb",name:"Norwegian Bokmål"},{code:"nn",name:"Norwegian Nynorsk"},{code:"ii",name:"Nuosu"},{code:"oc",name:"Occitan"},{code:"oj",name:"Ojibwe, Ojibwa"},{code:"cu",name:"Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic"},{code:"or",name:"Oriya"},{code:"om",name:"Oromo"},{code:"os",name:"Ossetian, Ossetic"},{code:"pa",name:"Panjabi, Punjabi"},{code:"ps",name:"Pashto, Pushto"},{code:"fa",name:"Persian"},{code:"pl",name:"Polish"},{code:"pt",name:"Portuguese"},{code:"pi",name:"Pāli"},{code:"qu",name:"Quechua"},{code:"ro",name:"Romanian, Moldavian, Moldovan"},{code:"rm",name:"Romansh"},{code:"ru",name:"Russian"},{code:"sm",name:"Samoan"},{code:"sg",name:"Sango"},{code:"sa",name:"Sanskrit (Saṁskṛta)"},{code:"sc",name:"Sardinian"},{code:"gd",name:"Scottish Gaelic; Gaelic"},{code:"sr",name:"Serbian"},{code:"sn",name:"Shona"},{code:"sd",name:"Sindhi"},{code:"si",name:"Sinhala, Sinhalese"},{code:"sk",name:"Slovak"},{code:"sl",name:"Slovene"},{code:"so",name:"Somali"},{code:"nr",name:"South Ndebele"},{code:"st",name:"Southern Sotho"},{code:"es",name:"Spanish; Castilian"},{code:"su",name:"Sundanese"},{code:"sw",name:"Swahili"},{code:"ss",name:"Swati"},{code:"sv",name:"Swedish"},{code:"tl",name:"Tagalog"},{code:"ty",name:"Tahitian"},{code:"tg",name:"Tajik"},{code:"ta",name:"Tamil"},{code:"tt",name:"Tatar"},{code:"te",name:"Telugu"},{code:"th",name:"Thai"},{code:"bo",name:"Tibetan Standard, Tibetan, Central"},{code:"ti",name:"Tigrinya"},{code:"to",name:"Tonga (Tonga Islands)"},{code:"ts",name:"Tsonga"},{code:"tn",name:"Tswana"},{code:"tr",name:"Turkish"},{code:"tk",name:"Turkmen"},{code:"tw",name:"Twi"},{code:"ug",name:"Uighur, Uyghur"},{code:"uk",name:"Ukrainian"},{code:"ur",name:"Urdu"},{code:"uz",name:"Uzbek"},{code:"ve",name:"Venda"},{code:"vi",name:"Vietnamese"},{code:"vo",name:"Volapük"},{code:"wa",name:"Walloon"},{code:"cy",name:"Welsh"},{code:"fy",name:"Western Frisian"},{code:"wo",name:"Wolof"},{code:"xh",name:"Xhosa"},{code:"yi",name:"Yiddish"},{code:"yo",name:"Yoruba"},{code:"za",name:"Zhuang, Chuang"}];
},{}],14:[function(require,module,exports){
exports.info=function(e){var n=document.getElementById("messages"),t=document.createElement("div");t.className="alert alert-success message",t.innerHTML=e,n.appendChild(t),setTimeout(function(){n.removeChild(t)},2e3)},exports.error=function(e){var n=document.createElement("button");n.className="close",n.innerHTML="&times;";var t=document.createElement("span");t.innerHTML=e.toString();var a=document.getElementById("messages"),r=document.createElement("div");r.className="alert alert-danger message",r.appendChild(n),r.appendChild(t),n.addEventListener("click",function(){a.removeChild(r)},!1),a.appendChild(r),e instanceof Error&&console.error(e.stack)};
},{}],15:[function(require,module,exports){
exports.show=function(){document.getElementById("spinner").style.display="block"},exports.hide=function(){document.getElementById("spinner").style.display="none"};
},{}],16:[function(require,module,exports){
exports.clear=function(e){var r,t,o=e.querySelectorAll(".error-message");for(t=0;t<o.length;t++)r=o.item(t),r.parentNode.classList.remove("has-error"),r.parentNode.removeChild(r);for(o=e.parentNode.querySelectorAll(".alert-danger"),t=0;t<o.length;t++)r=o.item(t),r.parentNode.removeChild(r)},exports.hasError=function(e){return e.querySelectorAll(".error-message").length>0},exports.error=function(e,r){var t=document.getElementById(e),o=document.createElement("div");o.className="error-message",o.innerHTML=r,t.parentNode.appendChild(o),t.parentNode.classList.add("has-error")},exports.formError=function(e,r){var t=document.createElement("div");t.className="alert alert-danger",t.innerHTML=r,e.parentNode.insertBefore(t,e)};
},{}],17:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("./expandable");exports.create=function(e){var r={};return expandable.mixin(r),assign(r,e),r.remove=function(){confirm("Remove the comment?")&&api.removeComment(r.$id).then(function(){route.refresh()})["catch"](message.error)},r};
},{"../api":2,"../assign":3,"../message":14,"./expandable":18}],18:[function(require,module,exports){
exports.mixin=function(e){e.expanded=ko.observable(!1),e.expand=function(){e.expanded(e.expanded()?!1:!0)}};
},{}],19:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("../vm/expandable");exports.create=function(e,a){var r={};return assign(r,a),expandable.mixin(r),r.url="/"+e+"/"+r.name,r};
},{"../api":2,"../assign":3,"../message":14,"../vm/expandable":18}],20:[function(require,module,exports){
function isoDateToUnix(e){var t=e.match(/^(\d{4})\-(\d{2})\-(\d{2})$/);if(!t)throw new Error("Date does not match pattern: "+e);var a=new Date;return a.setUTCHours(0,0,0,0),a.setUTCFullYear(parseInt(t[1],10),parseInt(t[2],10)-1,parseInt(t[3],10)),Math.floor(a.getTime()/1e3)}function validatePost(e){""===e.title()&&validate.error("post-title","Title is not entered.");var t=e.slug();""===t?validate.error("post-slug","Slug is not entered."):t.match(/^[a-z0-9\-_]+$/)||validate.error("post-slug","Use lowercase letters, numbers, hyphen and underscore."),""===e.content()&&validate.error("post-content","Content is not entered.");var a=e.date();""===a?e.published()&&validate.error("post-date","Publish date is not entered."):a.match(/^\d{4}\-\d{2}\-\d{2}$/)||validate.error("post-date","Date must be in the YYYY-MM-DD format.");var o=e.update();""===o?validate.error("post-update","Update date is not entered."):o.match(/^\d{4}\-\d{2}\-\d{2}$/)||validate.error("post-update","Update date must be in the YYYY-MM-DD format.")}function submitPost(e,t){var a=document.getElementById("post");return validate.clear(a),validatePost(e),validate.hasError(a)?!1:void(e.$id()?updatePost(a,e,t):savePost(a,e,t))}function updatePost(e,t,a){api.updatePost(t.$id(),t.toJS()).then(function(o){"success"===o.status?(message.info('The post "'+t.title()+'" has been updated.'),a||route.go("entries/"+t.type())):(validate.formError(e,o.message),window.scroll(0,0))},message.error)}function savePost(e,t,a){api.savePost(t.toJS()).then(function(o){"success"===o.status?(message.info('Post "'+t.title()+'" has been saved.'),route.go(a?"entry/"+t.type()+"/"+o.data:"entries/"+t.type())):(validate.formError(e,o.message),window.scroll(0,0))},message.error)}var api=require("../api"),message=require("../message"),validate=require("../validate"),languages=require("../languages");exports.create=function(e,t,a,o){var s={$id:ko.observable(),authors:a,title:ko.observable("Untitled").trimmed(),slug:ko.observable("untitled").trimmed(),description:ko.observable("").trimmed(),content:ko.observable("").trimmed(),types:t,type:ko.observable(),content_type:ko.observable("markdown"),published:ko.observable(!1),commenting:ko.observable(!0),tags:ko.observable("").trimmed(),comments:ko.observable(0),author:ko.observable(),date:ko.observable("").trimmed(),update:ko.observable("").trimmed(),submit:function(){submitPost(s,!0)},save:function(){submitPost(s,!1)},language:ko.observable(bcLanguage),languages:languages,toJS:function(){var e,t=s.tags().trim(),a=s.date();""!==a&&(e=isoDateToUnix(a));var o=isoDateToUnix(s.update());return{author:s.author(),title:s.title(),slug:s.slug(),description:s.description(),content:s.content(),type:s.type(),date_published:e,date_updated:o,commenting:s.commenting(),published:s.published(),content_type:s.content_type(),tags:""===t?[]:t.split(/\, */),language:s.language()}}};if(s.type(t[0].name),o){if("undefined"!=typeof o.date_published){var r=new Date(1e3*o.date_published);s.date(r.toISOString().substring(0,10))}s.$id(o.$id),s.author(o.author),s.title(o.title),s.slug(o.slug),s.description(o.description||""),s.content(o.content),s.type(o.type),s.content_type(o.content_type),s.published(o.published),s.commenting(o.commenting),s.tags(o.tags.join(", ")),s.comments(o.comments),s.language(o.language)}else s.title.subscribe(function(e){s.slug(getSlug(e))}),s.author(e.$id),s.date((new Date).toISOString().substring(0,10));return s.update((new Date).toISOString().substring(0,10)),s.published.subscribe(function(e){e&&""===s.date()&&s.date((new Date).toISOString().substring(0,10))}),s};
},{"../api":2,"../languages":13,"../message":14,"../validate":16}],21:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("./expandable");exports.create=function(e){var s={editable:!1};return expandable.mixin(s),assign(s,e),s.remove=function(){confirm("Remove the post?")&&api.removePost(s.$id).then(function(e){"success"===e.status?(message.info('The post "'+s.title+'" has been removed.'),route.refresh()):message.error(e.message)})["catch"](message.error)},s};
},{"../api":2,"../assign":3,"../message":14,"./expandable":18}],22:[function(require,module,exports){
var message=require("../message"),api=require("../api"),validate=require("../validate");exports.create=function(e,r){var s={username:ko.observable("").trimmed(),fullname:ko.observable("").trimmed(),type:ko.observable("author"),link:ko.observable("").trimmed(),password:ko.observable("").trimmed(),password_edit:ko.observable(!0),password_text:ko.observable(!1),error:ko.observable(""),creating:!0,roles:e,save:function(e){if(validate.clear(e),s.password_edit()){var r=s.password();""===r?validate.error("user-password","Password is not set."):r.length<6&&validate.error("user-password","Password length must be at least 6.")}var a=s.username();""===a?validate.error("user-username","Username is not set."):a.match(/^[^@]+@[^@]+$/)||validate.error("user-username","Username must be an email address.");var t=s.fullname();""===t&&validate.error("user-fullname","Full name is not set.");var o=s.link();return""!==o&&(o.match(/https?:\/\//)||validate.error("user-link","Link must start with http:// or https:// prefix.")),validate.hasError(e)?!1:(s.$id?api.updateUser(s.$id,s.toJS()).then(function(r){"success"===r.status?(message.info('User "'+s.username()+'" has been updated.'),route.go("users")):validate.formError(e,r.message)})["catch"](message.error):api.saveUser(s.toJS()).then(function(r){"success"===r.status?(message.info('User "'+s.username()+'" has been added.'),route.go("users")):validate.formError(e,r.message)})["catch"](message.error),!1)},toJS:function(){var e={username:s.username(),fullname:s.fullname(),type:s.type(),link:s.link()};return s.password_edit()&&(e.password=s.password()),e}};return s.password_text.subscribe(function(e){document.getElementById("user-password").type=e?"text":"password"}),r?(s.$id=r.$id,s.creating=!1,s.username(r.username),s.fullname(r.fullname),s.type(r.type),s.link(r.link),s.password_edit(!1)):s.fullname("Unnamed"),s};
},{"../api":2,"../message":14,"../validate":16}],23:[function(require,module,exports){
var api=require("../api"),assign=require("../assign"),message=require("../message"),expandable=require("./expandable");exports.create=function(e){var r={editable:!1};return expandable.mixin(r),assign(r,e),r.remove=function(){confirm("Remove the user?")&&api.removeUser(r.$id).then(function(e){"success"===e.status?(message.info('User "'+r.username+'" has been removed.'),route.refresh()):message.error(e.message)})["catch"](message.error)},r};
},{"../api":2,"../assign":3,"../message":14,"./expandable":18}],24:[function(require,module,exports){
var spin=require("./spin"),count=0;module.exports=function(e){return new Promise(function(t,n){var s=new XMLHttpRequest;s.open(e.method||"GET",e.url,!0),Object.keys(e.headers||{}).forEach(function(t){s.setRequestHeader(t,e.headers[t])}),s.onreadystatechange=function(){4===s.readyState&&(count-=1,0===count&&spin.hide(),200!==s.status?n(new Error("Server responded with a status of "+s.status)):t(s.responseText))},0===count&&spin.show(),count+=1,s.send(e.data)})};
},{"./spin":15}]},{},[1])


//# sourceMappingURL=admin.bundle.js.map